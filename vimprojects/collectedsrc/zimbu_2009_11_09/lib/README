ADDING A LIBRARY MODULE

You need to write two files for the module "foo":
- fooloader.zu
- foomodule.zu

fooloader.zu is used the first time they keyword FOO is encountered.  It makes
the module available to the compiler.

foomodule.zu contains the actual code of the library.  Most is written in Zimbu
and defines the interface.  C and/or JavaScript is produced to do the actual
work.


Steps:

1. Look at the other loader and module files and copy one that comes close to
   the new module.  Example:
        cp httploader.zu fooloader.zu
	cp httpmodule.zu foomodule.zu

2. Change the new files to match your module.  E.g., search for HTTP and http
   and change them to FOO and foo.  Adjust the name in the copyright notice.

3. In builtin.zu, add an IMPORT for fooloader.zu.

4. In builtin.zu, prepare() procedure, add:
      availableModules["FOO"] = FOOloader.prepare()

5. In tokenize.zu, add the FOO keyword to the keywords dict:
      "FOO": Token.Type.foo,

6. In Makefile add lib/foomodule.zu and lib/fooloader.zu to the SOURCES.
