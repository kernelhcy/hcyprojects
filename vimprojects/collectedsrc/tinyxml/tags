!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
00fb4215c20a2399ea05ac9b9e7e68a0	docs/classTiXmlComment.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="00fb4215c20a2399ea05ac9b9e7e68a0"><\/a><!-- doxytag: member="TiXmlComment::ToComment" ref="00fb4215c20a2399ea05ac9b9e7e68a0" args="() const " -->$/;"	a
01bc3ab372d35da08efcbbe65ad90c60	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="01bc3ab372d35da08efcbbe65ad90c60"><\/a><!-- doxytag: member="TiXmlElement::TiXmlElement" ref="01bc3ab372d35da08efcbbe65ad90c60" args="(const char *in_value)" -->$/;"	a
024bceb070188df92c2a8d8852dd0853	docs/classTiXmlBase.html	/^<a class="anchor" name="024bceb070188df92c2a8d8852dd0853"><\/a><!-- doxytag: member="TiXmlBase::Row" ref="024bceb070188df92c2a8d8852dd0853" args="() const " -->$/;"	a
02ee557b1a4545c3219ed377c103ec76	docs/classTiXmlDeclaration.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="02ee557b1a4545c3219ed377c103ec76"><\/a><!-- doxytag: member="TiXmlDeclaration::Version" ref="02ee557b1a4545c3219ed377c103ec76" args="() const " -->$/;"	a
0316da31373496c4368ad549bf711394	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0316da31373496c4368ad549bf711394"><\/a><!-- doxytag: member="TiXmlAttribute::SetDoubleValue" ref="0316da31373496c4368ad549bf711394" args="(double _value)" -->$/;"	a
052213522caac3979960e0714063861d	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="052213522caac3979960e0714063861d"><\/a><!-- doxytag: member="TiXmlAttribute::TiXmlAttribute" ref="052213522caac3979960e0714063861d" args="(const std::string &amp;_name, const std::string &amp;_value)" -->$/;"	a
06de5af852668c7e4af0d09c205f0b0d	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="06de5af852668c7e4af0d09c205f0b0d"><\/a><!-- doxytag: member="TiXmlNode::ToUnknown" ref="06de5af852668c7e4af0d09c205f0b0d" args="()" -->$/;"	a
071ba77fd7ab79402fa84b7e9b8607b3	docs/classTiXmlNode.html	/^<a class="anchor" name="071ba77fd7ab79402fa84b7e9b8607b3"><\/a><!-- doxytag: member="TiXmlNode::NextSiblingElement" ref="071ba77fd7ab79402fa84b7e9b8607b3" args="(const char *) const " -->$/;"	a
072492b4be1acdb0db2d03cd8f71ccc4	docs/classTiXmlHandle.html	/^<a class="anchor" name="072492b4be1acdb0db2d03cd8f71ccc4"><\/a><!-- doxytag: member="TiXmlHandle::Child" ref="072492b4be1acdb0db2d03cd8f71ccc4" args="(const char *value, int index) const " -->$/;"	a
07baecb52dd7d8716ae2a48ad0956ee0	docs/classTiXmlVisitor.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="07baecb52dd7d8716ae2a48ad0956ee0"><\/a><!-- doxytag: member="TiXmlVisitor::VisitEnter" ref="07baecb52dd7d8716ae2a48ad0956ee0" args="(const TiXmlDocument &amp;)" -->$/;"	a
07f6200a5956c723c5b52d70f29c46f6	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="07f6200a5956c723c5b52d70f29c46f6"><\/a><!-- doxytag: member="TiXmlNode::FirstChild" ref="07f6200a5956c723c5b52d70f29c46f6" args="(const std::string &amp;_value) const " -->$/;"	a
0960bb7428b3f341da46244229604d73	docs/classTiXmlUnknown.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0960bb7428b3f341da46244229604d73"><\/a><!-- doxytag: member="TiXmlUnknown::Clone" ref="0960bb7428b3f341da46244229604d73" args="() const " -->$/;"	a
0c146fa2fff0157b681594102f48cbc7	docs/classTiXmlNode.html	/^<a class="anchor" name="0c146fa2fff0157b681594102f48cbc7"><\/a><!-- doxytag: member="TiXmlNode::InsertBeforeChild" ref="0c146fa2fff0157b681594102f48cbc7" args="(TiXmlNode *beforeThis, const TiXmlNode &amp;addThis)" -->$/;"	a
0c411e93a27537369479d034cc82da3b	docs/classTiXmlText.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0c411e93a27537369479d034cc82da3b"><\/a><!-- doxytag: member="TiXmlText::Clone" ref="0c411e93a27537369479d034cc82da3b" args="() const " -->$/;"	a
0c49e739a17b9938050c22cd89617fbd	docs/classTiXmlNode.html	/^<a class="anchor" name="0c49e739a17b9938050c22cd89617fbd"><\/a><!-- doxytag: member="TiXmlNode::ReplaceChild" ref="0c49e739a17b9938050c22cd89617fbd" args="(TiXmlNode *replaceThis, const TiXmlNode &amp;withThis)" -->$/;"	a
0c5e7bf8622838417a0d0bfb8f433854	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0c5e7bf8622838417a0d0bfb8f433854"><\/a><!-- doxytag: member="TiXmlPrinter::VisitEnter" ref="0c5e7bf8622838417a0d0bfb8f433854" args="(const TiXmlElement &amp;element, const TiXmlAttribute *firstAttribute)" -->$/;"	a
0cafbf6f236c7f02d12b2bffc2b7976b	docs/classTiXmlText.html	/^<a class="anchor" name="0cafbf6f236c7f02d12b2bffc2b7976b"><\/a><!-- doxytag: member="TiXmlText::Print" ref="0cafbf6f236c7f02d12b2bffc2b7976b" args="(FILE *cfile, int depth) const " -->$/;"	a
0d1dd975d75496778177e35abfe0ec0b	docs/classTiXmlElement.html	/^<a class="anchor" name="0d1dd975d75496778177e35abfe0ec0b"><\/a><!-- doxytag: member="TiXmlElement::SetDoubleAttribute" ref="0d1dd975d75496778177e35abfe0ec0b" args="(const char *name, double value)" -->$/;"	a
0d6662bdc52488b9e12b3c7a0453d028	docs/classTiXmlComment.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0d6662bdc52488b9e12b3c7a0453d028"><\/a><!-- doxytag: member="TiXmlComment::Clone" ref="0d6662bdc52488b9e12b3c7a0453d028" args="() const " -->$/;"	a
0de56b3f2ef14c65091a3b916437b512	docs/classTiXmlBase.html	/^<a class="anchor" name="0de56b3f2ef14c65091a3b916437b512"><\/a><!-- doxytag: member="TiXmlBase::Print" ref="0de56b3f2ef14c65091a3b916437b512" args="(FILE *cfile, int depth) const =0" -->$/;"	a
0ed8348fdc56b72a6b4900ce5bac1849	docs/classTiXmlElement.html	/^<a class="anchor" name="0ed8348fdc56b72a6b4900ce5bac1849"><\/a><!-- doxytag: member="TiXmlElement::Attribute" ref="0ed8348fdc56b72a6b4900ce5bac1849" args="(const char *name, int *i) const " -->$/;"	a
0f799ec645bfb8d8a969e83478f379c1	docs/classTiXmlBase.html	/^<a class="anchor" name="0f799ec645bfb8d8a969e83478f379c1"><\/a><!-- doxytag: member="TiXmlBase::SetCondenseWhiteSpace" ref="0f799ec645bfb8d8a969e83478f379c1" args="(bool condense)" -->$/;"	a
0f874490eac8ca00ee0070765d0e97e3	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0f874490eac8ca00ee0070765d0e97e3"><\/a><!-- doxytag: member="TiXmlAttribute::Value" ref="0f874490eac8ca00ee0070765d0e97e3" args="() const " -->$/;"	a
1025d942a1f328fd742d545e37efdd42	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1025d942a1f328fd742d545e37efdd42"><\/a><!-- doxytag: member="TiXmlDocument::ToDocument" ref="1025d942a1f328fd742d545e37efdd42" args="()" -->$/;"	a
10d2669ccb5e29e02fcb0e4408685ef6	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="10d2669ccb5e29e02fcb0e4408685ef6"><\/a><!-- doxytag: member="TiXmlNode::FirstChild" ref="10d2669ccb5e29e02fcb0e4408685ef6" args="(const std::string &amp;_value)" -->$/;"	a
11f1b4804a460b175ec244eb5724d96d	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="11f1b4804a460b175ec244eb5724d96d"><\/a><!-- doxytag: member="TiXmlPrinter::LineBreak" ref="11f1b4804a460b175ec244eb5724d96d" args="()" -->$/;"	a
1381c17507a130767b1e23afc93b3674	docs/classTiXmlHandle.html	/^<a class="anchor" name="1381c17507a130767b1e23afc93b3674"><\/a><!-- doxytag: member="TiXmlHandle::ToUnknown" ref="1381c17507a130767b1e23afc93b3674" args="() const " -->$/;"	a
16e9ad53e2f5445b14bf325c90aa862c	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="16e9ad53e2f5445b14bf325c90aa862c"><\/a><!-- doxytag: member="TiXmlNode::IterateChildren" ref="16e9ad53e2f5445b14bf325c90aa862c" args="(const std::string &amp;_value, const TiXmlNode *previous)" -->$/;"	a
173617f6dfe902cf484ce5552b950475	docs/classTiXmlBase.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="173617f6dfe902cf484ce5552b950475"><\/a><!-- doxytag: member="TiXmlBase::TiXmlDocument" ref="173617f6dfe902cf484ce5552b950475" args="" -->$/;"	a
173617f6dfe902cf484ce5552b950475	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="173617f6dfe902cf484ce5552b950475"><\/a><!-- doxytag: member="TiXmlNode::TiXmlDocument" ref="173617f6dfe902cf484ce5552b950475" args="" -->$/;"	a
1757c1f4d01e8c9596ffdbd561c76aea	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1757c1f4d01e8c9596ffdbd561c76aea"><\/a><!-- doxytag: member="TiXmlNode::NextSibling" ref="1757c1f4d01e8c9596ffdbd561c76aea" args="(const std::string &amp;_value)" -->$/;"	a
17ebabe36926ef398e78dec0d0ad0378	docs/classTiXmlDocument.html	/^<a class="anchor" name="17ebabe36926ef398e78dec0d0ad0378"><\/a><!-- doxytag: member="TiXmlDocument::Parse" ref="17ebabe36926ef398e78dec0d0ad0378" args="(const char *p, TiXmlParsingData *data=0, TiXmlEncoding encoding=TIXML_DEFAULT_ENCODING)" -->$/;"	a
1853cf2f6e63ad4b4232b4835e0acaf0	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1853cf2f6e63ad4b4232b4835e0acaf0"><\/a><!-- doxytag: member="TiXmlPrinter::VisitExit" ref="1853cf2f6e63ad4b4232b4835e0acaf0" args="(const TiXmlElement &amp;element)" -->$/;"	a
18ae6ed34fed7991ebc220862dfac884	docs/classTiXmlDocument.html	/^<a class="anchor" name="18ae6ed34fed7991ebc220862dfac884"><\/a><!-- doxytag: member="TiXmlDocument::LoadFile" ref="18ae6ed34fed7991ebc220862dfac884" args="(const std::string &amp;filename, TiXmlEncoding encoding=TIXML_DEFAULT_ENCODING)" -->$/;"	a
1afa6aea716511326a608e4c05df4f3a	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1afa6aea716511326a608e4c05df4f3a"><\/a><!-- doxytag: member="TiXmlElement::RemoveAttribute" ref="1afa6aea716511326a608e4c05df4f3a" args="(const std::string &amp;name)" -->$/;"	a
1b94d2f7fa7ab25a5a8e8d4340c449c9	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1b94d2f7fa7ab25a5a8e8d4340c449c9"><\/a><!-- doxytag: member="TiXmlNode::NextSibling" ref="1b94d2f7fa7ab25a5a8e8d4340c449c9" args="(const std::string &amp;_value) const " -->$/;"	a
1c78e92e223a40843f644ba48ef69f67	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1c78e92e223a40843f644ba48ef69f67"><\/a><!-- doxytag: member="TiXmlAttribute::Next" ref="1c78e92e223a40843f644ba48ef69f67" args="() const " -->$/;"	a
1cbaaf8e82c09ad763d52616d75724df	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1cbaaf8e82c09ad763d52616d75724df"><\/a><!-- doxytag: member="TiXmlNode::IterateChildren" ref="1cbaaf8e82c09ad763d52616d75724df" args="(const std::string &amp;_value, const TiXmlNode *previous) const " -->$/;"	a
1dc977bde3e4fe85a8eb9d88a35ef5a4	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1dc977bde3e4fe85a8eb9d88a35ef5a4"><\/a><!-- doxytag: member="TiXmlDocument::ToDocument" ref="1dc977bde3e4fe85a8eb9d88a35ef5a4" args="() const " -->$/;"	a
1e085d3fefd1dbf5ccdbff729931a967	docs/classTiXmlDeclaration.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1e085d3fefd1dbf5ccdbff729931a967"><\/a><!-- doxytag: member="TiXmlDeclaration::ToDeclaration" ref="1e085d3fefd1dbf5ccdbff729931a967" args="() const " -->$/;"	a
1f05828d023150706eeb16d6fb3f6355	docs/classTiXmlNode.html	/^<a class="anchor" name="1f05828d023150706eeb16d6fb3f6355"><\/a><!-- doxytag: member="TiXmlNode::FirstChild" ref="1f05828d023150706eeb16d6fb3f6355" args="(const char *value) const " -->$/;"	a
213377a4070c7e625bae59716b089e5e	docs/classTiXmlPrinter.html	/^<a class="anchor" name="213377a4070c7e625bae59716b089e5e"><\/a><!-- doxytag: member="TiXmlPrinter::SetIndent" ref="213377a4070c7e625bae59716b089e5e" args="(const char *_indent)" -->$/;"	a
218872a0d985ae30e78c55adc4bdb196	docs/classTiXmlBase.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="218872a0d985ae30e78c55adc4bdb196"><\/a><!-- doxytag: member="TiXmlBase::TiXmlNode" ref="218872a0d985ae30e78c55adc4bdb196" args="" -->$/;"	a
21c0aeb0d0a720169ad4ac89523ebe93	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="21c0aeb0d0a720169ad4ac89523ebe93"><\/a><!-- doxytag: member="TiXmlDocument::SaveFile" ref="21c0aeb0d0a720169ad4ac89523ebe93" args="() const " -->$/;"	a
22315a535983b86535cdba3458669e3e	docs/classTiXmlDeclaration.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="22315a535983b86535cdba3458669e3e"><\/a><!-- doxytag: member="TiXmlDeclaration::Accept" ref="22315a535983b86535cdba3458669e3e" args="(TiXmlVisitor *visitor) const " -->$/;"	a
236d7855e1e56ccc7b980630c48c7fd7	docs/classTiXmlHandle.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="236d7855e1e56ccc7b980630c48c7fd7"><\/a><!-- doxytag: member="TiXmlHandle::TiXmlHandle" ref="236d7855e1e56ccc7b980630c48c7fd7" args="(const TiXmlHandle &amp;ref)" -->$/;"	a
24d1112e995e937e4dddb202d4113d4a	docs/classTiXmlHandle.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="24d1112e995e937e4dddb202d4113d4a"><\/a><!-- doxytag: member="TiXmlHandle::FirstChildElement" ref="24d1112e995e937e4dddb202d4113d4a" args="() const " -->$/;"	a
256d0cdbfcfeccae83f3a1c9747a8b63	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="256d0cdbfcfeccae83f3a1c9747a8b63"><\/a><!-- doxytag: member="TiXmlNode::LastChild" ref="256d0cdbfcfeccae83f3a1c9747a8b63" args="(const std::string &amp;_value) const " -->$/;"	a
2598d5f448042c1abbeae4503dd45ff2	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2598d5f448042c1abbeae4503dd45ff2"><\/a><!-- doxytag: member="TiXmlNode::SetValue" ref="2598d5f448042c1abbeae4503dd45ff2" args="(const std::string &amp;_value)" -->$/;"	a
2880ddef53fc7522c99535273954d230	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2880ddef53fc7522c99535273954d230"><\/a><!-- doxytag: member="TiXmlAttribute::DoubleValue" ref="2880ddef53fc7522c99535273954d230" args="() const " -->$/;"	a
298a57287d305904ba6bd96ae6f78d3d	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="298a57287d305904ba6bd96ae6f78d3d"><\/a><!-- doxytag: member="TiXmlAttribute::Name" ref="298a57287d305904ba6bd96ae6f78d3d" args="() const " -->$/;"	a
2a38329ca5d3f28f98ce932b8299ae90	docs/classTiXmlNode.html	/^<a class="anchor" name="2a38329ca5d3f28f98ce932b8299ae90"><\/a><!-- doxytag: member="TiXmlNode::SetValue" ref="2a38329ca5d3f28f98ce932b8299ae90" args="(const char *_value)" -->$/;"	a
2c6e58fb99bfa76cc613f16840022225	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2c6e58fb99bfa76cc613f16840022225"><\/a><!-- doxytag: member="TiXmlDocument::TiXmlDocument" ref="2c6e58fb99bfa76cc613f16840022225" args="(const std::string &amp;documentName)" -->$/;"	a
2dae44178f668b3cb48101be4f2236a0	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2dae44178f668b3cb48101be4f2236a0"><\/a><!-- doxytag: member="TiXmlAttribute::SetValue" ref="2dae44178f668b3cb48101be4f2236a0" args="(const char *_value)" -->$/;"	a
2e61c0b89a77e36a0e8c60490003cb46	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2e61c0b89a77e36a0e8c60490003cb46"><\/a><!-- doxytag: member="TiXmlNode::NextSibling" ref="2e61c0b89a77e36a0e8c60490003cb46" args="(const char *) const " -->$/;"	a
31ba089a40fb5a1869750fce09b0bacb	docs/classTiXmlUnknown.html	/^<a class="anchor" name="31ba089a40fb5a1869750fce09b0bacb"><\/a><!-- doxytag: member="TiXmlUnknown::Print" ref="31ba089a40fb5a1869750fce09b0bacb" args="(FILE *cfile, int depth) const " -->$/;"	a
327ad4bbd90073c5dfc931b07314f5f7	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="327ad4bbd90073c5dfc931b07314f5f7"><\/a><!-- doxytag: member="TiXmlNode::FirstChildElement" ref="327ad4bbd90073c5dfc931b07314f5f7" args="(const std::string &amp;_value) const " -->$/;"	a
37e7802ef17bc03ebe5ae79bf0713d47	docs/classTiXmlComment.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="37e7802ef17bc03ebe5ae79bf0713d47"><\/a><!-- doxytag: member="TiXmlComment::TiXmlComment" ref="37e7802ef17bc03ebe5ae79bf0713d47" args="(const char *_value)" -->$/;"	a
383e06a0787f7063953934867990f849	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="383e06a0787f7063953934867990f849"><\/a><!-- doxytag: member="TiXmlNode::ToComment" ref="383e06a0787f7063953934867990f849" args="()" -->$/;"	a
399b8ebca5cd14664974a32d2ce029e5	docs/classTiXmlVisitor.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="399b8ebca5cd14664974a32d2ce029e5"><\/a><!-- doxytag: member="TiXmlVisitor::Visit" ref="399b8ebca5cd14664974a32d2ce029e5" args="(const TiXmlText &amp;)" -->$/;"	a
3b618d1c30c25e4b7a71f31a595ee298	docs/classTiXmlDeclaration.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3b618d1c30c25e4b7a71f31a595ee298"><\/a><!-- doxytag: member="TiXmlDeclaration::TiXmlDeclaration" ref="3b618d1c30c25e4b7a71f31a595ee298" args="(const char *_version, const char *_encoding, const char *_standalone)" -->$/;"	a
3bd4daf44309b41f5813a833caa0d1c9	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3bd4daf44309b41f5813a833caa0d1c9"><\/a><!-- doxytag: member="TiXmlPrinter::Str" ref="3bd4daf44309b41f5813a833caa0d1c9" args="()" -->$/;"	a
3d4fae0463f3f03679ba0b7cf6f2df52	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3d4fae0463f3f03679ba0b7cf6f2df52"><\/a><!-- doxytag: member="TiXmlDocument::SaveFile" ref="3d4fae0463f3f03679ba0b7cf6f2df52" args="(const std::string &amp;filename) const " -->$/;"	a
3ddfbcac78fbea041fad57e5c6d60a03	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3ddfbcac78fbea041fad57e5c6d60a03"><\/a><!-- doxytag: member="TiXmlNode::ToText" ref="3ddfbcac78fbea041fad57e5c6d60a03" args="()" -->$/;"	a
4027136ca820ff4a636b607231b6a6df	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4027136ca820ff4a636b607231b6a6df"><\/a><!-- doxytag: member="TiXmlNode::ToDeclaration" ref="4027136ca820ff4a636b607231b6a6df" args="()" -->$/;"	a
40fc2e3c1a955e2f78e1a32350d180e7	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="40fc2e3c1a955e2f78e1a32350d180e7"><\/a><!-- doxytag: member="TiXmlElement::TiXmlElement" ref="40fc2e3c1a955e2f78e1a32350d180e7" args="(const std::string &amp;_value)" -->$/;"	a
41f6fe7200864d1dca663d230caf8db6	docs/classTiXmlDocument.html	/^<a class="anchor" name="41f6fe7200864d1dca663d230caf8db6"><\/a><!-- doxytag: member="TiXmlDocument::LoadFile" ref="41f6fe7200864d1dca663d230caf8db6" args="(FILE *, TiXmlEncoding encoding=TIXML_DEFAULT_ENCODING)" -->$/;"	a
439792f6183a3d3fb6f2bc2b16fa5691	docs/classTiXmlText.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="439792f6183a3d3fb6f2bc2b16fa5691"><\/a><!-- doxytag: member="TiXmlText::TiXmlText" ref="439792f6183a3d3fb6f2bc2b16fa5691" args="(const std::string &amp;initValue)" -->$/;"	a
44c8eee26bbe2d1b2762038df9dde2f0	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="44c8eee26bbe2d1b2762038df9dde2f0"><\/a><!-- doxytag: member="TiXmlNode::FirstChild" ref="44c8eee26bbe2d1b2762038df9dde2f0" args="() const " -->$/;"	a
4508cc3a2d7a98e96a54cc09c37a78a4	docs/classTiXmlNode.html	/^<a class="anchor" name="4508cc3a2d7a98e96a54cc09c37a78a4"><\/a><!-- doxytag: member="TiXmlNode::Clone" ref="4508cc3a2d7a98e96a54cc09c37a78a4" args="() const =0" -->$/;"	a
49675b74357ba2aae124657a9a1ef465	docs/classTiXmlHandle.html	/^<a class="anchor" name="49675b74357ba2aae124657a9a1ef465"><\/a><!-- doxytag: member="TiXmlHandle::Unknown" ref="49675b74357ba2aae124657a9a1ef465" args="() const " -->$/;"	a
4968661cab4a1f44a23329c6f8db1907	docs/classTiXmlDocument.html	/^<a class="anchor" name="4968661cab4a1f44a23329c6f8db1907"><\/a><!-- doxytag: member="TiXmlDocument::Clone" ref="4968661cab4a1f44a23329c6f8db1907" args="() const " -->$/;"	a
4ac53a652296203a5b5e13854d923586	docs/classTiXmlHandle.html	/^<a class="anchor" name="4ac53a652296203a5b5e13854d923586"><\/a><!-- doxytag: member="TiXmlHandle::ToText" ref="4ac53a652296203a5b5e13854d923586" args="() const " -->$/;"	a
4be1e37e69e3858c59635aa947174fe6	docs/classTiXmlPrinter.html	/^<a class="anchor" name="4be1e37e69e3858c59635aa947174fe6"><\/a><!-- doxytag: member="TiXmlPrinter::SetLineBreak" ref="4be1e37e69e3858c59635aa947174fe6" args="(const char *_lineBreak)" -->$/;"	a
4c852a889c02cf251117fd1d9fe1845f	docs/classTiXmlDocument.html	/^<a class="anchor" name="4c852a889c02cf251117fd1d9fe1845f"><\/a><!-- doxytag: member="TiXmlDocument::LoadFile" ref="4c852a889c02cf251117fd1d9fe1845f" args="(TiXmlEncoding encoding=TIXML_DEFAULT_ENCODING)" -->$/;"	a
506958e34406729a4e4c5326ea39d081	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="506958e34406729a4e4c5326ea39d081"><\/a><!-- doxytag: member="TiXmlNode::NextSiblingElement" ref="506958e34406729a4e4c5326ea39d081" args="(const std::string &amp;_value)" -->$/;"	a
516054c9073647d6cb29b6abe9fa0592	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="516054c9073647d6cb29b6abe9fa0592"><\/a><!-- doxytag: member="TiXmlElement::FirstAttribute" ref="516054c9073647d6cb29b6abe9fa0592" args="() const " -->$/;"	a
51dac56316f89b35bdb7d0d433ba988e	docs/classTiXmlDocument.html	/^<a class="anchor" name="51dac56316f89b35bdb7d0d433ba988e"><\/a><!-- doxytag: member="TiXmlDocument::SetTabSize" ref="51dac56316f89b35bdb7d0d433ba988e" args="(int _tabsize)" -->$/;"	a
52ef17e7080df2490cf87bde380685ab	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="52ef17e7080df2490cf87bde380685ab"><\/a><!-- doxytag: member="TiXmlNode::operator&lt;&lt;" ref="52ef17e7080df2490cf87bde380685ab" args="(std::string &amp;out, const TiXmlNode &amp;base)" -->$/;"	a
53a60e7a528627b31af3161972cc7fa2	docs/classTiXmlVisitor.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="53a60e7a528627b31af3161972cc7fa2"><\/a><!-- doxytag: member="TiXmlVisitor::Visit" ref="53a60e7a528627b31af3161972cc7fa2" args="(const TiXmlComment &amp;)" -->$/;"	a
56979767deca794376b1dfa69a525b2a	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="56979767deca794376b1dfa69a525b2a"><\/a><!-- doxytag: member="TiXmlElement::RemoveAttribute" ref="56979767deca794376b1dfa69a525b2a" args="(const char *name)" -->$/;"	a
57b99d5c97d67a42b9752f5210a1ba5e	docs/classTiXmlNode.html	/^<a class="anchor" name="57b99d5c97d67a42b9752f5210a1ba5e"><\/a><!-- doxytag: member="TiXmlNode::Type" ref="57b99d5c97d67a42b9752f5210a1ba5e" args="() const " -->$/;"	a
5bdd49327eec1e609b7d22af706b8316	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5bdd49327eec1e609b7d22af706b8316"><\/a><!-- doxytag: member="TiXmlNode::PreviousSibling" ref="5bdd49327eec1e609b7d22af706b8316" args="(const char *) const " -->$/;"	a
5d29442ae46de6d0168429156197bfc6	docs/classTiXmlNode.html	/^<a class="anchor" name="5d29442ae46de6d0168429156197bfc6"><\/a><!-- doxytag: member="TiXmlNode::LinkEndChild" ref="5d29442ae46de6d0168429156197bfc6" args="(TiXmlNode *addThis)" -->$/;"	a
5d974231f9e9a2f0542f15f3a46cdb76	docs/classTiXmlDeclaration.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5d974231f9e9a2f0542f15f3a46cdb76"><\/a><!-- doxytag: member="TiXmlDeclaration::Encoding" ref="5d974231f9e9a2f0542f15f3a46cdb76" args="() const " -->$/;"	a
6432d2b2495f6caf9cb4278df706a031	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6432d2b2495f6caf9cb4278df706a031"><\/a><!-- doxytag: member="TiXmlNode::LastChild" ref="6432d2b2495f6caf9cb4278df706a031" args="()" -->$/;"	a
6559a530ca6763fc301a14d77ed28c17	docs/classTiXmlBase.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6559a530ca6763fc301a14d77ed28c17"><\/a><!-- doxytag: member="TiXmlBase::GetUserData" ref="6559a530ca6763fc301a14d77ed28c17" args="()" -->$/;"	a
658276f57d35d5d4256d1dc1a2c398ab	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="658276f57d35d5d4256d1dc1a2c398ab"><\/a><!-- doxytag: member="TiXmlNode::PreviousSibling" ref="658276f57d35d5d4256d1dc1a2c398ab" args="(const std::string &amp;_value) const " -->$/;"	a
66b33edd76c538b462f789b797a4fdf2	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="66b33edd76c538b462f789b797a4fdf2"><\/a><!-- doxytag: member="TiXmlPrinter::VisitExit" ref="66b33edd76c538b462f789b797a4fdf2" args="(const TiXmlDocument &amp;doc)" -->$/;"	a
67c9fd22940e8c47f706a72cdd2e332c	docs/classTiXmlUnknown.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="67c9fd22940e8c47f706a72cdd2e332c"><\/a><!-- doxytag: member="TiXmlUnknown::ToUnknown" ref="67c9fd22940e8c47f706a72cdd2e332c" args="()" -->$/;"	a
69772c9202f70553f940b15c06b07be3	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="69772c9202f70553f940b15c06b07be3"><\/a><!-- doxytag: member="TiXmlNode::LastChild" ref="69772c9202f70553f940b15c06b07be3" args="(const std::string &amp;_value)" -->$/;"	a
6a4c8ac28ee7a745d059db6691e03bae	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6a4c8ac28ee7a745d059db6691e03bae"><\/a><!-- doxytag: member="TiXmlNode::ToDocument" ref="6a4c8ac28ee7a745d059db6691e03bae" args="()" -->$/;"	a
6b316527aaa8da0370cd68c22a5a0f5f	docs/classTiXmlComment.html	/^<a class="anchor" name="6b316527aaa8da0370cd68c22a5a0f5f"><\/a><!-- doxytag: member="TiXmlComment::Print" ref="6b316527aaa8da0370cd68c22a5a0f5f" args="(FILE *cfile, int depth) const " -->$/;"	a
6bd3d1daddcaeb9543c24bfd090969ce	docs/classTiXmlDeclaration.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6bd3d1daddcaeb9543c24bfd090969ce"><\/a><!-- doxytag: member="TiXmlDeclaration::ToDeclaration" ref="6bd3d1daddcaeb9543c24bfd090969ce" args="()" -->$/;"	a
6bd8c315c1acb09e34107b8736505948	docs/classTiXmlBase.html	/^<a class="anchor" name="6bd8c315c1acb09e34107b8736505948"><\/a><!-- doxytag: member="TiXmlBase::EncodeString" ref="6bd8c315c1acb09e34107b8736505948" args="(const TIXML_STRING &amp;str, TIXML_STRING *out)" -->$/;"	a
6d9e505619d39bf50bfd9609c9169ea5	docs/classTiXmlNode.html	/^<a class="anchor" name="6d9e505619d39bf50bfd9609c9169ea5"><\/a><!-- doxytag: member="TiXmlNode::ValueStr" ref="6d9e505619d39bf50bfd9609c9169ea5" args="() const " -->$/;"	a
6dfc01a6e5d58e56acd537dfd3bdeb29	docs/classTiXmlDocument.html	/^<a class="anchor" name="6dfc01a6e5d58e56acd537dfd3bdeb29"><\/a><!-- doxytag: member="TiXmlDocument::Error" ref="6dfc01a6e5d58e56acd537dfd3bdeb29" args="() const " -->$/;"	a
6ebbfe333fe76cd834bd6cbcca3130cf	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6ebbfe333fe76cd834bd6cbcca3130cf"><\/a><!-- doxytag: member="TiXmlAttribute::Previous" ref="6ebbfe333fe76cd834bd6cbcca3130cf" args="() const " -->$/;"	a
708e7f953df61d4d2d12f73171550a4b	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="708e7f953df61d4d2d12f73171550a4b"><\/a><!-- doxytag: member="TiXmlNode::Clear" ref="708e7f953df61d4d2d12f73171550a4b" args="()" -->$/;"	a
711e7d65d4af9ec70977568d2451fb1c	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="711e7d65d4af9ec70977568d2451fb1c"><\/a><!-- doxytag: member="TiXmlPrinter::Visit" ref="711e7d65d4af9ec70977568d2451fb1c" args="(const TiXmlText &amp;text)" -->$/;"	a
71a81b2afb0d42be1543d1c404dee6f5	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="71a81b2afb0d42be1543d1c404dee6f5"><\/a><!-- doxytag: member="TiXmlElement::Accept" ref="71a81b2afb0d42be1543d1c404dee6f5" args="(TiXmlVisitor *visitor) const " -->$/;"	a
72abed96dc9667ab9e0a2a275301bb1c	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="72abed96dc9667ab9e0a2a275301bb1c"><\/a><!-- doxytag: member="TiXmlNode::ToElement" ref="72abed96dc9667ab9e0a2a275301bb1c" args="() const " -->$/;"	a
73acf929d49d10bd0e5fb3d31b0372d1	docs/classTiXmlNode.html	/^<a class="anchor" name="73acf929d49d10bd0e5fb3d31b0372d1"><\/a><!-- doxytag: member="TiXmlNode::NextSiblingElement" ref="73acf929d49d10bd0e5fb3d31b0372d1" args="() const " -->$/;"	a
7572d0af9d1e696ee3f05d8bb5ebb463	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7572d0af9d1e696ee3f05d8bb5ebb463"><\/a><!-- doxytag: member="TiXmlNode::NextSiblingElement" ref="7572d0af9d1e696ee3f05d8bb5ebb463" args="(const std::string &amp;_value) const " -->$/;"	a
759d0b76fb8fcf765ecab243bc14f05e	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="759d0b76fb8fcf765ecab243bc14f05e"><\/a><!-- doxytag: member="TiXmlAttribute::TiXmlAttribute" ref="759d0b76fb8fcf765ecab243bc14f05e" args="(const char *_name, const char *_value)" -->$/;"	a
77943eb90d12c2892b1337a9f5918b41	docs/classTiXmlNode.html	/^<a class="anchor" name="77943eb90d12c2892b1337a9f5918b41"><\/a><!-- doxytag: member="TiXmlNode::Value" ref="77943eb90d12c2892b1337a9f5918b41" args="() const " -->$/;"	a
799f4f0388570cbb54c0d3c345fef7c1	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="799f4f0388570cbb54c0d3c345fef7c1"><\/a><!-- doxytag: member="TiXmlPrinter::VisitEnter" ref="799f4f0388570cbb54c0d3c345fef7c1" args="(const TiXmlDocument &amp;doc)" -->$/;"	a
7cf459186040141cda7a180a6585ce2e	docs/classTiXmlDeclaration.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7cf459186040141cda7a180a6585ce2e"><\/a><!-- doxytag: member="TiXmlDeclaration::Clone" ref="7cf459186040141cda7a180a6585ce2e" args="() const " -->$/;"	a
7e065df640116a62ea4f4b7da5449cc8	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7e065df640116a62ea4f4b7da5449cc8"><\/a><!-- doxytag: member="TiXmlAttribute::SetIntValue" ref="7e065df640116a62ea4f4b7da5449cc8" args="(int _value)" -->$/;"	a
7e284d607d275c51dac1adb58159ce28	docs/classTiXmlVisitor.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7e284d607d275c51dac1adb58159ce28"><\/a><!-- doxytag: member="TiXmlVisitor::Visit" ref="7e284d607d275c51dac1adb58159ce28" args="(const TiXmlUnknown &amp;)" -->$/;"	a
7f1d7291880534c1e5cdeb392d8c1f45	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7f1d7291880534c1e5cdeb392d8c1f45"><\/a><!-- doxytag: member="TiXmlNode::FirstChildElement" ref="7f1d7291880534c1e5cdeb392d8c1f45" args="(const std::string &amp;_value)" -->$/;"	a
80e397fa973cf5323e33b07154b024f3	docs/classTiXmlNode.html	/^<a class="anchor" name="80e397fa973cf5323e33b07154b024f3"><\/a><!-- doxytag: member="TiXmlNode::GetDocument" ref="80e397fa973cf5323e33b07154b024f3" args="() const " -->$/;"	a
80ed65b1d194c71c6c9986ae42337d7d	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="80ed65b1d194c71c6c9986ae42337d7d"><\/a><!-- doxytag: member="TiXmlElement::SetAttribute" ref="80ed65b1d194c71c6c9986ae42337d7d" args="(const std::string &amp;name, const std::string &amp;_value)" -->$/;"	a
836eded4920ab9e9ef28496f48cd95a2	docs/classTiXmlNode.html	/^<a class="anchor" name="836eded4920ab9e9ef28496f48cd95a2"><\/a><!-- doxytag: member="TiXmlNode::NodeType" ref="836eded4920ab9e9ef28496f48cd95a2" args="" -->$/;"	a
83c13d6b980064b30f989f9a35498979	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="83c13d6b980064b30f989f9a35498979"><\/a><!-- doxytag: member="TiXmlPrinter::Visit" ref="83c13d6b980064b30f989f9a35498979" args="(const TiXmlComment &amp;comment)" -->$/;"	a
8483d4415ce9de6c4fa8f63d067d5de6	docs/classTiXmlText.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8483d4415ce9de6c4fa8f63d067d5de6"><\/a><!-- doxytag: member="TiXmlText::Accept" ref="8483d4415ce9de6c4fa8f63d067d5de6" args="(TiXmlVisitor *content) const " -->$/;"	a
859eede9597d3e0355b77757be48735e	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="859eede9597d3e0355b77757be48735e"><\/a><!-- doxytag: member="TiXmlPrinter::CStr" ref="859eede9597d3e0355b77757be48735e" args="()" -->$/;"	a
86191b49f9177be132b85b14655f1381	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="86191b49f9177be132b85b14655f1381"><\/a><!-- doxytag: member="TiXmlElement::LastAttribute" ref="86191b49f9177be132b85b14655f1381" args="() const " -->$/;"	a
8621196ba3705fa226bef4a761cc51b6	docs/classTiXmlNode.html	/^<a class="anchor" name="8621196ba3705fa226bef4a761cc51b6"><\/a><!-- doxytag: member="TiXmlNode::IterateChildren" ref="8621196ba3705fa226bef4a761cc51b6" args="(const TiXmlNode *previous) const " -->$/;"	a
86cd49cfb17a844c0010b3136ac966c7	docs/classTiXmlNode.html	/^<a class="anchor" name="86cd49cfb17a844c0010b3136ac966c7"><\/a><!-- doxytag: member="TiXmlNode::operator&lt;&lt;" ref="86cd49cfb17a844c0010b3136ac966c7" args="(std::ostream &amp;out, const TiXmlNode &amp;base)" -->$/;"	a
8701fda1fa31b25abbc9c0df42da10e8	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8701fda1fa31b25abbc9c0df42da10e8"><\/a><!-- doxytag: member="TiXmlDocument::Print" ref="8701fda1fa31b25abbc9c0df42da10e8" args="(FILE *cfile, int depth=0) const " -->$/;"	a
87705c3ccf9ee9417beb4f7cbacd4d33	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="87705c3ccf9ee9417beb4f7cbacd4d33"><\/a><!-- doxytag: member="TiXmlAttribute::ValueStr" ref="87705c3ccf9ee9417beb4f7cbacd4d33" args="() const " -->$/;"	a
8786475b9d1f1518492e3a46704c7ef0	docs/classTiXmlHandle.html	/^<a class="anchor" name="8786475b9d1f1518492e3a46704c7ef0"><\/a><!-- doxytag: member="TiXmlHandle::ChildElement" ref="8786475b9d1f1518492e3a46704c7ef0" args="(int index) const " -->$/;"	a
879cdf5e981b8b2d2ef82f2546dd28fb	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="879cdf5e981b8b2d2ef82f2546dd28fb"><\/a><!-- doxytag: member="TiXmlDocument::LoadFile" ref="879cdf5e981b8b2d2ef82f2546dd28fb" args="(const char *filename, TiXmlEncoding encoding=TIXML_DEFAULT_ENCODING)" -->$/;"	a
895bf34ffad17f7439ab2a52b9651648	docs/classTiXmlText.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="895bf34ffad17f7439ab2a52b9651648"><\/a><!-- doxytag: member="TiXmlText::ToText" ref="895bf34ffad17f7439ab2a52b9651648" args="() const " -->$/;"	a
898d7730ecc341f0bffc7a9dadbf1ce7	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="898d7730ecc341f0bffc7a9dadbf1ce7"><\/a><!-- doxytag: member="TiXmlElement::QueryDoubleAttribute" ref="898d7730ecc341f0bffc7a9dadbf1ce7" args="(const char *name, double *_value) const " -->$/;"	a
8a4cda4b15c29f64cff419309aebed08	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8a4cda4b15c29f64cff419309aebed08"><\/a><!-- doxytag: member="TiXmlNode::ToDocument" ref="8a4cda4b15c29f64cff419309aebed08" args="() const " -->$/;"	a
8c61f64ae9365d89c264f289085541f8	docs/classTiXmlHandle.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8c61f64ae9365d89c264f289085541f8"><\/a><!-- doxytag: member="TiXmlHandle::FirstChild" ref="8c61f64ae9365d89c264f289085541f8" args="(const char *value) const " -->$/;"	a
95a46a52c525992d6b4ee08beb14cd69	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="95a46a52c525992d6b4ee08beb14cd69"><\/a><!-- doxytag: member="TiXmlNode::ToText" ref="95a46a52c525992d6b4ee08beb14cd69" args="() const " -->$/;"	a
979a3f850984a176ee884e394c7eed2d	docs/classTiXmlHandle.html	/^<a class="anchor" name="979a3f850984a176ee884e394c7eed2d"><\/a><!-- doxytag: member="TiXmlHandle::ChildElement" ref="979a3f850984a176ee884e394c7eed2d" args="(const char *value, int index) const " -->$/;"	a
9cfa3c8179873fd485d83003b114f8e1	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9cfa3c8179873fd485d83003b114f8e1"><\/a><!-- doxytag: member="TiXmlAttribute::TiXmlAttribute" ref="9cfa3c8179873fd485d83003b114f8e1" args="()" -->$/;"	a
9d0f689f6e09ea494ea547be8d79c25e	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9d0f689f6e09ea494ea547be8d79c25e"><\/a><!-- doxytag: member="TiXmlDocument::ErrorDesc" ref="9d0f689f6e09ea494ea547be8d79c25e" args="() const " -->$/;"	a
9def86337ea7a755eb41cac980f60c7a	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9def86337ea7a755eb41cac980f60c7a"><\/a><!-- doxytag: member="TiXmlElement::ToElement" ref="9def86337ea7a755eb41cac980f60c7a" args="()" -->$/;"	a
9f43e6984fc7d4afd6eb32714c6b7b72	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9f43e6984fc7d4afd6eb32714c6b7b72"><\/a><!-- doxytag: member="TiXmlNode::ToDeclaration" ref="9f43e6984fc7d4afd6eb32714c6b7b72" args="() const " -->$/;"	a
9f5e84335708fde98400230f9f12659c	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9f5e84335708fde98400230f9f12659c"><\/a><!-- doxytag: member="TiXmlDocument::TiXmlDocument" ref="9f5e84335708fde98400230f9f12659c" args="()" -->$/;"	a
9fc739c8a18d160006f82572fc143d13	docs/classTiXmlHandle.html	/^<a class="anchor" name="9fc739c8a18d160006f82572fc143d13"><\/a><!-- doxytag: member="TiXmlHandle::Text" ref="9fc739c8a18d160006f82572fc143d13" args="() const " -->$/;"	a
9ff06afc033d7ef730ec7c6825b97ad9	docs/classTiXmlDeclaration.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9ff06afc033d7ef730ec7c6825b97ad9"><\/a><!-- doxytag: member="TiXmlDeclaration::Standalone" ref="9ff06afc033d7ef730ec7c6825b97ad9" args="() const " -->$/;"	a
AR	Makefile	/^AR     := ar rc$/;"	m
Accept	tinyxml.cpp	/^bool TiXmlComment::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlComment
Accept	tinyxml.cpp	/^bool TiXmlDeclaration::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlDeclaration
Accept	tinyxml.cpp	/^bool TiXmlDocument::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlDocument
Accept	tinyxml.cpp	/^bool TiXmlElement::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlElement
Accept	tinyxml.cpp	/^bool TiXmlText::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlText
Accept	tinyxml.cpp	/^bool TiXmlUnknown::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlUnknown
Add	tinyxml.cpp	/^void TiXmlAttributeSet::Add( TiXmlAttribute* addMe )$/;"	f	class:TiXmlAttributeSet
Attribute	tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name ) const$/;"	f	class:TiXmlElement
Attribute	tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name, double* d ) const$/;"	f	class:TiXmlElement
Attribute	tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name, int* i ) const$/;"	f	class:TiXmlElement
Attribute	tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name ) const$/;"	f	class:TiXmlElement
Attribute	tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name, double* d ) const$/;"	f	class:TiXmlElement
Attribute	tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name, int* i ) const$/;"	f	class:TiXmlElement
Blank	tinyxmlparser.cpp	/^bool TiXmlText::Blank() const$/;"	f	class:TiXmlText
CC	Makefile	/^CC     := gcc$/;"	m
CDATA	tinyxml.h	/^	bool CDATA() const				{ return cdata; }$/;"	f	class:TiXmlText
CFLAGS	Makefile	/^   CFLAGS       := ${DEBUG_CFLAGS}$/;"	m
CFLAGS	Makefile	/^   CFLAGS       := ${RELEASE_CFLAGS}$/;"	m
CFLAGS	Makefile	/^   CFLAGS   := ${CFLAGS} -pg -O3$/;"	m
CFLAGS	Makefile	/^CFLAGS   := ${CFLAGS}   ${DEFS}$/;"	m
COMMENT	tinyxml.h	/^		COMMENT,$/;"	e	enum:TiXmlNode::NodeType
CStr	tinyxml.h	/^	const char* CStr()								{ return buffer.c_str(); }$/;"	f	class:TiXmlPrinter
CXX	Makefile	/^CXX    := g++$/;"	m
CXXFLAGS	Makefile	/^   CXXFLAGS     := ${DEBUG_CXXFLAGS}$/;"	m
CXXFLAGS	Makefile	/^   CXXFLAGS     := ${RELEASE_CXXFLAGS}$/;"	m
CXXFLAGS	Makefile	/^   CXXFLAGS := ${CXXFLAGS} -pg -O3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS := ${CXXFLAGS} ${DEFS}$/;"	m
Child	tinyxml.cpp	/^TiXmlHandle TiXmlHandle::Child( const char* value, int count ) const$/;"	f	class:TiXmlHandle
Child	tinyxml.cpp	/^TiXmlHandle TiXmlHandle::Child( int count ) const$/;"	f	class:TiXmlHandle
Child	tinyxml.h	/^	TiXmlHandle Child( const std::string& _value, int index ) const			{ return Child( _value.c_str(), index ); }$/;"	f	class:TiXmlHandle
ChildElement	tinyxml.cpp	/^TiXmlHandle TiXmlHandle::ChildElement( const char* value, int count ) const$/;"	f	class:TiXmlHandle
ChildElement	tinyxml.cpp	/^TiXmlHandle TiXmlHandle::ChildElement( int count ) const$/;"	f	class:TiXmlHandle
ChildElement	tinyxml.h	/^	TiXmlHandle ChildElement( const std::string& _value, int index ) const	{ return ChildElement( _value.c_str(), index ); }$/;"	f	class:TiXmlHandle
Clear	tinyxml.cpp	/^void TiXmlNode::Clear()$/;"	f	class:TiXmlNode
Clear	tinyxml.h	/^	void Clear()		{ row = col = -1; }$/;"	f	struct:TiXmlCursor
ClearError	tinyxml.h	/^	void ClearError()						{	error = false; $/;"	f	class:TiXmlDocument
ClearThis	tinyxml.cpp	/^void TiXmlElement::ClearThis()$/;"	f	class:TiXmlElement
Clone	tinyxml.cpp	/^TiXmlNode* TiXmlComment::Clone() const$/;"	f	class:TiXmlComment
Clone	tinyxml.cpp	/^TiXmlNode* TiXmlDeclaration::Clone() const$/;"	f	class:TiXmlDeclaration
Clone	tinyxml.cpp	/^TiXmlNode* TiXmlDocument::Clone() const$/;"	f	class:TiXmlDocument
Clone	tinyxml.cpp	/^TiXmlNode* TiXmlElement::Clone() const$/;"	f	class:TiXmlElement
Clone	tinyxml.cpp	/^TiXmlNode* TiXmlText::Clone() const$/;"	f	class:TiXmlText
Clone	tinyxml.cpp	/^TiXmlNode* TiXmlUnknown::Clone() const$/;"	f	class:TiXmlUnknown
Column	tinyxml.h	/^	int Column() const		{ return location.col + 1; }	\/\/\/< See Row()$/;"	f	class:TiXmlBase
ConvertUTF32ToUTF8	tinyxmlparser.cpp	/^void TiXmlBase::ConvertUTF32ToUTF8( unsigned long input, char* output, int* length )$/;"	f	class:TiXmlBase
CopyTo	tinyxml.cpp	/^void TiXmlComment::CopyTo( TiXmlComment* target ) const$/;"	f	class:TiXmlComment
CopyTo	tinyxml.cpp	/^void TiXmlDeclaration::CopyTo( TiXmlDeclaration* target ) const$/;"	f	class:TiXmlDeclaration
CopyTo	tinyxml.cpp	/^void TiXmlDocument::CopyTo( TiXmlDocument* target ) const$/;"	f	class:TiXmlDocument
CopyTo	tinyxml.cpp	/^void TiXmlElement::CopyTo( TiXmlElement* target ) const$/;"	f	class:TiXmlElement
CopyTo	tinyxml.cpp	/^void TiXmlNode::CopyTo( TiXmlNode* target ) const$/;"	f	class:TiXmlNode
CopyTo	tinyxml.cpp	/^void TiXmlText::CopyTo( TiXmlText* target ) const$/;"	f	class:TiXmlText
CopyTo	tinyxml.cpp	/^void TiXmlUnknown::CopyTo( TiXmlUnknown* target ) const$/;"	f	class:TiXmlUnknown
Cursor	tinyxmlparser.cpp	/^	const TiXmlCursor& Cursor()	{ return cursor; }$/;"	f	class:TiXmlParsingData
DEBUG	Makefile	/^DEBUG          := YES$/;"	m
DEBUG	tinyxml.h	43;"	d
DEBUG_CFLAGS	Makefile	/^DEBUG_CFLAGS     := -Wall -Wno-format -g -DDEBUG$/;"	m
DEBUG_CXXFLAGS	Makefile	/^DEBUG_CXXFLAGS   := ${DEBUG_CFLAGS} $/;"	m
DEBUG_LDFLAGS	Makefile	/^DEBUG_LDFLAGS    := -g$/;"	m
DECLARATION	tinyxml.h	/^		DECLARATION,$/;"	e	enum:TiXmlNode::NodeType
DEFS	Makefile	/^  DEFS := -DTIXML_USE_STL$/;"	m
DEFS	Makefile	/^  DEFS :=$/;"	m
DOCUMENT	tinyxml.h	/^		DOCUMENT,$/;"	e	enum:TiXmlNode::NodeType
DoIndent	tinyxml.h	/^	void DoIndent()	{$/;"	f	class:TiXmlPrinter
DoLineBreak	tinyxml.h	/^	void DoLineBreak() {$/;"	f	class:TiXmlPrinter
DoubleValue	tinyxml.cpp	/^double  TiXmlAttribute::DoubleValue() const$/;"	f	class:TiXmlAttribute
ELEMENT	tinyxml.h	/^		ELEMENT,$/;"	e	enum:TiXmlNode::NodeType
Element	tinyxml.h	/^	TiXmlElement* Element() const	{ return ToElement(); }$/;"	f	class:TiXmlHandle
EncodeString	tinyxml.cpp	/^void TiXmlBase::EncodeString( const TIXML_STRING& str, TIXML_STRING* outString )$/;"	f	class:TiXmlBase
Encoding	tinyxml.h	/^	const char *Encoding() const		{ return encoding.c_str (); }$/;"	f	class:TiXmlDeclaration
Entity	tinyxml.h	/^	struct Entity$/;"	s	class:TiXmlBase
Error	tinyxml.h	/^	bool Error() const						{ return error; }$/;"	f	class:TiXmlDocument
ErrorCol	tinyxml.h	/^	int ErrorCol() const	{ return errorLocation.col+1; }	\/\/\/< The column where the error occured. See ErrorRow()$/;"	f	class:TiXmlDocument
ErrorDesc	tinyxml.h	/^	const char * ErrorDesc() const	{ return errorDesc.c_str (); }$/;"	f	class:TiXmlDocument
ErrorId	tinyxml.h	/^	int ErrorId()	const				{ return errorId; }$/;"	f	class:TiXmlDocument
ErrorRow	tinyxml.h	/^	int ErrorRow() const	{ return errorLocation.row+1; }$/;"	f	class:TiXmlDocument
Find	tinyxml.cpp	/^const TiXmlAttribute* TiXmlAttributeSet::Find( const char* name ) const$/;"	f	class:TiXmlAttributeSet
Find	tinyxml.cpp	/^const TiXmlAttribute* TiXmlAttributeSet::Find( const std::string& name ) const$/;"	f	class:TiXmlAttributeSet
Find	tinyxml.h	/^	TiXmlAttribute*	Find( const char* _name ) {$/;"	f	class:TiXmlAttributeSet
Find	tinyxml.h	/^	TiXmlAttribute*	Find( const std::string& _name ) {$/;"	f	class:TiXmlAttributeSet
First	tinyxml.h	/^	TiXmlAttribute* First()					{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet
First	tinyxml.h	/^	const TiXmlAttribute* First()	const	{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet
FirstAttribute	tinyxml.h	/^	TiXmlAttribute* FirstAttribute() 				{ return attributeSet.First(); }$/;"	f	class:TiXmlElement
FirstAttribute	tinyxml.h	/^	const TiXmlAttribute* FirstAttribute() const	{ return attributeSet.First(); }		\/\/\/< Access the first attribute in this element.$/;"	f	class:TiXmlElement
FirstChild	tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChild( const char * value ) const$/;"	f	class:TiXmlHandle
FirstChild	tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChild() const$/;"	f	class:TiXmlHandle
FirstChild	tinyxml.cpp	/^const TiXmlNode* TiXmlNode::FirstChild( const char * _value ) const$/;"	f	class:TiXmlNode
FirstChild	tinyxml.h	/^	TiXmlHandle FirstChild( const std::string& _value ) const				{ return FirstChild( _value.c_str() ); }$/;"	f	class:TiXmlHandle
FirstChild	tinyxml.h	/^	TiXmlNode* FirstChild( const char * _value ) {$/;"	f	class:TiXmlNode
FirstChild	tinyxml.h	/^	TiXmlNode* FirstChild( const std::string& _value )				{	return FirstChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
FirstChild	tinyxml.h	/^	TiXmlNode* FirstChild()						{ return firstChild; }$/;"	f	class:TiXmlNode
FirstChild	tinyxml.h	/^	const TiXmlNode* FirstChild( const std::string& _value ) const	{	return FirstChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
FirstChild	tinyxml.h	/^	const TiXmlNode* FirstChild()	const		{ return firstChild; }	\/\/\/< The first child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode
FirstChildElement	tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChildElement( const char * value ) const$/;"	f	class:TiXmlHandle
FirstChildElement	tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChildElement() const$/;"	f	class:TiXmlHandle
FirstChildElement	tinyxml.cpp	/^const TiXmlElement* TiXmlNode::FirstChildElement( const char * _value ) const$/;"	f	class:TiXmlNode
FirstChildElement	tinyxml.cpp	/^const TiXmlElement* TiXmlNode::FirstChildElement() const$/;"	f	class:TiXmlNode
FirstChildElement	tinyxml.h	/^	TiXmlElement* FirstChildElement( const char * _value ) {$/;"	f	class:TiXmlNode
FirstChildElement	tinyxml.h	/^	TiXmlElement* FirstChildElement( const std::string& _value )				{	return FirstChildElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
FirstChildElement	tinyxml.h	/^	TiXmlElement* FirstChildElement() {$/;"	f	class:TiXmlNode
FirstChildElement	tinyxml.h	/^	TiXmlHandle FirstChildElement( const std::string& _value ) const		{ return FirstChildElement( _value.c_str() ); }$/;"	f	class:TiXmlHandle
FirstChildElement	tinyxml.h	/^	const TiXmlElement* FirstChildElement( const std::string& _value ) const	{	return FirstChildElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
GetChar	tinyxml.h	/^	inline static const char* GetChar( const char* p, char* _value, int* length, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
GetDocument	tinyxml.cpp	/^const TiXmlDocument* TiXmlNode::GetDocument() const$/;"	f	class:TiXmlNode
GetDocument	tinyxml.h	/^	TiXmlDocument* GetDocument() {$/;"	f	class:TiXmlNode
GetEntity	tinyxmlparser.cpp	/^const char* TiXmlBase::GetEntity( const char* p, char* value, int* length, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
GetText	tinyxml.cpp	/^const char* TiXmlElement::GetText() const$/;"	f	class:TiXmlElement
GetUserData	tinyxml.h	/^	const void* GetUserData() const 		{ return userData; }	\/\/\/< Get a pointer to arbitrary user data.$/;"	f	class:TiXmlBase
GetUserData	tinyxml.h	/^	void* GetUserData()						{ return userData; }	\/\/\/< Get a pointer to arbitrary user data.$/;"	f	class:TiXmlBase
INCS	Makefile	/^INCS :=$/;"	m
Identify	tinyxmlparser.cpp	/^TiXmlNode* TiXmlNode::Identify( const char* p, TiXmlEncoding encoding )$/;"	f	class:TiXmlNode
Indent	tinyxml.h	/^	const char* Indent()							{ return indent.c_str(); }$/;"	f	class:TiXmlPrinter
InsertAfterChild	tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertAfterChild( TiXmlNode* afterThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
InsertBeforeChild	tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertBeforeChild( TiXmlNode* beforeThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
InsertEndChild	tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertEndChild( const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
IntValue	tinyxml.cpp	/^int TiXmlAttribute::IntValue() const$/;"	f	class:TiXmlAttribute
IsAlpha	tinyxmlparser.cpp	/^\/*static*\/ int TiXmlBase::IsAlpha( unsigned char anyByte, TiXmlEncoding \/*encoding*\/ )$/;"	f	class:TiXmlBase
IsAlphaNum	tinyxmlparser.cpp	/^\/*static*\/ int TiXmlBase::IsAlphaNum( unsigned char anyByte, TiXmlEncoding \/*encoding*\/ )$/;"	f	class:TiXmlBase
IsWhiteSpace	tinyxml.h	/^	inline static bool IsWhiteSpace( char c )		$/;"	f	class:TiXmlBase
IsWhiteSpace	tinyxml.h	/^	inline static bool IsWhiteSpace( int c )$/;"	f	class:TiXmlBase
IsWhiteSpaceCondensed	tinyxml.h	/^	static bool IsWhiteSpaceCondensed()						{ return condenseWhiteSpace; }$/;"	f	class:TiXmlBase
IterateChildren	tinyxml.cpp	/^const TiXmlNode* TiXmlNode::IterateChildren( const TiXmlNode* previous ) const$/;"	f	class:TiXmlNode
IterateChildren	tinyxml.cpp	/^const TiXmlNode* TiXmlNode::IterateChildren( const char * val, const TiXmlNode* previous ) const$/;"	f	class:TiXmlNode
IterateChildren	tinyxml.h	/^	TiXmlNode* IterateChildren( const TiXmlNode* previous ) {$/;"	f	class:TiXmlNode
IterateChildren	tinyxml.h	/^	TiXmlNode* IterateChildren( const char * _value, const TiXmlNode* previous ) {$/;"	f	class:TiXmlNode
IterateChildren	tinyxml.h	/^	TiXmlNode* IterateChildren( const std::string& _value, const TiXmlNode* previous ) {	return IterateChildren (_value.c_str (), previous);	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
IterateChildren	tinyxml.h	/^	const TiXmlNode* IterateChildren( const std::string& _value, const TiXmlNode* previous ) const	{	return IterateChildren (_value.c_str (), previous);	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
LD	Makefile	/^LD     := g++$/;"	m
LDFLAGS	Makefile	/^   LDFLAGS      := ${DEBUG_LDFLAGS}$/;"	m
LDFLAGS	Makefile	/^   LDFLAGS      := ${RELEASE_LDFLAGS}$/;"	m
LDFLAGS	Makefile	/^   LDFLAGS  := ${LDFLAGS} -pg$/;"	m
LIBS	Makefile	/^LIBS		 :=$/;"	m
Last	tinyxml.h	/^	TiXmlAttribute* Last()					{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet
Last	tinyxml.h	/^	const TiXmlAttribute* Last() const		{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet
LastAttribute	tinyxml.h	/^	TiXmlAttribute* LastAttribute()					{ return attributeSet.Last(); }$/;"	f	class:TiXmlElement
LastAttribute	tinyxml.h	/^	const TiXmlAttribute* LastAttribute()	const 	{ return attributeSet.Last(); }		\/\/\/< Access the last attribute in this element.$/;"	f	class:TiXmlElement
LastChild	tinyxml.cpp	/^const TiXmlNode* TiXmlNode::LastChild( const char * _value ) const$/;"	f	class:TiXmlNode
LastChild	tinyxml.h	/^	TiXmlNode* LastChild( const char * _value ) {$/;"	f	class:TiXmlNode
LastChild	tinyxml.h	/^	TiXmlNode* LastChild( const std::string& _value )				{	return LastChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
LastChild	tinyxml.h	/^	TiXmlNode* LastChild()	{ return lastChild; }$/;"	f	class:TiXmlNode
LastChild	tinyxml.h	/^	const TiXmlNode* LastChild( const std::string& _value ) const	{	return LastChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
LastChild	tinyxml.h	/^	const TiXmlNode* LastChild() const	{ return lastChild; }		\/\/\/ The last child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode
LineBreak	tinyxml.h	/^	const char* LineBreak()							{ return lineBreak.c_str(); }$/;"	f	class:TiXmlPrinter
LinkEndChild	tinyxml.cpp	/^TiXmlNode* TiXmlNode::LinkEndChild( TiXmlNode* node )$/;"	f	class:TiXmlNode
LoadFile	tinyxml.cpp	/^bool TiXmlDocument::LoadFile( FILE* file, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
LoadFile	tinyxml.cpp	/^bool TiXmlDocument::LoadFile( TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
LoadFile	tinyxml.cpp	/^bool TiXmlDocument::LoadFile( const char* _filename, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
LoadFile	tinyxml.h	/^	bool LoadFile( const std::string& filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )			\/\/\/< STL std::string version.$/;"	f	class:TiXmlDocument
MAX_ENTITY_LENGTH	tinyxml.h	/^		MAX_ENTITY_LENGTH = 6$/;"	e	enum:TiXmlBase::__anon3
NUM_ENTITY	tinyxml.h	/^		NUM_ENTITY = 5,$/;"	e	enum:TiXmlBase::__anon3
Name	tinyxml.h	/^	const char*		Name()  const		{ return name.c_str(); }		\/\/\/< Return the name of this attribute.$/;"	f	class:TiXmlAttribute
NameTStr	tinyxml.h	/^	const TIXML_STRING& NameTStr() const { return name; }$/;"	f	class:TiXmlAttribute
Next	tinyxml.cpp	/^const TiXmlAttribute* TiXmlAttribute::Next() const$/;"	f	class:TiXmlAttribute
Next	tinyxml.h	/^	TiXmlAttribute* Next() {$/;"	f	class:TiXmlAttribute
NextSibling	tinyxml.cpp	/^const TiXmlNode* TiXmlNode::NextSibling( const char * _value ) const $/;"	f	class:TiXmlNode
NextSibling	tinyxml.h	/^	TiXmlNode* NextSibling( const char* _next ) {$/;"	f	class:TiXmlNode
NextSibling	tinyxml.h	/^	TiXmlNode* NextSibling( const std::string& _value) 					{	return NextSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NextSibling	tinyxml.h	/^	TiXmlNode* NextSibling()							{ return next; }$/;"	f	class:TiXmlNode
NextSibling	tinyxml.h	/^	const TiXmlNode* NextSibling( const std::string& _value) const		{	return NextSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NextSibling	tinyxml.h	/^	const TiXmlNode* NextSibling() const				{ return next; }$/;"	f	class:TiXmlNode
NextSiblingElement	tinyxml.cpp	/^const TiXmlElement* TiXmlNode::NextSiblingElement( const char * _value ) const$/;"	f	class:TiXmlNode
NextSiblingElement	tinyxml.cpp	/^const TiXmlElement* TiXmlNode::NextSiblingElement() const$/;"	f	class:TiXmlNode
NextSiblingElement	tinyxml.h	/^	TiXmlElement* NextSiblingElement( const char *_next ) {$/;"	f	class:TiXmlNode
NextSiblingElement	tinyxml.h	/^	TiXmlElement* NextSiblingElement( const std::string& _value)				{	return NextSiblingElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NextSiblingElement	tinyxml.h	/^	TiXmlElement* NextSiblingElement() {$/;"	f	class:TiXmlNode
NextSiblingElement	tinyxml.h	/^	const TiXmlElement* NextSiblingElement( const std::string& _value) const	{	return NextSiblingElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NoChildren	tinyxml.h	/^	bool NoChildren() const						{ return !firstChild; }$/;"	f	class:TiXmlNode
Node	tinyxml.h	/^	TiXmlNode* Node() const			{ return ToNode(); } $/;"	f	class:TiXmlHandle
NodeType	tinyxml.h	/^	enum NodeType$/;"	g	class:TiXmlNode
OBJS	Makefile	/^OBJS := $(addsuffix .o,$(basename ${SRCS}))$/;"	m
OUTPUT	Makefile	/^OUTPUT := xmltest$/;"	m
PROFILE	Makefile	/^PROFILE        := NO$/;"	m
Parent	tinyxml.h	/^	TiXmlNode* Parent()							{ return parent; }$/;"	f	class:TiXmlNode
Parent	tinyxml.h	/^	const TiXmlNode* Parent() const				{ return parent; }$/;"	f	class:TiXmlNode
Parse	tinyxmlparser.cpp	/^const char* TiXmlAttribute::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlAttribute
Parse	tinyxmlparser.cpp	/^const char* TiXmlComment::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlComment
Parse	tinyxmlparser.cpp	/^const char* TiXmlDeclaration::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding _encoding )$/;"	f	class:TiXmlDeclaration
Parse	tinyxmlparser.cpp	/^const char* TiXmlDocument::Parse( const char* p, TiXmlParsingData* prevData, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
Parse	tinyxmlparser.cpp	/^const char* TiXmlElement::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlElement
Parse	tinyxmlparser.cpp	/^const char* TiXmlText::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlText
Parse	tinyxmlparser.cpp	/^const char* TiXmlUnknown::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlUnknown
Previous	tinyxml.cpp	/^const TiXmlAttribute* TiXmlAttribute::Previous() const$/;"	f	class:TiXmlAttribute
Previous	tinyxml.h	/^	TiXmlAttribute* Previous() {$/;"	f	class:TiXmlAttribute
PreviousSibling	tinyxml.cpp	/^const TiXmlNode* TiXmlNode::PreviousSibling( const char * _value ) const$/;"	f	class:TiXmlNode
PreviousSibling	tinyxml.h	/^	TiXmlNode* PreviousSibling( const char *_prev ) {$/;"	f	class:TiXmlNode
PreviousSibling	tinyxml.h	/^	TiXmlNode* PreviousSibling( const std::string& _value ) 			{	return PreviousSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
PreviousSibling	tinyxml.h	/^	TiXmlNode* PreviousSibling()						{ return prev; }$/;"	f	class:TiXmlNode
PreviousSibling	tinyxml.h	/^	const TiXmlNode* PreviousSibling( const std::string& _value ) const	{	return PreviousSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
PreviousSibling	tinyxml.h	/^	const TiXmlNode* PreviousSibling() const			{ return prev; }$/;"	f	class:TiXmlNode
Print	tinyxml.cpp	/^void TiXmlAttribute::Print( FILE* cfile, int \/*depth*\/, TIXML_STRING* str ) const$/;"	f	class:TiXmlAttribute
Print	tinyxml.cpp	/^void TiXmlComment::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlComment
Print	tinyxml.cpp	/^void TiXmlDeclaration::Print( FILE* cfile, int \/*depth*\/, TIXML_STRING* str ) const$/;"	f	class:TiXmlDeclaration
Print	tinyxml.cpp	/^void TiXmlDocument::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlDocument
Print	tinyxml.cpp	/^void TiXmlElement::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlElement
Print	tinyxml.cpp	/^void TiXmlText::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlText
Print	tinyxml.cpp	/^void TiXmlUnknown::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlUnknown
Print	tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const {$/;"	f	class:TiXmlAttribute
Print	tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const {$/;"	f	class:TiXmlDeclaration
Print	tinyxml.h	/^	void Print() const						{ Print( stdout, 0 ); }$/;"	f	class:TiXmlDocument
QueryDoubleAttribute	tinyxml.cpp	/^int TiXmlElement::QueryDoubleAttribute( const char* name, double* dval ) const$/;"	f	class:TiXmlElement
QueryDoubleAttribute	tinyxml.cpp	/^int TiXmlElement::QueryDoubleAttribute( const std::string& name, double* dval ) const$/;"	f	class:TiXmlElement
QueryDoubleValue	tinyxml.cpp	/^int TiXmlAttribute::QueryDoubleValue( double* dval ) const$/;"	f	class:TiXmlAttribute
QueryFloatAttribute	tinyxml.h	/^	int QueryFloatAttribute( const char* name, float* _value ) const {$/;"	f	class:TiXmlElement
QueryIntAttribute	tinyxml.cpp	/^int TiXmlElement::QueryIntAttribute( const char* name, int* ival ) const$/;"	f	class:TiXmlElement
QueryIntAttribute	tinyxml.cpp	/^int TiXmlElement::QueryIntAttribute( const std::string& name, int* ival ) const$/;"	f	class:TiXmlElement
QueryIntValue	tinyxml.cpp	/^int TiXmlAttribute::QueryIntValue( int* ival ) const$/;"	f	class:TiXmlAttribute
QueryValueAttribute	tinyxml.h	/^	template< typename T > int QueryValueAttribute( const std::string& name, T* outValue ) const$/;"	f	class:TiXmlElement
RANLIB	Makefile	/^RANLIB := ranlib$/;"	m
RELEASE_CFLAGS	Makefile	/^RELEASE_CFLAGS   := -Wall -Wno-unknown-pragmas -Wno-format -O3$/;"	m
RELEASE_CXXFLAGS	Makefile	/^RELEASE_CXXFLAGS := ${RELEASE_CFLAGS}$/;"	m
RELEASE_LDFLAGS	Makefile	/^RELEASE_LDFLAGS  :=$/;"	m
ReadName	tinyxmlparser.cpp	/^const char* TiXmlBase::ReadName( const char* p, TIXML_STRING * name, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
ReadText	tinyxmlparser.cpp	/^const char* TiXmlBase::ReadText(	const char* p, $/;"	f	class:TiXmlBase
ReadValue	tinyxmlparser.cpp	/^const char* TiXmlElement::ReadValue( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlElement
Remove	tinyxml.cpp	/^void TiXmlAttributeSet::Remove( TiXmlAttribute* removeMe )$/;"	f	class:TiXmlAttributeSet
RemoveAttribute	tinyxml.cpp	/^void TiXmlElement::RemoveAttribute( const char * name )$/;"	f	class:TiXmlElement
RemoveAttribute	tinyxml.h	/^	void RemoveAttribute( const std::string& name )	{	RemoveAttribute (name.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlElement
RemoveChild	tinyxml.cpp	/^bool TiXmlNode::RemoveChild( TiXmlNode* removeThis )$/;"	f	class:TiXmlNode
Rep	tinystr.h	/^	struct Rep$/;"	s	class:TiXmlString
ReplaceChild	tinyxml.cpp	/^TiXmlNode* TiXmlNode::ReplaceChild( TiXmlNode* replaceThis, const TiXmlNode& withThis )$/;"	f	class:TiXmlNode
RootElement	tinyxml.h	/^	TiXmlElement* RootElement()					{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument
RootElement	tinyxml.h	/^	const TiXmlElement* RootElement() const		{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument
Row	tinyxml.h	/^	int Row() const			{ return location.row + 1; }$/;"	f	class:TiXmlBase
SRCS	Makefile	/^SRCS := ${SRCS}$/;"	m
SRCS	Makefile	/^SRCS := tinyxml.cpp tinyxmlparser.cpp xmltest.cpp tinyxmlerror.cpp tinystr.cpp$/;"	m
SaveFile	tinyxml.cpp	/^bool TiXmlDocument::SaveFile( FILE* fp ) const$/;"	f	class:TiXmlDocument
SaveFile	tinyxml.cpp	/^bool TiXmlDocument::SaveFile( const char * filename ) const$/;"	f	class:TiXmlDocument
SaveFile	tinyxml.cpp	/^bool TiXmlDocument::SaveFile() const$/;"	f	class:TiXmlDocument
SaveFile	tinyxml.h	/^	bool SaveFile( const std::string& filename ) const		\/\/\/< STL std::string version.$/;"	f	class:TiXmlDocument
SetAttribute	tinyxml.cpp	/^void TiXmlElement::SetAttribute( const char * cname, const char * cvalue )$/;"	f	class:TiXmlElement
SetAttribute	tinyxml.cpp	/^void TiXmlElement::SetAttribute( const char * name, int val )$/;"	f	class:TiXmlElement
SetAttribute	tinyxml.cpp	/^void TiXmlElement::SetAttribute( const std::string& name, const std::string& _value )$/;"	f	class:TiXmlElement
SetAttribute	tinyxml.cpp	/^void TiXmlElement::SetAttribute( const std::string& name, int val )$/;"	f	class:TiXmlElement
SetCDATA	tinyxml.h	/^	void SetCDATA( bool _cdata )	{ cdata = _cdata; }$/;"	f	class:TiXmlText
SetCondenseWhiteSpace	tinyxml.h	/^	static void SetCondenseWhiteSpace( bool condense )		{ condenseWhiteSpace = condense; }$/;"	f	class:TiXmlBase
SetDocument	tinyxml.h	/^	void SetDocument( TiXmlDocument* doc )	{ document = doc; }$/;"	f	class:TiXmlAttribute
SetDoubleAttribute	tinyxml.cpp	/^void TiXmlElement::SetDoubleAttribute( const char * name, double val )$/;"	f	class:TiXmlElement
SetDoubleValue	tinyxml.cpp	/^void TiXmlAttribute::SetDoubleValue( double _value )$/;"	f	class:TiXmlAttribute
SetError	tinyxmlparser.cpp	/^void TiXmlDocument::SetError( int err, const char* pError, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
SetIndent	tinyxml.h	/^	void SetIndent( const char* _indent )			{ indent = _indent ? _indent : "" ; }$/;"	f	class:TiXmlPrinter
SetIntValue	tinyxml.cpp	/^void TiXmlAttribute::SetIntValue( int _value )$/;"	f	class:TiXmlAttribute
SetLineBreak	tinyxml.h	/^	void SetLineBreak( const char* _lineBreak )		{ lineBreak = _lineBreak ? _lineBreak : ""; }$/;"	f	class:TiXmlPrinter
SetName	tinyxml.h	/^	void SetName( const char* _name )	{ name = _name; }				\/\/\/< Set the name of this attribute.$/;"	f	class:TiXmlAttribute
SetName	tinyxml.h	/^	void SetName( const std::string& _name )	{ name = _name; }	$/;"	f	class:TiXmlAttribute
SetStreamPrinting	tinyxml.h	/^	void SetStreamPrinting()						{ indent = "";$/;"	f	class:TiXmlPrinter
SetTabSize	tinyxml.h	/^	void SetTabSize( int _tabsize )		{ tabsize = _tabsize; }$/;"	f	class:TiXmlDocument
SetUserData	tinyxml.h	/^	void  SetUserData( void* user )			{ userData = user; }	\/\/\/< Set a pointer to arbitrary user data.$/;"	f	class:TiXmlBase
SetValue	tinyxml.h	/^	void SetValue( const char* _value )	{ value = _value; }				\/\/\/< Set the value.$/;"	f	class:TiXmlAttribute
SetValue	tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }$/;"	f	class:TiXmlAttribute
SetValue	tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }$/;"	f	class:TiXmlNode
SetValue	tinyxml.h	/^	void SetValue(const char * _value) { value = _value;}$/;"	f	class:TiXmlNode
Size	tinyxml.h	/^	size_t Size()									{ return buffer.size(); }$/;"	f	class:TiXmlPrinter
SkipWhiteSpace	tinyxmlparser.cpp	/^const char* TiXmlBase::SkipWhiteSpace( const char* p, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
Stamp	tinyxmlparser.cpp	/^void TiXmlParsingData::Stamp( const char* now, TiXmlEncoding encoding )$/;"	f	class:TiXmlParsingData
Standalone	tinyxml.h	/^	const char *Standalone() const		{ return standalone.c_str (); }$/;"	f	class:TiXmlDeclaration
Str	tinyxml.h	/^	const std::string& Str()						{ return buffer; }$/;"	f	class:TiXmlPrinter
StreamIn	tinyxmlparser.cpp	/^void TiXmlComment::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlComment
StreamIn	tinyxmlparser.cpp	/^void TiXmlDeclaration::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlDeclaration
StreamIn	tinyxmlparser.cpp	/^void TiXmlDocument::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlDocument
StreamIn	tinyxmlparser.cpp	/^void TiXmlElement::StreamIn (std::istream * in, TIXML_STRING * tag)$/;"	f	class:TiXmlElement
StreamIn	tinyxmlparser.cpp	/^void TiXmlText::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlText
StreamIn	tinyxmlparser.cpp	/^void TiXmlUnknown::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlUnknown
StreamTo	tinyxmlparser.cpp	/^\/*static*\/ bool TiXmlBase::StreamTo( std::istream * in, int character, TIXML_STRING * tag )$/;"	f	class:TiXmlBase
StreamWhiteSpace	tinyxmlparser.cpp	/^\/*static*\/ bool TiXmlBase::StreamWhiteSpace( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlBase
StringEqual	tinyxmlparser.cpp	/^bool TiXmlBase::StringEqual( const char* p,$/;"	f	class:TiXmlBase
TEXT	tinyxml.h	/^		TEXT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_INCLUDED	tinyxml.h	27;"	d
TINYXML_USE_STL	Makefile	/^TINYXML_USE_STL := YES$/;"	m
TIXML_DEFAULT_ENCODING	tinyxml.h	/^const TiXmlEncoding TIXML_DEFAULT_ENCODING = TIXML_ENCODING_UNKNOWN;$/;"	v
TIXML_ENCODING_LEGACY	tinyxml.h	/^	TIXML_ENCODING_LEGACY$/;"	e	enum:TiXmlEncoding
TIXML_ENCODING_UNKNOWN	tinyxml.h	/^	TIXML_ENCODING_UNKNOWN,$/;"	e	enum:TiXmlEncoding
TIXML_ENCODING_UTF8	tinyxml.h	/^	TIXML_ENCODING_UTF8,$/;"	e	enum:TiXmlEncoding
TIXML_ERROR	tinyxml.h	/^		TIXML_ERROR,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_DOCUMENT_EMPTY	tinyxml.h	/^		TIXML_ERROR_DOCUMENT_EMPTY,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_DOCUMENT_TOP_ONLY	tinyxml.h	/^		TIXML_ERROR_DOCUMENT_TOP_ONLY,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_EMBEDDED_NULL	tinyxml.h	/^		TIXML_ERROR_EMBEDDED_NULL,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME	tinyxml.h	/^		TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_OPENING_FILE	tinyxml.h	/^		TIXML_ERROR_OPENING_FILE,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_OUT_OF_MEMORY	tinyxml.h	/^		TIXML_ERROR_OUT_OF_MEMORY,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_PARSING_CDATA	tinyxml.h	/^		TIXML_ERROR_PARSING_CDATA,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_PARSING_COMMENT	tinyxml.h	/^		TIXML_ERROR_PARSING_COMMENT,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_PARSING_DECLARATION	tinyxml.h	/^		TIXML_ERROR_PARSING_DECLARATION,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_PARSING_ELEMENT	tinyxml.h	/^		TIXML_ERROR_PARSING_ELEMENT,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_PARSING_EMPTY	tinyxml.h	/^		TIXML_ERROR_PARSING_EMPTY,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_PARSING_UNKNOWN	tinyxml.h	/^		TIXML_ERROR_PARSING_UNKNOWN,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_READING_ATTRIBUTES	tinyxml.h	/^		TIXML_ERROR_READING_ATTRIBUTES,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_READING_ELEMENT_VALUE	tinyxml.h	/^		TIXML_ERROR_READING_ELEMENT_VALUE,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_READING_END_TAG	tinyxml.h	/^		TIXML_ERROR_READING_END_TAG,$/;"	e	enum:TiXmlBase::__anon2
TIXML_ERROR_STRING_COUNT	tinyxml.h	/^		TIXML_ERROR_STRING_COUNT$/;"	e	enum:TiXmlBase::__anon2
TIXML_EXPLICIT	tinystr.h	51;"	d
TIXML_EXPLICIT	tinystr.h	54;"	d
TIXML_EXPLICIT	tinystr.h	56;"	d
TIXML_LOG	tinyxmlparser.cpp	34;"	d	file:
TIXML_LOG	tinyxmlparser.cpp	36;"	d	file:
TIXML_MAJOR_VERSION	tinyxml.h	/^const int TIXML_MAJOR_VERSION = 2;$/;"	v
TIXML_MINOR_VERSION	tinyxml.h	/^const int TIXML_MINOR_VERSION = 5;$/;"	v
TIXML_NO_ATTRIBUTE	tinyxml.h	/^	TIXML_NO_ATTRIBUTE,$/;"	e	enum:__anon1
TIXML_NO_ERROR	tinyxml.h	/^		TIXML_NO_ERROR = 0,$/;"	e	enum:TiXmlBase::__anon2
TIXML_PATCH_VERSION	tinyxml.h	/^const int TIXML_PATCH_VERSION = 3;$/;"	v
TIXML_SAFE	tinyxml.h	60;"	d
TIXML_SNPRINTF	tinyxml.h	65;"	d
TIXML_SNPRINTF	tinyxml.h	71;"	d
TIXML_SNPRINTF	tinyxml.h	77;"	d
TIXML_SNSCANF	tinyxml.h	66;"	d
TIXML_SNSCANF	tinyxml.h	72;"	d
TIXML_SNSCANF	tinyxml.h	78;"	d
TIXML_SSCANF	tinyxml.h	67;"	d
TIXML_SSCANF	tinyxml.h	73;"	d
TIXML_SSCANF	tinyxml.h	79;"	d
TIXML_SSCANF	tinyxml.h	81;"	d
TIXML_STRING	tinyxml.h	50;"	d
TIXML_STRING	tinyxml.h	53;"	d
TIXML_STRING_INCLUDED	tinystr.h	40;"	d
TIXML_SUCCESS	tinyxml.h	/^	TIXML_SUCCESS,$/;"	e	enum:__anon1
TIXML_UTF_LEAD_0	tinyxmlparser.cpp	/^const unsigned char TIXML_UTF_LEAD_0 = 0xefU;$/;"	v
TIXML_UTF_LEAD_1	tinyxmlparser.cpp	/^const unsigned char TIXML_UTF_LEAD_1 = 0xbbU;$/;"	v
TIXML_UTF_LEAD_2	tinyxmlparser.cpp	/^const unsigned char TIXML_UTF_LEAD_2 = 0xbfU;$/;"	v
TIXML_WRONG_TYPE	tinyxml.h	/^	TIXML_WRONG_TYPE$/;"	e	enum:__anon1
TYPECOUNT	tinyxml.h	/^		TYPECOUNT$/;"	e	enum:TiXmlNode::NodeType
TabSize	tinyxml.h	/^	int TabSize() const	{ return tabsize; }$/;"	f	class:TiXmlDocument
Text	tinyxml.h	/^	TiXmlText* Text() const			{ return ToText(); }$/;"	f	class:TiXmlHandle
TiXmlAttribute	tinyxml.h	/^	TiXmlAttribute( const char * _name, const char * _value )$/;"	f	class:TiXmlAttribute
TiXmlAttribute	tinyxml.h	/^	TiXmlAttribute( const std::string& _name, const std::string& _value )$/;"	f	class:TiXmlAttribute
TiXmlAttribute	tinyxml.h	/^	TiXmlAttribute() : TiXmlBase()$/;"	f	class:TiXmlAttribute
TiXmlAttribute	tinyxml.h	/^class TiXmlAttribute : public TiXmlBase$/;"	c
TiXmlAttributeSet	tinyxml.cpp	/^TiXmlAttributeSet::TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet
TiXmlAttributeSet	tinyxml.h	/^class TiXmlAttributeSet$/;"	c
TiXmlBase	tinyxml.h	/^	TiXmlBase()	:	userData(0)		{}$/;"	f	class:TiXmlBase
TiXmlBase	tinyxml.h	/^class TiXmlBase$/;"	c
TiXmlComment	tinyxml.cpp	/^TiXmlComment::TiXmlComment( const TiXmlComment& copy ) : TiXmlNode( TiXmlNode::COMMENT )$/;"	f	class:TiXmlComment
TiXmlComment	tinyxml.h	/^	TiXmlComment( const char* _value ) : TiXmlNode( TiXmlNode::COMMENT ) {$/;"	f	class:TiXmlComment
TiXmlComment	tinyxml.h	/^	TiXmlComment() : TiXmlNode( TiXmlNode::COMMENT ) {}$/;"	f	class:TiXmlComment
TiXmlComment	tinyxml.h	/^class TiXmlComment : public TiXmlNode$/;"	c
TiXmlCursor	tinyxml.h	/^	TiXmlCursor()		{ Clear(); }$/;"	f	struct:TiXmlCursor
TiXmlCursor	tinyxml.h	/^struct TiXmlCursor$/;"	s
TiXmlDeclaration	tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration(	const std::string& _version,$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration( const TiXmlDeclaration& copy )$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration( const char * _version,$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	tinyxml.h	/^	TiXmlDeclaration()   : TiXmlNode( TiXmlNode::DECLARATION ) {}$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	tinyxml.h	/^class TiXmlDeclaration : public TiXmlNode$/;"	c
TiXmlDocument	tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const TiXmlDocument& copy ) : TiXmlNode( TiXmlNode::DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const char * documentName ) : TiXmlNode( TiXmlNode::DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const std::string& documentName ) : TiXmlNode( TiXmlNode::DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	tinyxml.cpp	/^TiXmlDocument::TiXmlDocument() : TiXmlNode( TiXmlNode::DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	tinyxml.h	/^class TiXmlDocument : public TiXmlNode$/;"	c
TiXmlElement	tinyxml.cpp	/^TiXmlElement::TiXmlElement (const char * _value)$/;"	f	class:TiXmlElement
TiXmlElement	tinyxml.cpp	/^TiXmlElement::TiXmlElement( const TiXmlElement& copy)$/;"	f	class:TiXmlElement
TiXmlElement	tinyxml.cpp	/^TiXmlElement::TiXmlElement( const std::string& _value ) $/;"	f	class:TiXmlElement
TiXmlElement	tinyxml.h	/^class TiXmlElement : public TiXmlNode$/;"	c
TiXmlEncoding	tinyxml.h	/^enum TiXmlEncoding$/;"	g
TiXmlFOpen	tinyxml.cpp	/^FILE* TiXmlFOpen( const char* filename, const char* mode )$/;"	f
TiXmlHandle	tinyxml.h	/^	TiXmlHandle( TiXmlNode* _node )					{ this->node = _node; }$/;"	f	class:TiXmlHandle
TiXmlHandle	tinyxml.h	/^	TiXmlHandle( const TiXmlHandle& ref )			{ this->node = ref.node; }$/;"	f	class:TiXmlHandle
TiXmlHandle	tinyxml.h	/^class TiXmlHandle$/;"	c
TiXmlNode	tinyxml.cpp	/^TiXmlNode::TiXmlNode( NodeType _type ) : TiXmlBase()$/;"	f	class:TiXmlNode
TiXmlNode	tinyxml.h	/^class TiXmlNode : public TiXmlBase$/;"	c
TiXmlOutStream	tinystr.h	/^class TiXmlOutStream : public TiXmlString$/;"	c
TiXmlParsingData	tinyxmlparser.cpp	/^	TiXmlParsingData( const char* start, int _tabsize, int row, int col )$/;"	f	class:TiXmlParsingData	file:
TiXmlParsingData	tinyxmlparser.cpp	/^class TiXmlParsingData$/;"	c	file:
TiXmlPrinter	tinyxml.h	/^	TiXmlPrinter() : depth( 0 ), simpleTextPrint( false ),$/;"	f	class:TiXmlPrinter
TiXmlPrinter	tinyxml.h	/^class TiXmlPrinter : public TiXmlVisitor$/;"	c
TiXmlString	tinystr.h	/^	TIXML_EXPLICIT TiXmlString ( const char * copy) : rep_(0)$/;"	f	class:TiXmlString
TiXmlString	tinystr.h	/^	TIXML_EXPLICIT TiXmlString ( const char * str, size_type len) : rep_(0)$/;"	f	class:TiXmlString
TiXmlString	tinystr.h	/^	TiXmlString ( const TiXmlString & copy) : rep_(0)$/;"	f	class:TiXmlString
TiXmlString	tinystr.h	/^	TiXmlString () : rep_(&nullrep_)$/;"	f	class:TiXmlString
TiXmlString	tinystr.h	/^class TiXmlString$/;"	c
TiXmlText	tinyxml.h	/^	TiXmlText (const char * initValue ) : TiXmlNode (TiXmlNode::TEXT)$/;"	f	class:TiXmlText
TiXmlText	tinyxml.h	/^	TiXmlText( const TiXmlText& copy ) : TiXmlNode( TiXmlNode::TEXT )	{ copy.CopyTo( this ); }$/;"	f	class:TiXmlText
TiXmlText	tinyxml.h	/^	TiXmlText( const std::string& initValue ) : TiXmlNode (TiXmlNode::TEXT)$/;"	f	class:TiXmlText
TiXmlText	tinyxml.h	/^class TiXmlText : public TiXmlNode$/;"	c
TiXmlUnknown	tinyxml.h	/^	TiXmlUnknown( const TiXmlUnknown& copy ) : TiXmlNode( TiXmlNode::UNKNOWN )		{ copy.CopyTo( this ); }$/;"	f	class:TiXmlUnknown
TiXmlUnknown	tinyxml.h	/^	TiXmlUnknown() : TiXmlNode( TiXmlNode::UNKNOWN )	{}$/;"	f	class:TiXmlUnknown
TiXmlUnknown	tinyxml.h	/^class TiXmlUnknown : public TiXmlNode$/;"	c
TiXmlVisitor	tinyxml.h	/^class TiXmlVisitor$/;"	c
ToComment	tinyxml.h	/^	virtual TiXmlComment*           ToComment()     { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToComment	tinyxml.h	/^	virtual TiXmlComment*  ToComment() { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlComment
ToComment	tinyxml.h	/^	virtual const TiXmlComment*     ToComment()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToComment	tinyxml.h	/^	virtual const TiXmlComment*  ToComment() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlComment
ToDeclaration	tinyxml.h	/^	virtual TiXmlDeclaration*       ToDeclaration()       { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDeclaration
ToDeclaration	tinyxml.h	/^	virtual TiXmlDeclaration*       ToDeclaration() { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDeclaration	tinyxml.h	/^	virtual const TiXmlDeclaration* ToDeclaration() const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDeclaration	tinyxml.h	/^	virtual const TiXmlDeclaration* ToDeclaration() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDeclaration
ToDocument	tinyxml.h	/^	virtual TiXmlDocument*          ToDocument()          { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDocument
ToDocument	tinyxml.h	/^	virtual TiXmlDocument*          ToDocument()    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDocument	tinyxml.h	/^	virtual const TiXmlDocument*    ToDocument()    const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDocument	tinyxml.h	/^	virtual const TiXmlDocument*    ToDocument()    const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDocument
ToElement	tinyxml.h	/^	TiXmlElement* ToElement() const		{ return ( ( node && node->ToElement() ) ? node->ToElement() : 0 ); }$/;"	f	class:TiXmlHandle
ToElement	tinyxml.h	/^	virtual TiXmlElement*           ToElement()	          { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlElement
ToElement	tinyxml.h	/^	virtual TiXmlElement*           ToElement()	    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToElement	tinyxml.h	/^	virtual const TiXmlElement*     ToElement()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToElement	tinyxml.h	/^	virtual const TiXmlElement*     ToElement()     const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlElement
ToLower	tinyxml.h	/^	inline static int ToLower( int v, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
ToNode	tinyxml.h	/^	TiXmlNode* ToNode() const			{ return node; } $/;"	f	class:TiXmlHandle
ToText	tinyxml.h	/^	TiXmlText* ToText() const			{ return ( ( node && node->ToText() ) ? node->ToText() : 0 ); }$/;"	f	class:TiXmlHandle
ToText	tinyxml.h	/^	virtual TiXmlText*	            ToText()        { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToText	tinyxml.h	/^	virtual TiXmlText*       ToText()       { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlText
ToText	tinyxml.h	/^	virtual const TiXmlText*        ToText()        const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToText	tinyxml.h	/^	virtual const TiXmlText* ToText() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlText
ToUnknown	tinyxml.h	/^	TiXmlUnknown* ToUnknown() const		{ return ( ( node && node->ToUnknown() ) ? node->ToUnknown() : 0 ); }$/;"	f	class:TiXmlHandle
ToUnknown	tinyxml.h	/^	virtual TiXmlUnknown*           ToUnknown()	    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToUnknown	tinyxml.h	/^	virtual TiXmlUnknown*           ToUnknown()	    { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlUnknown
ToUnknown	tinyxml.h	/^	virtual const TiXmlUnknown*     ToUnknown()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToUnknown	tinyxml.h	/^	virtual const TiXmlUnknown*     ToUnknown()     const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlUnknown
Type	tinyxml.h	/^	int Type() const	{ return type; }$/;"	f	class:TiXmlNode
UNKNOWN	tinyxml.h	/^		UNKNOWN,$/;"	e	enum:TiXmlNode::NodeType
Unknown	tinyxml.h	/^	TiXmlUnknown* Unknown() const	{ return ToUnknown(); }$/;"	f	class:TiXmlHandle
Value	tinyxml.h	/^	const char *Value() const { return value.c_str (); }$/;"	f	class:TiXmlNode
Value	tinyxml.h	/^	const char*		Value() const		{ return value.c_str(); }		\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute
ValueStr	tinyxml.h	/^	const std::string& ValueStr() const	{ return value; }				\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute
ValueStr	tinyxml.h	/^	const std::string& ValueStr() const { return value; }$/;"	f	class:TiXmlNode
ValueTStr	tinyxml.h	/^	const TIXML_STRING& ValueTStr() const { return value; }$/;"	f	class:TiXmlNode
Version	tinyxml.h	/^	const char *Version() const			{ return version.c_str (); }$/;"	f	class:TiXmlDeclaration
Visit	tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlComment& comment )$/;"	f	class:TiXmlPrinter
Visit	tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlDeclaration& declaration )$/;"	f	class:TiXmlPrinter
Visit	tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlText& text )$/;"	f	class:TiXmlPrinter
Visit	tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlUnknown& unknown )$/;"	f	class:TiXmlPrinter
Visit	tinyxml.h	/^	virtual bool Visit( const TiXmlComment& \/*comment*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
Visit	tinyxml.h	/^	virtual bool Visit( const TiXmlDeclaration& \/*declaration*\/ )	{ return true; }$/;"	f	class:TiXmlVisitor
Visit	tinyxml.h	/^	virtual bool Visit( const TiXmlText& \/*text*\/ )					{ return true; }$/;"	f	class:TiXmlVisitor
Visit	tinyxml.h	/^	virtual bool Visit( const TiXmlUnknown& \/*unknown*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
VisitEnter	tinyxml.cpp	/^bool TiXmlPrinter::VisitEnter( const TiXmlDocument& )$/;"	f	class:TiXmlPrinter
VisitEnter	tinyxml.cpp	/^bool TiXmlPrinter::VisitEnter( const TiXmlElement& element, const TiXmlAttribute* firstAttribute )$/;"	f	class:TiXmlPrinter
VisitEnter	tinyxml.h	/^	virtual bool VisitEnter( const TiXmlDocument& \/*doc*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
VisitEnter	tinyxml.h	/^	virtual bool VisitEnter( const TiXmlElement& \/*element*\/, const TiXmlAttribute* \/*firstAttribute*\/ )	{ return true; }$/;"	f	class:TiXmlVisitor
VisitExit	tinyxml.cpp	/^bool TiXmlPrinter::VisitExit( const TiXmlDocument& )$/;"	f	class:TiXmlPrinter
VisitExit	tinyxml.cpp	/^bool TiXmlPrinter::VisitExit( const TiXmlElement& element )$/;"	f	class:TiXmlPrinter
VisitExit	tinyxml.h	/^	virtual bool VisitExit( const TiXmlDocument& \/*doc*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
VisitExit	tinyxml.h	/^	virtual bool VisitExit( const TiXmlElement& \/*element*\/ )		{ return true; }$/;"	f	class:TiXmlVisitor
XmlTest	xmltest.cpp	/^bool XmlTest (const char* testString, const char* expected, const char* found, bool noEcho = false)$/;"	f
XmlTest	xmltest.cpp	/^bool XmlTest( const char* testString, int expected, int found, bool noEcho = false )$/;"	f
_deprecated000001	docs/deprecated.html	/^<a class="anchor" name="_deprecated000001"><\/a> <dl>$/;"	a
_deprecated000003	docs/deprecated.html	/^<a class="anchor" name="_deprecated000003"><\/a> <dl>$/;"	a
_deprecated000004	docs/deprecated.html	/^<a class="anchor" name="_deprecated000004"><\/a> <dl>$/;"	a
_details	docs/classTiXmlAttribute.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlBase.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlComment.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlDeclaration.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlDocument.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlElement.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlHandle.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlNode.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlPrinter.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlText.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlUnknown.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	docs/classTiXmlVisitor.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
a0484d059bea0ea1acb47c9094382d79	docs/classTiXmlDeclaration.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a0484d059bea0ea1acb47c9094382d79"><\/a><!-- doxytag: member="TiXmlDeclaration::TiXmlDeclaration" ref="a0484d059bea0ea1acb47c9094382d79" args="()" -->$/;"	a
a04d3af11601ef5a5f88295203a843be	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a04d3af11601ef5a5f88295203a843be"><\/a><!-- doxytag: member="TiXmlElement::QueryFloatAttribute" ref="a04d3af11601ef5a5f88295203a843be" args="(const char *name, float *_value) const " -->$/;"	a
a0a5086f9eaee910bbfdc7f975e26574	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a0a5086f9eaee910bbfdc7f975e26574"><\/a><!-- doxytag: member="TiXmlNode::ToComment" ref="a0a5086f9eaee910bbfdc7f975e26574" args="() const " -->$/;"	a
a0ade4f27087447e93974e975c3246ad	docs/classTiXmlVisitor.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a0ade4f27087447e93974e975c3246ad"><\/a><!-- doxytag: member="TiXmlVisitor::VisitExit" ref="a0ade4f27087447e93974e975c3246ad" args="(const TiXmlDocument &amp;)" -->$/;"	a
a1a20ad59dc7e89a0ab265396360d50f	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a1a20ad59dc7e89a0ab265396360d50f"><\/a><!-- doxytag: member="TiXmlAttribute::IntValue" ref="a1a20ad59dc7e89a0ab265396360d50f" args="() const " -->$/;"	a
a464535ea1994db337cb6a8ce4b588b5	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a464535ea1994db337cb6a8ce4b588b5"><\/a><!-- doxytag: member="TiXmlElement::Clone" ref="a464535ea1994db337cb6a8ce4b588b5" args="() const " -->$/;"	a
a545aae325d9752ad64120bc4ecf939a	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a545aae325d9752ad64120bc4ecf939a"><\/a><!-- doxytag: member="TiXmlDocument::Accept" ref="a545aae325d9752ad64120bc4ecf939a" args="(TiXmlVisitor *content) const " -->$/;"	a
a65d000223187d22a4dcebd7479e9ebc	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a65d000223187d22a4dcebd7479e9ebc"><\/a><!-- doxytag: member="TiXmlNode::ToElement" ref="a65d000223187d22a4dcebd7479e9ebc" args="()" -->$/;"	a
a90bc630ee5203c6109ca5fad3323649	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a90bc630ee5203c6109ca5fad3323649"><\/a><!-- doxytag: member="TiXmlDocument::ErrorCol" ref="a90bc630ee5203c6109ca5fad3323649" args="() const " -->$/;"	a
aa3252031d3e8bd3a2bf51a1c61201b7	docs/classTiXmlComment.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="aa3252031d3e8bd3a2bf51a1c61201b7"><\/a><!-- doxytag: member="TiXmlComment::TiXmlComment" ref="aa3252031d3e8bd3a2bf51a1c61201b7" args="()" -->$/;"	a
append	tinystr.cpp	/^TiXmlString& TiXmlString::append(const char* str, size_type len)$/;"	f	class:TiXmlString
assign	tinystr.cpp	/^TiXmlString& TiXmlString::assign(const char* str, size_type len)$/;"	f	class:TiXmlString
at	tinystr.h	/^	const char& at (size_type index) const$/;"	f	class:TiXmlString
attributeSet	tinyxml.h	/^	TiXmlAttributeSet attributeSet;$/;"	m	class:TiXmlElement
b0313e5fe77987d746ac1a97a254419d	docs/classTiXmlUnknown.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b0313e5fe77987d746ac1a97a254419d"><\/a><!-- doxytag: member="TiXmlUnknown::ToUnknown" ref="b0313e5fe77987d746ac1a97a254419d" args="() const " -->$/;"	a
b23a90629e374cb1cadca090468bbd19	docs/classTiXmlPrinter.html	/^<a class="anchor" name="b23a90629e374cb1cadca090468bbd19"><\/a><!-- doxytag: member="TiXmlPrinter::SetStreamPrinting" ref="b23a90629e374cb1cadca090468bbd19" args="()" -->$/;"	a
b242c01590191f644569fa89a080d97c	docs/classTiXmlBase.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b242c01590191f644569fa89a080d97c"><\/a><!-- doxytag: member="TiXmlBase::userData" ref="b242c01590191f644569fa89a080d97c" args="" -->$/;"	a
b296ff0c9a8c701055cd257a8a976e57	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b296ff0c9a8c701055cd257a8a976e57"><\/a><!-- doxytag: member="TiXmlAttribute::SetName" ref="b296ff0c9a8c701055cd257a8a976e57" args="(const std::string &amp;_name)" -->$/;"	a
b43f67a0cc3ec1d80e62606500f0925f	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b43f67a0cc3ec1d80e62606500f0925f"><\/a><!-- doxytag: member="TiXmlAttribute::SetValue" ref="b43f67a0cc3ec1d80e62606500f0925f" args="(const std::string &amp;_value)" -->$/;"	a
b44b723a8dc9af72838a303c079d0376	docs/classTiXmlHandle.html	/^<a class="anchor" name="b44b723a8dc9af72838a303c079d0376"><\/a><!-- doxytag: member="TiXmlHandle::Node" ref="b44b723a8dc9af72838a303c079d0376" args="() const " -->$/;"	a
b54bfb9b70fe6dd276e7b279cab7f003	docs/classTiXmlBase.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b54bfb9b70fe6dd276e7b279cab7f003"><\/a><!-- doxytag: member="TiXmlBase::Column" ref="b54bfb9b70fe6dd276e7b279cab7f003" args="() const " -->$/;"	a
b57bd426563c926844f65a78412e18b9	docs/classTiXmlNode.html	/^<a class="anchor" name="b57bd426563c926844f65a78412e18b9"><\/a><!-- doxytag: member="TiXmlNode::operator&gt;&gt;" ref="b57bd426563c926844f65a78412e18b9" args="(std::istream &amp;in, TiXmlNode &amp;base)" -->$/;"	a
b643043132ffd794f8602685d34a982e	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b643043132ffd794f8602685d34a982e"><\/a><!-- doxytag: member="TiXmlNode::Parent" ref="b643043132ffd794f8602685d34a982e" args="()" -->$/;"	a
b6592e32cb9132be517cc12a70564c4b	docs/classTiXmlBase.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b6592e32cb9132be517cc12a70564c4b"><\/a><!-- doxytag: member="TiXmlBase::TiXmlElement" ref="b6592e32cb9132be517cc12a70564c4b" args="" -->$/;"	a
b6592e32cb9132be517cc12a70564c4b	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b6592e32cb9132be517cc12a70564c4b"><\/a><!-- doxytag: member="TiXmlNode::TiXmlElement" ref="b6592e32cb9132be517cc12a70564c4b" args="" -->$/;"	a
b6592e32cb9132be517cc12a70564c4b	docs/classTiXmlText.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b6592e32cb9132be517cc12a70564c4b"><\/a><!-- doxytag: member="TiXmlText::TiXmlElement" ref="b6592e32cb9132be517cc12a70564c4b" args="" -->$/;"	a
b7fa3d21ff8d7c5764cf9af15b667a99	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b7fa3d21ff8d7c5764cf9af15b667a99"><\/a><!-- doxytag: member="TiXmlAttribute::SetName" ref="b7fa3d21ff8d7c5764cf9af15b667a99" args="(const char *_name)" -->$/;"	a
ba18fd7bdefb942ecdea4bf4b8e29ec8	docs/classTiXmlHandle.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ba18fd7bdefb942ecdea4bf4b8e29ec8"><\/a><!-- doxytag: member="TiXmlHandle::TiXmlHandle" ref="ba18fd7bdefb942ecdea4bf4b8e29ec8" args="(TiXmlNode *_node)" -->$/;"	a
bad5bf1059c48127b958711ef89e8e5d	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="bad5bf1059c48127b958711ef89e8e5d"><\/a><!-- doxytag: member="TiXmlNode::LastChild" ref="bad5bf1059c48127b958711ef89e8e5d" args="(const char *_value)" -->$/;"	a
bb33ec7d4bad6aaeb57f4304394b133d	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="bb33ec7d4bad6aaeb57f4304394b133d"><\/a><!-- doxytag: member="TiXmlPrinter::Indent" ref="bb33ec7d4bad6aaeb57f4304394b133d" args="()" -->$/;"	a
bc6e7ed383a5fe1e52b0c0004b457b9e	docs/classTiXmlHandle.html	/^<a class="anchor" name="bc6e7ed383a5fe1e52b0c0004b457b9e"><\/a><!-- doxytag: member="TiXmlHandle::ToElement" ref="bc6e7ed383a5fe1e52b0c0004b457b9e" args="() const " -->$/;"	a
bc8bf32be6419ec453a731868de19554	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="bc8bf32be6419ec453a731868de19554"><\/a><!-- doxytag: member="TiXmlNode::FirstChild" ref="bc8bf32be6419ec453a731868de19554" args="(const char *_value)" -->$/;"	a
bf0b3bd7f0e4c746a89ec6e7f101fc32	docs/classTiXmlElement.html	/^<a class="anchor" name="bf0b3bd7f0e4c746a89ec6e7f101fc32"><\/a><!-- doxytag: member="TiXmlElement::SetAttribute" ref="bf0b3bd7f0e4c746a89ec6e7f101fc32" args="(const char *name, const char *_value)" -->$/;"	a
bf6303db4bd05b5be554036817ff1cb4	docs/classTiXmlDeclaration.html	/^<a class="anchor" name="bf6303db4bd05b5be554036817ff1cb4"><\/a><!-- doxytag: member="TiXmlDeclaration::Print" ref="bf6303db4bd05b5be554036817ff1cb4" args="(FILE *cfile, int depth) const " -->$/;"	a
buffer	tinyxml.h	/^	TIXML_STRING buffer;$/;"	m	class:TiXmlPrinter
c2cd892768726270e511b2ab32de4d10	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c2cd892768726270e511b2ab32de4d10"><\/a><!-- doxytag: member="TiXmlNode::PreviousSibling" ref="c2cd892768726270e511b2ab32de4d10" args="() const " -->$/;"	a
c5b8d0e25fa23fd9acbb6d146082901c	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c5b8d0e25fa23fd9acbb6d146082901c"><\/a><!-- doxytag: member="TiXmlElement::ToElement" ref="c5b8d0e25fa23fd9acbb6d146082901c" args="() const " -->$/;"	a
c66b8c28db86363315712a3574e87c35	docs/classTiXmlDocument.html	/^<a class="anchor" name="c66b8c28db86363315712a3574e87c35"><\/a><!-- doxytag: member="TiXmlDocument::ClearError" ref="c66b8c28db86363315712a3574e87c35" args="()" -->$/;"	a
c6b3e0f790930d4970ec30764e937b5d	docs/classTiXmlBase.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c6b3e0f790930d4970ec30764e937b5d"><\/a><!-- doxytag: member="TiXmlBase::SetUserData" ref="c6b3e0f790930d4970ec30764e937b5d" args="(void *user)" -->$/;"	a
c87b2a8489906a5d7aa2875f20be3513	docs/classTiXmlAttribute.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c87b2a8489906a5d7aa2875f20be3513"><\/a><!-- doxytag: member="TiXmlAttribute::QueryDoubleValue" ref="c87b2a8489906a5d7aa2875f20be3513" args="(double *_value) const " -->$/;"	a
c_str	tinystr.h	/^	const char * c_str () const { return rep_->str; }$/;"	f	class:TiXmlString
capacity	tinystr.h	/^		size_type size, capacity;$/;"	m	struct:TiXmlString::Rep
capacity	tinystr.h	/^	size_type capacity () const { return rep_->capacity; }$/;"	f	class:TiXmlString
cb17ff7c5d09b2c839393445a3de5ea9	docs/classTiXmlText.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cb17ff7c5d09b2c839393445a3de5ea9"><\/a><!-- doxytag: member="TiXmlText::SetCDATA" ref="cb17ff7c5d09b2c839393445a3de5ea9" args="(bool _cdata)" -->$/;"	a
cb5fe8388a526289ea65e817a51e05e7	docs/classTiXmlHandle.html	/^<a class="anchor" name="cb5fe8388a526289ea65e817a51e05e7"><\/a><!-- doxytag: member="TiXmlHandle::Element" ref="cb5fe8388a526289ea65e817a51e05e7" args="() const " -->$/;"	a
cc04956c1d5c4c31fe74f7a7528d109a	docs/classTiXmlAttribute.html	/^<a class="anchor" name="cc04956c1d5c4c31fe74f7a7528d109a"><\/a><!-- doxytag: member="TiXmlAttribute::Print" ref="cc04956c1d5c4c31fe74f7a7528d109a" args="(FILE *cfile, int depth) const " -->$/;"	a
cc0f88b7462c6cb73809d410a4f5bb86	docs/classTiXmlNode.html	/^<a class="anchor" name="cc0f88b7462c6cb73809d410a4f5bb86"><\/a><!-- doxytag: member="TiXmlNode::Accept" ref="cc0f88b7462c6cb73809d410a4f5bb86" args="(TiXmlVisitor *visitor) const =0" -->$/;"	a
cc7c7e07e13c23f17797d642981511df	docs/classTiXmlComment.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cc7c7e07e13c23f17797d642981511df"><\/a><!-- doxytag: member="TiXmlComment::ToComment" ref="cc7c7e07e13c23f17797d642981511df" args="()" -->$/;"	a
cc8a0434c7f401d4a3b6dee77c1a5912	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cc8a0434c7f401d4a3b6dee77c1a5912"><\/a><!-- doxytag: member="TiXmlNode::PreviousSibling" ref="cc8a0434c7f401d4a3b6dee77c1a5912" args="(const std::string &amp;_value)" -->$/;"	a
ccda2c6b45c25bb5a6f9c3407a644e61	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ccda2c6b45c25bb5a6f9c3407a644e61"><\/a><!-- doxytag: member="TiXmlNode::FirstChildElement" ref="ccda2c6b45c25bb5a6f9c3407a644e61" args="(const char *_value) const " -->$/;"	a
cd5556007c3c72209465081de39d9836	docs/classTiXmlDeclaration.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cd5556007c3c72209465081de39d9836"><\/a><!-- doxytag: member="TiXmlDeclaration::TiXmlDeclaration" ref="cd5556007c3c72209465081de39d9836" args="(const std::string &amp;_version, const std::string &amp;_encoding, const std::string &amp;_standalone)" -->$/;"	a
cdata	tinyxml.h	/^	bool cdata;			\/\/ true if this should be input and output as a CDATA style text element$/;"	m	class:TiXmlText
cdb1faaf88a700b40ca2c8d9aee21139	docs/classTiXmlHandle.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cdb1faaf88a700b40ca2c8d9aee21139"><\/a><!-- doxytag: member="TiXmlHandle::FirstChild" ref="cdb1faaf88a700b40ca2c8d9aee21139" args="() const " -->$/;"	a
ce1b14d33eede2575c0743e2350f6a38	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ce1b14d33eede2575c0743e2350f6a38"><\/a><!-- doxytag: member="TiXmlPrinter::Visit" ref="ce1b14d33eede2575c0743e2350f6a38" args="(const TiXmlDeclaration &amp;declaration)" -->$/;"	a
ce6f4be75e373726d4774073d666d1a7	docs/classTiXmlElement.html	/^<a class="anchor" name="ce6f4be75e373726d4774073d666d1a7"><\/a><!-- doxytag: member="TiXmlElement::SetAttribute" ref="ce6f4be75e373726d4774073d666d1a7" args="(const char *name, int value)" -->$/;"	a
cf1672b4538c6d1d441f9f108aea2bf4	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cf1672b4538c6d1d441f9f108aea2bf4"><\/a><!-- doxytag: member="TiXmlDocument::SaveFile" ref="cf1672b4538c6d1d441f9f108aea2bf4" args="(FILE *) const " -->$/;"	a
chr	tinyxml.h	/^		char		    chr;$/;"	m	struct:TiXmlBase::Entity
clear	tinystr.h	/^	void clear ()$/;"	f	class:TiXmlString
col	tinyxml.h	/^	int col;	\/\/ 0 based.$/;"	m	struct:TiXmlCursor
condenseWhiteSpace	tinyxml.cpp	/^bool TiXmlBase::condenseWhiteSpace = true;$/;"	m	class:TiXmlBase	file:
condenseWhiteSpace	tinyxml.h	/^	static bool condenseWhiteSpace;$/;"	m	class:TiXmlBase
cursor	tinyxmlparser.cpp	/^	TiXmlCursor		cursor;$/;"	m	class:TiXmlParsingData	file:
d0120210e4680ef2088601753ce0ede4	docs/classTiXmlBase.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d0120210e4680ef2088601753ce0ede4"><\/a><!-- doxytag: member="TiXmlBase::GetUserData" ref="d0120210e4680ef2088601753ce0ede4" args="() const " -->$/;"	a
d01375ae9199bd2f48252eaddce3039d	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d01375ae9199bd2f48252eaddce3039d"><\/a><!-- doxytag: member="TiXmlPrinter::Size" ref="d01375ae9199bd2f48252eaddce3039d" args="()" -->$/;"	a
d09d17927f908f40efb406af2fb873be	docs/classTiXmlDocument.html	/^<a class="anchor" name="d09d17927f908f40efb406af2fb873be"><\/a><!-- doxytag: member="TiXmlDocument::RootElement" ref="d09d17927f908f40efb406af2fb873be" args="() const " -->$/;"	a
d1a6a6b83fa2271022dd97c072a2b586	docs/classTiXmlText.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d1a6a6b83fa2271022dd97c072a2b586"><\/a><!-- doxytag: member="TiXmlText::CDATA" ref="d1a6a6b83fa2271022dd97c072a2b586" args="() const " -->$/;"	a
d2dca6dd106e8982fd3c7db1f3330970	docs/classTiXmlPrinter.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d2dca6dd106e8982fd3c7db1f3330970"><\/a><!-- doxytag: member="TiXmlPrinter::Visit" ref="d2dca6dd106e8982fd3c7db1f3330970" args="(const TiXmlUnknown &amp;unknown)" -->$/;"	a
d4b1472531c647a25b1840a87ae42438	docs/classTiXmlBase.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d4b1472531c647a25b1840a87ae42438"><\/a><!-- doxytag: member="TiXmlBase::IsWhiteSpaceCondensed" ref="d4b1472531c647a25b1840a87ae42438" args="()" -->$/;"	a
d6c93088ee21af41a107931223339344	docs/classTiXmlAttribute.html	/^<a class="anchor" name="d6c93088ee21af41a107931223339344"><\/a><!-- doxytag: member="TiXmlAttribute::QueryIntValue" ref="d6c93088ee21af41a107931223339344" args="(int *_value) const " -->$/;"	a
d7122e5135581b3c832a1a3217760a93	docs/classTiXmlUnknown.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d7122e5135581b3c832a1a3217760a93"><\/a><!-- doxytag: member="TiXmlUnknown::Accept" ref="d7122e5135581b3c832a1a3217760a93" args="(TiXmlVisitor *content) const " -->$/;"	a
d7d4630e1a2a916edda16be22448a8ba	docs/classTiXmlNode.html	/^<a class="anchor" name="d7d4630e1a2a916edda16be22448a8ba"><\/a><!-- doxytag: member="TiXmlNode::InsertEndChild" ref="d7d4630e1a2a916edda16be22448a8ba" args="(const TiXmlNode &amp;addThis)" -->$/;"	a
d9b75e54ec19301c8b4d5ff583d0b3d5	docs/classTiXmlNode.html	/^<a class="anchor" name="d9b75e54ec19301c8b4d5ff583d0b3d5"><\/a><!-- doxytag: member="TiXmlNode::InsertAfterChild" ref="d9b75e54ec19301c8b4d5ff583d0b3d5" args="(TiXmlNode *afterThis, const TiXmlNode &amp;addThis)" -->$/;"	a
data	tinystr.h	/^	const char * data () const { return rep_->str; }$/;"	f	class:TiXmlString
deprecated	docs/deprecated.html	/^<h1><a class="anchor" name="deprecated">Deprecated List<\/a><\/h1><a class="anchor" name="_deprecated000002"><\/a> <dl>$/;"	a
depth	tinyxml.h	/^	int depth;$/;"	m	class:TiXmlPrinter
dfaef35a076b9343adc1420757376c39	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="dfaef35a076b9343adc1420757376c39"><\/a><!-- doxytag: member="TiXmlNode::IterateChildren" ref="dfaef35a076b9343adc1420757376c39" args="(const char *value, const TiXmlNode *previous) const " -->$/;"	a
document	tinyxml.h	/^	TiXmlDocument*	document;	\/\/ A pointer back to a document, for error reporting.$/;"	m	class:TiXmlAttribute
e19d8510efc90596552f4feeac9a8fbf	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e19d8510efc90596552f4feeac9a8fbf"><\/a><!-- doxytag: member="TiXmlNode::RemoveChild" ref="e19d8510efc90596552f4feeac9a8fbf" args="(TiXmlNode *removeThis)" -->$/;"	a
e3b9a03b0a56663a40801c7256683576	docs/classTiXmlElement.html	/^<a class="anchor" name="e3b9a03b0a56663a40801c7256683576"><\/a><!-- doxytag: member="TiXmlElement::QueryValueAttribute" ref="e3b9a03b0a56663a40801c7256683576" args="(const std::string &amp;name, T *outValue) const " -->$/;"	a
e419a442a9701a62b0c3d8fd1cbdd12d	docs/classTiXmlElement.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e419a442a9701a62b0c3d8fd1cbdd12d"><\/a><!-- doxytag: member="TiXmlElement::Attribute" ref="e419a442a9701a62b0c3d8fd1cbdd12d" args="(const char *name) const " -->$/;"	a
e4508b452d0c3061db085f3db27b8396	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e4508b452d0c3061db085f3db27b8396"><\/a><!-- doxytag: member="TiXmlDocument::TiXmlDocument" ref="e4508b452d0c3061db085f3db27b8396" args="(const char *documentName)" -->$/;"	a
e7c3a8fd3e4dbf6c0c4363a943d72f5b	docs/classTiXmlText.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e7c3a8fd3e4dbf6c0c4363a943d72f5b"><\/a><!-- doxytag: member="TiXmlText::ToText" ref="e7c3a8fd3e4dbf6c0c4363a943d72f5b" args="()" -->$/;"	a
e869f5ebf7fc54c4a1d737fb4689fd44	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e869f5ebf7fc54c4a1d737fb4689fd44"><\/a><!-- doxytag: member="TiXmlDocument::SaveFile" ref="e869f5ebf7fc54c4a1d737fb4689fd44" args="(const char *filename) const " -->$/;"	a
ea0bfe471380f281c5945770ddbf52b9	docs/classTiXmlElement.html	/^<a class="anchor" name="ea0bfe471380f281c5945770ddbf52b9"><\/a><!-- doxytag: member="TiXmlElement::QueryIntAttribute" ref="ea0bfe471380f281c5945770ddbf52b9" args="(const char *name, int *_value) const " -->$/;"	a
eaff99d4f0ea5b34f7aee202aad457ba	docs/classTiXmlElement.html	/^<a class="anchor" name="eaff99d4f0ea5b34f7aee202aad457ba"><\/a><!-- doxytag: member="TiXmlElement::Attribute" ref="eaff99d4f0ea5b34f7aee202aad457ba" args="(const char *name, double *d) const " -->$/;"	a
ec2b1f8116226d52f3a1b95dafd3a32c	docs/classTiXmlVisitor.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ec2b1f8116226d52f3a1b95dafd3a32c"><\/a><!-- doxytag: member="TiXmlVisitor::VisitExit" ref="ec2b1f8116226d52f3a1b95dafd3a32c" args="(const TiXmlElement &amp;)" -->$/;"	a
eed21ad30630ef6e7faf096127edc9f3	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="eed21ad30630ef6e7faf096127edc9f3"><\/a><!-- doxytag: member="TiXmlNode::NoChildren" ref="eed21ad30630ef6e7faf096127edc9f3" args="() const " -->$/;"	a
empty	tinystr.h	/^	bool empty () const { return rep_->size == 0; }$/;"	f	class:TiXmlString
encoding	tinyxml.h	/^	TIXML_STRING encoding;$/;"	m	class:TiXmlDeclaration
endMemState	xmltest.cpp	/^	_CrtMemState endMemState;$/;"	v
entity	tinyxml.h	/^	static Entity entity[ NUM_ENTITY ];$/;"	m	class:TiXmlBase
entity	tinyxmlparser.cpp	/^TiXmlBase::Entity TiXmlBase::entity[ NUM_ENTITY ] = $/;"	m	class:TiXmlBase	file:
error	tinyxml.h	/^	bool error;$/;"	m	class:TiXmlDocument
errorDesc	tinyxml.h	/^	TIXML_STRING errorDesc;$/;"	m	class:TiXmlDocument
errorId	tinyxml.h	/^	int  errorId;$/;"	m	class:TiXmlDocument
errorLocation	tinyxml.h	/^	TiXmlCursor errorLocation;$/;"	m	class:TiXmlDocument
errorString	tinyxml.h	/^	static const char* errorString[ TIXML_ERROR_STRING_COUNT ];$/;"	m	class:TiXmlBase
errorString	tinyxmlerror.cpp	/^const char* TiXmlBase::errorString[ TIXML_ERROR_STRING_COUNT ] =$/;"	m	class:TiXmlBase	file:
f08389ec70ee9b2de7f800e206a18510	docs/classTiXmlDocument.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f08389ec70ee9b2de7f800e206a18510"><\/a><!-- doxytag: member="TiXmlDocument::Print" ref="f08389ec70ee9b2de7f800e206a18510" args="() const " -->$/;"	a
f0aea751320f5e430fac6f8fff3b8dd4	docs/classTiXmlHandle.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f0aea751320f5e430fac6f8fff3b8dd4"><\/a><!-- doxytag: member="TiXmlHandle::FirstChildElement" ref="f0aea751320f5e430fac6f8fff3b8dd4" args="(const char *value) const " -->$/;"	a
f30efc75e804aa2e92fb8be3a8cb676e	docs/classTiXmlDocument.html	/^<a class="anchor" name="f30efc75e804aa2e92fb8be3a8cb676e"><\/a><!-- doxytag: member="TiXmlDocument::ErrorRow" ref="f30efc75e804aa2e92fb8be3a8cb676e" args="() const " -->$/;"	a
f3282294986cdb216646ea1f67af2c87	docs/classTiXmlElement.html	/^<a class="anchor" name="f3282294986cdb216646ea1f67af2c87"><\/a><!-- doxytag: member="TiXmlElement::GetText" ref="f3282294986cdb216646ea1f67af2c87" args="() const " -->$/;"	a
f3ac1b99fbbe9ea4fb6e14146156e43e	docs/classTiXmlComment.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f3ac1b99fbbe9ea4fb6e14146156e43e"><\/a><!-- doxytag: member="TiXmlComment::Accept" ref="f3ac1b99fbbe9ea4fb6e14146156e43e" args="(TiXmlVisitor *visitor) const " -->$/;"	a
f4fb652f6bd79ae0d5ce7d0f7d3c0fba	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f4fb652f6bd79ae0d5ce7d0f7d3c0fba"><\/a><!-- doxytag: member="TiXmlNode::FirstChildElement" ref="f4fb652f6bd79ae0d5ce7d0f7d3c0fba" args="() const " -->$/;"	a
f659e77c6b87d684827f35a8f4895960	docs/classTiXmlText.html	/^<a class="anchor" name="f659e77c6b87d684827f35a8f4895960"><\/a><!-- doxytag: member="TiXmlText::TiXmlText" ref="f659e77c6b87d684827f35a8f4895960" args="(const char *initValue)" -->$/;"	a
f678e5088e83be67baf76f699756f2c3	docs/classTiXmlHandle.html	/^<a class="anchor" name="f678e5088e83be67baf76f699756f2c3"><\/a><!-- doxytag: member="TiXmlHandle::ToNode" ref="f678e5088e83be67baf76f699756f2c3" args="() const " -->$/;"	a
f6c6178ffa517bbdba95d70490875fff	docs/classTiXmlVisitor.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f6c6178ffa517bbdba95d70490875fff"><\/a><!-- doxytag: member="TiXmlVisitor::VisitEnter" ref="f6c6178ffa517bbdba95d70490875fff" args="(const TiXmlElement &amp;, const TiXmlAttribute *)" -->$/;"	a
f854baeba384f5fe9859f5aee03b548e	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f854baeba384f5fe9859f5aee03b548e"><\/a><!-- doxytag: member="TiXmlNode::NextSibling" ref="f854baeba384f5fe9859f5aee03b548e" args="() const " -->$/;"	a
f96fc2f3f9ec6422782bfe916c9e778f	docs/classTiXmlDocument.html	/^<a class="anchor" name="f96fc2f3f9ec6422782bfe916c9e778f"><\/a><!-- doxytag: member="TiXmlDocument::ErrorId" ref="f96fc2f3f9ec6422782bfe916c9e778f" args="() const " -->$/;"	a
f9cf6a7d08a5da94a8924425ad0cd5ac	docs/classTiXmlHandle.html	/^<a class="anchor" name="f9cf6a7d08a5da94a8924425ad0cd5ac"><\/a><!-- doxytag: member="TiXmlHandle::Child" ref="f9cf6a7d08a5da94a8924425ad0cd5ac" args="(int index) const " -->$/;"	a
fad71c71ce6473fb9b4b64cd92de4a19	docs/classTiXmlVisitor.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fad71c71ce6473fb9b4b64cd92de4a19"><\/a><!-- doxytag: member="TiXmlVisitor::Visit" ref="fad71c71ce6473fb9b4b64cd92de4a19" args="(const TiXmlDeclaration &amp;)" -->$/;"	a
fbf52736e70fc91ec9d760721d6f4fd2	docs/classTiXmlElement.html	/^<a class="anchor" name="fbf52736e70fc91ec9d760721d6f4fd2"><\/a><!-- doxytag: member="TiXmlElement::Print" ref="fbf52736e70fc91ec9d760721d6f4fd2" args="(FILE *cfile, int depth) const " -->$/;"	a
fd7205cf31d7a376929f8a36930627a2	docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fd7205cf31d7a376929f8a36930627a2"><\/a><!-- doxytag: member="TiXmlNode::ToUnknown" ref="fd7205cf31d7a376929f8a36930627a2" args="() const " -->$/;"	a
find	tinystr.h	/^	size_type find (char lookup) const$/;"	f	class:TiXmlString
find	tinystr.h	/^	size_type find (char tofind, size_type offset) const$/;"	f	class:TiXmlString
finish	tinystr.h	/^	char* finish() const { return rep_->str + rep_->size; }$/;"	f	class:TiXmlString
firstChild	tinyxml.h	/^	TiXmlNode*		firstChild;$/;"	m	class:TiXmlNode
gFail	xmltest.cpp	/^static int gFail = 0;$/;"	v	file:
gPass	xmltest.cpp	/^static int gPass = 0;$/;"	v	file:
indent	tinyxml.h	/^	TIXML_STRING indent;$/;"	m	class:TiXmlPrinter
index_a	docs/functions.html	/^<h3><a class="anchor" name="index_a">- a -<\/a><\/h3><ul>$/;"	a
index_a	docs/functions_func.html	/^<h3><a class="anchor" name="index_a">- a -<\/a><\/h3><ul>$/;"	a
index_c	docs/functions.html	/^<h3><a class="anchor" name="index_c">- c -<\/a><\/h3><ul>$/;"	a
index_c	docs/functions_func.html	/^<h3><a class="anchor" name="index_c">- c -<\/a><\/h3><ul>$/;"	a
index_d	docs/functions.html	/^<h3><a class="anchor" name="index_d">- d -<\/a><\/h3><ul>$/;"	a
index_d	docs/functions_func.html	/^<h3><a class="anchor" name="index_d">- d -<\/a><\/h3><ul>$/;"	a
index_e	docs/functions.html	/^<h3><a class="anchor" name="index_e">- e -<\/a><\/h3><ul>$/;"	a
index_e	docs/functions_func.html	/^<h3><a class="anchor" name="index_e">- e -<\/a><\/h3><ul>$/;"	a
index_f	docs/functions.html	/^<h3><a class="anchor" name="index_f">- f -<\/a><\/h3><ul>$/;"	a
index_f	docs/functions_func.html	/^<h3><a class="anchor" name="index_f">- f -<\/a><\/h3><ul>$/;"	a
index_g	docs/functions.html	/^<h3><a class="anchor" name="index_g">- g -<\/a><\/h3><ul>$/;"	a
index_g	docs/functions_func.html	/^<h3><a class="anchor" name="index_g">- g -<\/a><\/h3><ul>$/;"	a
index_i	docs/functions.html	/^<h3><a class="anchor" name="index_i">- i -<\/a><\/h3><ul>$/;"	a
index_i	docs/functions_func.html	/^<h3><a class="anchor" name="index_i">- i -<\/a><\/h3><ul>$/;"	a
index_l	docs/functions.html	/^<h3><a class="anchor" name="index_l">- l -<\/a><\/h3><ul>$/;"	a
index_l	docs/functions_func.html	/^<h3><a class="anchor" name="index_l">- l -<\/a><\/h3><ul>$/;"	a
index_n	docs/functions.html	/^<h3><a class="anchor" name="index_n">- n -<\/a><\/h3><ul>$/;"	a
index_n	docs/functions_func.html	/^<h3><a class="anchor" name="index_n">- n -<\/a><\/h3><ul>$/;"	a
index_o	docs/functions.html	/^<h3><a class="anchor" name="index_o">- o -<\/a><\/h3><ul>$/;"	a
index_p	docs/functions.html	/^<h3><a class="anchor" name="index_p">- p -<\/a><\/h3><ul>$/;"	a
index_p	docs/functions_func.html	/^<h3><a class="anchor" name="index_p">- p -<\/a><\/h3><ul>$/;"	a
index_q	docs/functions.html	/^<h3><a class="anchor" name="index_q">- q -<\/a><\/h3><ul>$/;"	a
index_q	docs/functions_func.html	/^<h3><a class="anchor" name="index_q">- q -<\/a><\/h3><ul>$/;"	a
index_r	docs/functions.html	/^<h3><a class="anchor" name="index_r">- r -<\/a><\/h3><ul>$/;"	a
index_r	docs/functions_func.html	/^<h3><a class="anchor" name="index_r">- r -<\/a><\/h3><ul>$/;"	a
index_s	docs/functions.html	/^<h3><a class="anchor" name="index_s">- s -<\/a><\/h3><ul>$/;"	a
index_s	docs/functions_func.html	/^<h3><a class="anchor" name="index_s">- s -<\/a><\/h3><ul>$/;"	a
index_t	docs/functions.html	/^<h3><a class="anchor" name="index_t">- t -<\/a><\/h3><ul>$/;"	a
index_t	docs/functions_func.html	/^<h3><a class="anchor" name="index_t">- t -<\/a><\/h3><ul>$/;"	a
index_u	docs/functions.html	/^<h3><a class="anchor" name="index_u">- u -<\/a><\/h3><ul>$/;"	a
index_u	docs/functions_func.html	/^<h3><a class="anchor" name="index_u">- u -<\/a><\/h3><ul>$/;"	a
index_v	docs/functions.html	/^<h3><a class="anchor" name="index_v">- v -<\/a><\/h3><ul>$/;"	a
index_v	docs/functions_func.html	/^<h3><a class="anchor" name="index_v">- v -<\/a><\/h3><ul>$/;"	a
init	tinystr.h	/^	void init(size_type sz) { init(sz, sz); }$/;"	f	class:TiXmlString
init	tinystr.h	/^	void init(size_type sz, size_type cap)$/;"	f	class:TiXmlString
l00001	docs/tinystr_8h-source.html	/^<h1>tinystr.h<\/h1><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 <span class="comment">\/*<\/span>$/;"	a
l00001	docs/tinyxml_8h-source.html	/^<h1>tinyxml.h<\/h1><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 <span class="comment">\/*<\/span>$/;"	a
l00002	docs/tinystr_8h-source.html	/^<a name="l00002"><\/a>00002 <span class="comment">www.sourceforge.net\/projects\/tinyxml<\/span>$/;"	a
l00002	docs/tinyxml_8h-source.html	/^<a name="l00002"><\/a>00002 <span class="comment">www.sourceforge.net\/projects\/tinyxml<\/span>$/;"	a
l00003	docs/tinystr_8h-source.html	/^<a name="l00003"><\/a>00003 <span class="comment">Original file by Yves Berquin.<\/span>$/;"	a
l00003	docs/tinyxml_8h-source.html	/^<a name="l00003"><\/a>00003 <span class="comment">Original code (2.0 and earlier )copyright (c) 2000-2006 Lee Thomason (www.grinninglizard.com)<\/span>$/;"	a
l00004	docs/tinystr_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="comment"><\/span>$/;"	a
l00004	docs/tinyxml_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="comment"><\/span>$/;"	a
l00005	docs/tinystr_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="comment">This software is provided 'as-is', without any express or implied<\/span>$/;"	a
l00005	docs/tinyxml_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="comment">This software is provided 'as-is', without any express or implied<\/span>$/;"	a
l00006	docs/tinystr_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="comment">warranty. In no event will the authors be held liable for any<\/span>$/;"	a
l00006	docs/tinyxml_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="comment">warranty. In no event will the authors be held liable for any<\/span>$/;"	a
l00007	docs/tinystr_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="comment">damages arising from the use of this software.<\/span>$/;"	a
l00007	docs/tinyxml_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="comment">damages arising from the use of this software.<\/span>$/;"	a
l00008	docs/tinystr_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="comment"><\/span>$/;"	a
l00008	docs/tinyxml_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="comment"><\/span>$/;"	a
l00009	docs/tinystr_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="comment">Permission is granted to anyone to use this software for any<\/span>$/;"	a
l00009	docs/tinyxml_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="comment">Permission is granted to anyone to use this software for any<\/span>$/;"	a
l00010	docs/tinystr_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="comment">purpose, including commercial applications, and to alter it and<\/span>$/;"	a
l00010	docs/tinyxml_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="comment">purpose, including commercial applications, and to alter it and<\/span>$/;"	a
l00011	docs/tinystr_8h-source.html	/^<a name="l00011"><\/a>00011 <span class="comment">redistribute it freely, subject to the following restrictions:<\/span>$/;"	a
l00011	docs/tinyxml_8h-source.html	/^<a name="l00011"><\/a>00011 <span class="comment">redistribute it freely, subject to the following restrictions:<\/span>$/;"	a
l00012	docs/tinystr_8h-source.html	/^<a name="l00012"><\/a>00012 <span class="comment"><\/span>$/;"	a
l00012	docs/tinyxml_8h-source.html	/^<a name="l00012"><\/a>00012 <span class="comment"><\/span>$/;"	a
l00013	docs/tinystr_8h-source.html	/^<a name="l00013"><\/a>00013 <span class="comment">1. The origin of this software must not be misrepresented; you must<\/span>$/;"	a
l00013	docs/tinyxml_8h-source.html	/^<a name="l00013"><\/a>00013 <span class="comment">1. The origin of this software must not be misrepresented; you must<\/span>$/;"	a
l00014	docs/tinystr_8h-source.html	/^<a name="l00014"><\/a>00014 <span class="comment">not claim that you wrote the original software. If you use this<\/span>$/;"	a
l00014	docs/tinyxml_8h-source.html	/^<a name="l00014"><\/a>00014 <span class="comment">not claim that you wrote the original software. If you use this<\/span>$/;"	a
l00015	docs/tinystr_8h-source.html	/^<a name="l00015"><\/a>00015 <span class="comment">software in a product, an acknowledgment in the product documentation<\/span>$/;"	a
l00015	docs/tinyxml_8h-source.html	/^<a name="l00015"><\/a>00015 <span class="comment">software in a product, an acknowledgment in the product documentation<\/span>$/;"	a
l00016	docs/tinystr_8h-source.html	/^<a name="l00016"><\/a>00016 <span class="comment">would be appreciated but is not required.<\/span>$/;"	a
l00016	docs/tinyxml_8h-source.html	/^<a name="l00016"><\/a>00016 <span class="comment">would be appreciated but is not required.<\/span>$/;"	a
l00017	docs/tinystr_8h-source.html	/^<a name="l00017"><\/a>00017 <span class="comment"><\/span>$/;"	a
l00017	docs/tinyxml_8h-source.html	/^<a name="l00017"><\/a>00017 <span class="comment"><\/span>$/;"	a
l00018	docs/tinystr_8h-source.html	/^<a name="l00018"><\/a>00018 <span class="comment">2. Altered source versions must be plainly marked as such, and<\/span>$/;"	a
l00018	docs/tinyxml_8h-source.html	/^<a name="l00018"><\/a>00018 <span class="comment">2. Altered source versions must be plainly marked as such, and<\/span>$/;"	a
l00019	docs/tinystr_8h-source.html	/^<a name="l00019"><\/a>00019 <span class="comment">must not be misrepresented as being the original software.<\/span>$/;"	a
l00019	docs/tinyxml_8h-source.html	/^<a name="l00019"><\/a>00019 <span class="comment">must not be misrepresented as being the original software.<\/span>$/;"	a
l00020	docs/tinystr_8h-source.html	/^<a name="l00020"><\/a>00020 <span class="comment"><\/span>$/;"	a
l00020	docs/tinyxml_8h-source.html	/^<a name="l00020"><\/a>00020 <span class="comment"><\/span>$/;"	a
l00021	docs/tinystr_8h-source.html	/^<a name="l00021"><\/a>00021 <span class="comment">3. This notice may not be removed or altered from any source<\/span>$/;"	a
l00021	docs/tinyxml_8h-source.html	/^<a name="l00021"><\/a>00021 <span class="comment">3. This notice may not be removed or altered from any source<\/span>$/;"	a
l00022	docs/tinystr_8h-source.html	/^<a name="l00022"><\/a>00022 <span class="comment">distribution.<\/span>$/;"	a
l00022	docs/tinyxml_8h-source.html	/^<a name="l00022"><\/a>00022 <span class="comment">distribution.<\/span>$/;"	a
l00023	docs/tinystr_8h-source.html	/^<a name="l00023"><\/a>00023 <span class="comment">*\/<\/span>$/;"	a
l00023	docs/tinyxml_8h-source.html	/^<a name="l00023"><\/a>00023 <span class="comment">*\/<\/span>$/;"	a
l00024	docs/tinystr_8h-source.html	/^<a name="l00024"><\/a>00024 $/;"	a
l00024	docs/tinyxml_8h-source.html	/^<a name="l00024"><\/a>00024 $/;"	a
l00025	docs/tinystr_8h-source.html	/^<a name="l00025"><\/a>00025 <span class="comment">\/*<\/span>$/;"	a
l00025	docs/tinyxml_8h-source.html	/^<a name="l00025"><\/a>00025 $/;"	a
l00026	docs/tinystr_8h-source.html	/^<a name="l00026"><\/a>00026 <span class="comment"> * THIS FILE WAS ALTERED BY Tyge Lovset, 7. April 2005.<\/span>$/;"	a
l00026	docs/tinyxml_8h-source.html	/^<a name="l00026"><\/a>00026 <span class="preprocessor">#ifndef TINYXML_INCLUDED<\/span>$/;"	a
l00027	docs/tinystr_8h-source.html	/^<a name="l00027"><\/a>00027 <span class="comment"> *<\/span>$/;"	a
l00027	docs/tinyxml_8h-source.html	/^<a name="l00027"><\/a>00027 <span class="preprocessor"><\/span><span class="preprocessor">#define TINYXML_INCLUDED<\/span>$/;"	a
l00028	docs/tinystr_8h-source.html	/^<a name="l00028"><\/a>00028 <span class="comment"> * - completely rewritten. compact, clean, and fast implementation.<\/span>$/;"	a
l00028	docs/tinyxml_8h-source.html	/^<a name="l00028"><\/a>00028 <span class="preprocessor"><\/span>$/;"	a
l00029	docs/tinystr_8h-source.html	/^<a name="l00029"><\/a>00029 <span class="comment"> * - sizeof(TiXmlString) = pointer size (4 bytes on 32-bit systems)<\/span>$/;"	a
l00029	docs/tinyxml_8h-source.html	/^<a name="l00029"><\/a>00029 <span class="preprocessor">#ifdef _MSC_VER<\/span>$/;"	a
l00030	docs/tinystr_8h-source.html	/^<a name="l00030"><\/a>00030 <span class="comment"> * - fixed reserve() to work as per specification.<\/span>$/;"	a
l00030	docs/tinyxml_8h-source.html	/^<a name="l00030"><\/a>00030 <span class="preprocessor"><\/span><span class="preprocessor">#pragma warning( push )<\/span>$/;"	a
l00031	docs/tinystr_8h-source.html	/^<a name="l00031"><\/a>00031 <span class="comment"> * - fixed buggy compares operator==(), operator&lt;(), and operator&gt;()<\/span>$/;"	a
l00031	docs/tinyxml_8h-source.html	/^<a name="l00031"><\/a>00031 <span class="preprocessor"><\/span><span class="preprocessor">#pragma warning( disable : 4530 )<\/span>$/;"	a
l00032	docs/tinystr_8h-source.html	/^<a name="l00032"><\/a>00032 <span class="comment"> * - fixed operator+=() to take a const ref argument, following spec.<\/span>$/;"	a
l00032	docs/tinyxml_8h-source.html	/^<a name="l00032"><\/a>00032 <span class="preprocessor"><\/span><span class="preprocessor">#pragma warning( disable : 4786 )<\/span>$/;"	a
l00033	docs/tinystr_8h-source.html	/^<a name="l00033"><\/a>00033 <span class="comment"> * - added "copy" constructor with length, and most compare operators.<\/span>$/;"	a
l00033	docs/tinyxml_8h-source.html	/^<a name="l00033"><\/a>00033 <span class="preprocessor"><\/span><span class="preprocessor">#endif<\/span>$/;"	a
l00034	docs/tinystr_8h-source.html	/^<a name="l00034"><\/a>00034 <span class="comment"> * - added swap(), clear(), size(), capacity(), operator+().<\/span>$/;"	a
l00034	docs/tinyxml_8h-source.html	/^<a name="l00034"><\/a>00034 <span class="preprocessor"><\/span>$/;"	a
l00035	docs/tinystr_8h-source.html	/^<a name="l00035"><\/a>00035 <span class="comment"> *\/<\/span>$/;"	a
l00035	docs/tinyxml_8h-source.html	/^<a name="l00035"><\/a>00035 <span class="preprocessor">#include &lt;ctype.h&gt;<\/span>$/;"	a
l00036	docs/tinystr_8h-source.html	/^<a name="l00036"><\/a>00036 $/;"	a
l00036	docs/tinyxml_8h-source.html	/^<a name="l00036"><\/a>00036 <span class="preprocessor">#include &lt;stdio.h&gt;<\/span>$/;"	a
l00037	docs/tinystr_8h-source.html	/^<a name="l00037"><\/a>00037 <span class="preprocessor">#ifndef TIXML_USE_STL<\/span>$/;"	a
l00037	docs/tinyxml_8h-source.html	/^<a name="l00037"><\/a>00037 <span class="preprocessor">#include &lt;stdlib.h&gt;<\/span>$/;"	a
l00038	docs/tinystr_8h-source.html	/^<a name="l00038"><\/a>00038 <span class="preprocessor"><\/span>$/;"	a
l00038	docs/tinyxml_8h-source.html	/^<a name="l00038"><\/a>00038 <span class="preprocessor">#include &lt;string.h&gt;<\/span>$/;"	a
l00039	docs/tinystr_8h-source.html	/^<a name="l00039"><\/a>00039 <span class="preprocessor">#ifndef TIXML_STRING_INCLUDED<\/span>$/;"	a
l00039	docs/tinyxml_8h-source.html	/^<a name="l00039"><\/a>00039 <span class="preprocessor">#include &lt;assert.h&gt;<\/span>$/;"	a
l00040	docs/tinystr_8h-source.html	/^<a name="l00040"><\/a>00040 <span class="preprocessor"><\/span><span class="preprocessor">#define TIXML_STRING_INCLUDED<\/span>$/;"	a
l00040	docs/tinyxml_8h-source.html	/^<a name="l00040"><\/a>00040 $/;"	a
l00041	docs/tinystr_8h-source.html	/^<a name="l00041"><\/a>00041 <span class="preprocessor"><\/span>$/;"	a
l00041	docs/tinyxml_8h-source.html	/^<a name="l00041"><\/a>00041 <span class="comment">\/\/ Help out windows:<\/span>$/;"	a
l00042	docs/tinystr_8h-source.html	/^<a name="l00042"><\/a>00042 <span class="preprocessor">#include &lt;assert.h&gt;<\/span>$/;"	a
l00042	docs/tinyxml_8h-source.html	/^<a name="l00042"><\/a>00042 <span class="preprocessor">#if defined( _DEBUG ) &amp;&amp; !defined( DEBUG )<\/span>$/;"	a
l00043	docs/tinystr_8h-source.html	/^<a name="l00043"><\/a>00043 <span class="preprocessor">#include &lt;string.h&gt;<\/span>$/;"	a
l00043	docs/tinyxml_8h-source.html	/^<a name="l00043"><\/a>00043 <span class="preprocessor"><\/span><span class="preprocessor">#define DEBUG<\/span>$/;"	a
l00044	docs/tinystr_8h-source.html	/^<a name="l00044"><\/a>00044 $/;"	a
l00044	docs/tinyxml_8h-source.html	/^<a name="l00044"><\/a>00044 <span class="preprocessor"><\/span><span class="preprocessor">#endif<\/span>$/;"	a
l00045	docs/tinystr_8h-source.html	/^<a name="l00045"><\/a>00045 <span class="comment">\/*  The support for explicit isn't that universal, and it isn't really<\/span>$/;"	a
l00045	docs/tinyxml_8h-source.html	/^<a name="l00045"><\/a>00045 <span class="preprocessor"><\/span>$/;"	a
l00046	docs/tinystr_8h-source.html	/^<a name="l00046"><\/a>00046 <span class="comment">    required - it is used to check that the TiXmlString class isn't incorrectly<\/span>$/;"	a
l00046	docs/tinyxml_8h-source.html	/^<a name="l00046"><\/a>00046 <span class="preprocessor">#ifdef TIXML_USE_STL<\/span>$/;"	a
l00047	docs/tinystr_8h-source.html	/^<a name="l00047"><\/a>00047 <span class="comment">    used. Be nice to old compilers and macro it here:<\/span>$/;"	a
l00047	docs/tinyxml_8h-source.html	/^<a name="l00047"><\/a>00047 <span class="preprocessor"><\/span><span class="preprocessor">    #include &lt;string&gt;<\/span>$/;"	a
l00048	docs/tinystr_8h-source.html	/^<a name="l00048"><\/a>00048 <span class="comment">*\/<\/span>$/;"	a
l00048	docs/tinyxml_8h-source.html	/^<a name="l00048"><\/a>00048 <span class="preprocessor">    #include &lt;iostream&gt;<\/span>$/;"	a
l00049	docs/tinystr_8h-source.html	/^<a name="l00049"><\/a>00049 <span class="preprocessor">#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200 )<\/span>$/;"	a
l00049	docs/tinyxml_8h-source.html	/^<a name="l00049"><\/a>00049 <span class="preprocessor">    #include &lt;sstream&gt;<\/span>$/;"	a
l00050	docs/tinystr_8h-source.html	/^<a name="l00050"><\/a>00050 <span class="preprocessor"><\/span>    <span class="comment">\/\/ Microsoft visual studio, version 6 and higher.<\/span>$/;"	a
l00050	docs/tinyxml_8h-source.html	/^<a name="l00050"><\/a>00050 <span class="preprocessor">    #define TIXML_STRING        std::string<\/span>$/;"	a
l00051	docs/tinystr_8h-source.html	/^<a name="l00051"><\/a>00051 <span class="preprocessor">    #define TIXML_EXPLICIT explicit<\/span>$/;"	a
l00051	docs/tinyxml_8h-source.html	/^<a name="l00051"><\/a>00051 <span class="preprocessor"><\/span><span class="preprocessor">#else<\/span>$/;"	a
l00052	docs/tinystr_8h-source.html	/^<a name="l00052"><\/a>00052 <span class="preprocessor"><\/span><span class="preprocessor">#elif defined(__GNUC__) &amp;&amp; (__GNUC__ &gt;= 3 )<\/span>$/;"	a
l00052	docs/tinyxml_8h-source.html	/^<a name="l00052"><\/a>00052 <span class="preprocessor"><\/span><span class="preprocessor">    #include "tinystr.h"<\/span>$/;"	a
l00053	docs/tinystr_8h-source.html	/^<a name="l00053"><\/a>00053 <span class="preprocessor"><\/span>    <span class="comment">\/\/ GCC version 3 and higher.s<\/span>$/;"	a
l00053	docs/tinyxml_8h-source.html	/^<a name="l00053"><\/a>00053 <span class="preprocessor">    #define TIXML_STRING        TiXmlString<\/span>$/;"	a
l00054	docs/tinystr_8h-source.html	/^<a name="l00054"><\/a>00054 <span class="preprocessor">    #define TIXML_EXPLICIT explicit<\/span>$/;"	a
l00054	docs/tinyxml_8h-source.html	/^<a name="l00054"><\/a>00054 <span class="preprocessor"><\/span><span class="preprocessor">#endif<\/span>$/;"	a
l00055	docs/tinystr_8h-source.html	/^<a name="l00055"><\/a>00055 <span class="preprocessor"><\/span><span class="preprocessor">#else<\/span>$/;"	a
l00055	docs/tinyxml_8h-source.html	/^<a name="l00055"><\/a>00055 <span class="preprocessor"><\/span>$/;"	a
l00056	docs/tinystr_8h-source.html	/^<a name="l00056"><\/a>00056 <span class="preprocessor"><\/span><span class="preprocessor">    #define TIXML_EXPLICIT<\/span>$/;"	a
l00056	docs/tinyxml_8h-source.html	/^<a name="l00056"><\/a>00056 <span class="comment">\/\/ Deprecated library function hell. Compilers want to use the<\/span>$/;"	a
l00057	docs/tinystr_8h-source.html	/^<a name="l00057"><\/a>00057 <span class="preprocessor"><\/span><span class="preprocessor">#endif<\/span>$/;"	a
l00057	docs/tinyxml_8h-source.html	/^<a name="l00057"><\/a>00057 <span class="comment">\/\/ new safe versions. This probably doesn't fully address the problem,<\/span>$/;"	a
l00058	docs/tinystr_8h-source.html	/^<a name="l00058"><\/a>00058 <span class="preprocessor"><\/span>$/;"	a
l00058	docs/tinyxml_8h-source.html	/^<a name="l00058"><\/a>00058 <span class="comment">\/\/ but it gets closer. There are too many compilers for me to fully<\/span>$/;"	a
l00059	docs/tinystr_8h-source.html	/^<a name="l00059"><\/a>00059 $/;"	a
l00059	docs/tinyxml_8h-source.html	/^<a name="l00059"><\/a>00059 <span class="comment">\/\/ test. If you get compilation troubles, undefine TIXML_SAFE<\/span>$/;"	a
l00060	docs/tinystr_8h-source.html	/^<a name="l00060"><\/a>00060 <span class="comment">\/*<\/span>$/;"	a
l00060	docs/tinyxml_8h-source.html	/^<a name="l00060"><\/a>00060 <span class="preprocessor">#define TIXML_SAFE<\/span>$/;"	a
l00061	docs/tinystr_8h-source.html	/^<a name="l00061"><\/a>00061 <span class="comment">   TiXmlString is an emulation of a subset of the std::string template.<\/span>$/;"	a
l00061	docs/tinyxml_8h-source.html	/^<a name="l00061"><\/a>00061 <span class="preprocessor"><\/span>$/;"	a
l00062	docs/tinystr_8h-source.html	/^<a name="l00062"><\/a>00062 <span class="comment">   Its purpose is to allow compiling TinyXML on compilers with no or poor STL support.<\/span>$/;"	a
l00062	docs/tinyxml_8h-source.html	/^<a name="l00062"><\/a>00062 <span class="preprocessor">#ifdef TIXML_SAFE<\/span>$/;"	a
l00063	docs/tinystr_8h-source.html	/^<a name="l00063"><\/a>00063 <span class="comment">   Only the member functions relevant to the TinyXML project have been implemented.<\/span>$/;"	a
l00063	docs/tinyxml_8h-source.html	/^<a name="l00063"><\/a>00063 <span class="preprocessor"><\/span><span class="preprocessor">    #if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1400 )<\/span>$/;"	a
l00064	docs/tinystr_8h-source.html	/^<a name="l00064"><\/a>00064 <span class="comment">   The buffer allocation is made by a simplistic power of 2 like mechanism : if we increase<\/span>$/;"	a
l00064	docs/tinyxml_8h-source.html	/^<a name="l00064"><\/a>00064 <span class="preprocessor"><\/span>        <span class="comment">\/\/ Microsoft visual studio, version 2005 and higher.<\/span>$/;"	a
l00065	docs/tinystr_8h-source.html	/^<a name="l00065"><\/a>00065 <span class="comment">   a string and there's no more room, we allocate a buffer twice as big as we need.<\/span>$/;"	a
l00065	docs/tinyxml_8h-source.html	/^<a name="l00065"><\/a>00065 <span class="preprocessor">        #define TIXML_SNPRINTF _snprintf_s<\/span>$/;"	a
l00066	docs/tinystr_8h-source.html	/^<a name="l00066"><\/a>00066 <span class="comment">*\/<\/span>$/;"	a
l00066	docs/tinyxml_8h-source.html	/^<a name="l00066"><\/a>00066 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SNSCANF  _snscanf_s<\/span>$/;"	a
l00067	docs/tinystr_8h-source.html	/^<a name="l00067"><\/a>00067 <span class="keyword">class <\/span>TiXmlString$/;"	a
l00067	docs/tinyxml_8h-source.html	/^<a name="l00067"><\/a>00067 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SSCANF   sscanf_s<\/span>$/;"	a
l00068	docs/tinystr_8h-source.html	/^<a name="l00068"><\/a>00068 {$/;"	a
l00068	docs/tinyxml_8h-source.html	/^<a name="l00068"><\/a>00068 <span class="preprocessor"><\/span><span class="preprocessor">    #elif defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200 )<\/span>$/;"	a
l00069	docs/tinystr_8h-source.html	/^<a name="l00069"><\/a>00069   <span class="keyword">public<\/span> :$/;"	a
l00069	docs/tinyxml_8h-source.html	/^<a name="l00069"><\/a>00069 <span class="preprocessor"><\/span>        <span class="comment">\/\/ Microsoft visual studio, version 6 and higher.<\/span>$/;"	a
l00070	docs/tinystr_8h-source.html	/^<a name="l00070"><\/a>00070     <span class="comment">\/\/ The size type used<\/span>$/;"	a
l00070	docs/tinyxml_8h-source.html	/^<a name="l00070"><\/a>00070         <span class="comment">\/\/#pragma message( "Using _sn* functions." )<\/span>$/;"	a
l00071	docs/tinystr_8h-source.html	/^<a name="l00071"><\/a>00071     <span class="keyword">typedef<\/span> size_t size_type;$/;"	a
l00071	docs/tinyxml_8h-source.html	/^<a name="l00071"><\/a>00071 <span class="preprocessor">        #define TIXML_SNPRINTF _snprintf<\/span>$/;"	a
l00072	docs/tinystr_8h-source.html	/^<a name="l00072"><\/a>00072 $/;"	a
l00072	docs/tinyxml_8h-source.html	/^<a name="l00072"><\/a>00072 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SNSCANF  _snscanf<\/span>$/;"	a
l00073	docs/tinystr_8h-source.html	/^<a name="l00073"><\/a>00073     <span class="comment">\/\/ Error value for find primitive<\/span>$/;"	a
l00073	docs/tinyxml_8h-source.html	/^<a name="l00073"><\/a>00073 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SSCANF   sscanf<\/span>$/;"	a
l00074	docs/tinystr_8h-source.html	/^<a name="l00074"><\/a>00074     <span class="keyword">static<\/span> <span class="keyword">const<\/span> size_type npos; <span class="comment">\/\/ = -1;<\/span>$/;"	a
l00074	docs/tinyxml_8h-source.html	/^<a name="l00074"><\/a>00074 <span class="preprocessor"><\/span><span class="preprocessor">    #elif defined(__GNUC__) &amp;&amp; (__GNUC__ &gt;= 3 )<\/span>$/;"	a
l00075	docs/tinystr_8h-source.html	/^<a name="l00075"><\/a>00075 $/;"	a
l00075	docs/tinyxml_8h-source.html	/^<a name="l00075"><\/a>00075 <span class="preprocessor"><\/span>        <span class="comment">\/\/ GCC version 3 and higher.s<\/span>$/;"	a
l00076	docs/tinystr_8h-source.html	/^<a name="l00076"><\/a>00076 $/;"	a
l00076	docs/tinyxml_8h-source.html	/^<a name="l00076"><\/a>00076         <span class="comment">\/\/#warning( "Using sn* functions." )<\/span>$/;"	a
l00077	docs/tinystr_8h-source.html	/^<a name="l00077"><\/a>00077     <span class="comment">\/\/ TiXmlString empty constructor<\/span>$/;"	a
l00077	docs/tinyxml_8h-source.html	/^<a name="l00077"><\/a>00077 <span class="preprocessor">        #define TIXML_SNPRINTF snprintf<\/span>$/;"	a
l00078	docs/tinystr_8h-source.html	/^<a name="l00078"><\/a>00078     TiXmlString () : rep_(&amp;nullrep_)$/;"	a
l00078	docs/tinyxml_8h-source.html	/^<a name="l00078"><\/a>00078 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SNSCANF  snscanf<\/span>$/;"	a
l00079	docs/tinystr_8h-source.html	/^<a name="l00079"><\/a>00079     {$/;"	a
l00079	docs/tinyxml_8h-source.html	/^<a name="l00079"><\/a>00079 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SSCANF   sscanf<\/span>$/;"	a
l00080	docs/tinystr_8h-source.html	/^<a name="l00080"><\/a>00080     }$/;"	a
l00080	docs/tinyxml_8h-source.html	/^<a name="l00080"><\/a>00080 <span class="preprocessor"><\/span><span class="preprocessor">    #else<\/span>$/;"	a
l00081	docs/tinystr_8h-source.html	/^<a name="l00081"><\/a>00081 $/;"	a
l00081	docs/tinyxml_8h-source.html	/^<a name="l00081"><\/a>00081 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SSCANF   sscanf<\/span>$/;"	a
l00082	docs/tinystr_8h-source.html	/^<a name="l00082"><\/a>00082     <span class="comment">\/\/ TiXmlString copy constructor<\/span>$/;"	a
l00082	docs/tinyxml_8h-source.html	/^<a name="l00082"><\/a>00082 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l00083	docs/tinystr_8h-source.html	/^<a name="l00083"><\/a>00083     TiXmlString ( <span class="keyword">const<\/span> TiXmlString &amp; copy) : rep_(0)$/;"	a
l00083	docs/tinyxml_8h-source.html	/^<a name="l00083"><\/a>00083 <span class="preprocessor"><\/span><span class="preprocessor">#endif  <\/span>$/;"	a
l00084	docs/tinystr_8h-source.html	/^<a name="l00084"><\/a>00084     {$/;"	a
l00084	docs/tinyxml_8h-source.html	/^<a name="l00084"><\/a>00084 <span class="preprocessor"><\/span>$/;"	a
l00085	docs/tinystr_8h-source.html	/^<a name="l00085"><\/a>00085         init(copy.length());$/;"	a
l00085	docs/tinyxml_8h-source.html	/^<a name="l00085"><\/a>00085 <span class="keyword">class <\/span><a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>;$/;"	a
l00086	docs/tinystr_8h-source.html	/^<a name="l00086"><\/a>00086         memcpy(start(), copy.data(), length());$/;"	a
l00086	docs/tinyxml_8h-source.html	/^<a name="l00086"><\/a>00086 <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>;$/;"	a
l00087	docs/tinystr_8h-source.html	/^<a name="l00087"><\/a>00087     }$/;"	a
l00087	docs/tinyxml_8h-source.html	/^<a name="l00087"><\/a>00087 <span class="keyword">class <\/span><a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>;$/;"	a
l00088	docs/tinystr_8h-source.html	/^<a name="l00088"><\/a>00088 $/;"	a
l00088	docs/tinyxml_8h-source.html	/^<a name="l00088"><\/a>00088 <span class="keyword">class <\/span><a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>;$/;"	a
l00089	docs/tinystr_8h-source.html	/^<a name="l00089"><\/a>00089     <span class="comment">\/\/ TiXmlString constructor, based on a string<\/span>$/;"	a
l00089	docs/tinyxml_8h-source.html	/^<a name="l00089"><\/a>00089 <span class="keyword">class <\/span><a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>;$/;"	a
l00090	docs/tinystr_8h-source.html	/^<a name="l00090"><\/a>00090     TIXML_EXPLICIT TiXmlString ( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * copy) : rep_(0)$/;"	a
l00090	docs/tinyxml_8h-source.html	/^<a name="l00090"><\/a>00090 <span class="keyword">class <\/span><a class="code" href="classTiXmlText.html">TiXmlText<\/a>;$/;"	a
l00091	docs/tinystr_8h-source.html	/^<a name="l00091"><\/a>00091     {$/;"	a
l00091	docs/tinyxml_8h-source.html	/^<a name="l00091"><\/a>00091 <span class="keyword">class <\/span><a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>;$/;"	a
l00092	docs/tinystr_8h-source.html	/^<a name="l00092"><\/a>00092         init( static_cast&lt;size_type&gt;( strlen(copy) ));$/;"	a
l00092	docs/tinyxml_8h-source.html	/^<a name="l00092"><\/a>00092 <span class="keyword">class <\/span>TiXmlParsingData;$/;"	a
l00093	docs/tinystr_8h-source.html	/^<a name="l00093"><\/a>00093         memcpy(start(), copy, length());$/;"	a
l00093	docs/tinyxml_8h-source.html	/^<a name="l00093"><\/a>00093 $/;"	a
l00094	docs/tinystr_8h-source.html	/^<a name="l00094"><\/a>00094     }$/;"	a
l00094	docs/tinyxml_8h-source.html	/^<a name="l00094"><\/a>00094 <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> TIXML_MAJOR_VERSION = 2;$/;"	a
l00095	docs/tinystr_8h-source.html	/^<a name="l00095"><\/a>00095 $/;"	a
l00095	docs/tinyxml_8h-source.html	/^<a name="l00095"><\/a>00095 <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> TIXML_MINOR_VERSION = 5;$/;"	a
l00096	docs/tinystr_8h-source.html	/^<a name="l00096"><\/a>00096     <span class="comment">\/\/ TiXmlString constructor, based on a string<\/span>$/;"	a
l00096	docs/tinyxml_8h-source.html	/^<a name="l00096"><\/a>00096 <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> TIXML_PATCH_VERSION = 3;$/;"	a
l00097	docs/tinystr_8h-source.html	/^<a name="l00097"><\/a>00097     TIXML_EXPLICIT TiXmlString ( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * str, size_type len) : rep_(0)$/;"	a
l00097	docs/tinyxml_8h-source.html	/^<a name="l00097"><\/a>00097 $/;"	a
l00098	docs/tinystr_8h-source.html	/^<a name="l00098"><\/a>00098     {$/;"	a
l00098	docs/tinyxml_8h-source.html	/^<a name="l00098"><\/a>00098 <span class="comment">\/*  Internal structure for tracking location of items <\/span>$/;"	a
l00099	docs/tinystr_8h-source.html	/^<a name="l00099"><\/a>00099         init(len);$/;"	a
l00099	docs/tinyxml_8h-source.html	/^<a name="l00099"><\/a>00099 <span class="comment">    in the XML file.<\/span>$/;"	a
l00100	docs/tinystr_8h-source.html	/^<a name="l00100"><\/a>00100         memcpy(start(), str, len);$/;"	a
l00100	docs/tinyxml_8h-source.html	/^<a name="l00100"><\/a>00100 <span class="comment">*\/<\/span>$/;"	a
l00101	docs/tinystr_8h-source.html	/^<a name="l00101"><\/a>00101     }$/;"	a
l00101	docs/tinyxml_8h-source.html	/^<a name="l00101"><\/a>00101 <span class="keyword">struct <\/span>TiXmlCursor$/;"	a
l00102	docs/tinystr_8h-source.html	/^<a name="l00102"><\/a>00102 $/;"	a
l00102	docs/tinyxml_8h-source.html	/^<a name="l00102"><\/a>00102 {$/;"	a
l00103	docs/tinystr_8h-source.html	/^<a name="l00103"><\/a>00103     <span class="comment">\/\/ TiXmlString destructor<\/span>$/;"	a
l00103	docs/tinyxml_8h-source.html	/^<a name="l00103"><\/a>00103     TiXmlCursor()       { Clear(); }$/;"	a
l00104	docs/tinystr_8h-source.html	/^<a name="l00104"><\/a>00104     ~TiXmlString ()$/;"	a
l00104	docs/tinyxml_8h-source.html	/^<a name="l00104"><\/a>00104     <span class="keywordtype">void<\/span> Clear()        { row = col = -1; }$/;"	a
l00105	docs/tinystr_8h-source.html	/^<a name="l00105"><\/a>00105     {$/;"	a
l00105	docs/tinyxml_8h-source.html	/^<a name="l00105"><\/a>00105 $/;"	a
l00106	docs/tinystr_8h-source.html	/^<a name="l00106"><\/a>00106         quit();$/;"	a
l00106	docs/tinyxml_8h-source.html	/^<a name="l00106"><\/a>00106     <span class="keywordtype">int<\/span> row;    <span class="comment">\/\/ 0 based.<\/span>$/;"	a
l00107	docs/tinystr_8h-source.html	/^<a name="l00107"><\/a>00107     }$/;"	a
l00107	docs/tinyxml_8h-source.html	/^<a name="l00107"><\/a>00107     <span class="keywordtype">int<\/span> col;    <span class="comment">\/\/ 0 based.<\/span>$/;"	a
l00108	docs/tinystr_8h-source.html	/^<a name="l00108"><\/a>00108 $/;"	a
l00108	docs/tinyxml_8h-source.html	/^<a name="l00108"><\/a>00108 };$/;"	a
l00109	docs/tinystr_8h-source.html	/^<a name="l00109"><\/a>00109     <span class="comment">\/\/ = operator<\/span>$/;"	a
l00109	docs/tinyxml_8h-source.html	/^<a name="l00109"><\/a>00109 $/;"	a
l00110	docs/tinystr_8h-source.html	/^<a name="l00110"><\/a>00110     TiXmlString&amp; operator = (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * copy)$/;"	a
l00110	docs/tinyxml_8h-source.html	/^<a name="l00110"><\/a>00110 $/;"	a
l00111	docs/tinystr_8h-source.html	/^<a name="l00111"><\/a>00111     {$/;"	a
l00112	docs/tinystr_8h-source.html	/^<a name="l00112"><\/a>00112         <span class="keywordflow">return<\/span> assign( copy, (size_type)strlen(copy));$/;"	a
l00113	docs/tinystr_8h-source.html	/^<a name="l00113"><\/a>00113     }$/;"	a
l00114	docs/tinystr_8h-source.html	/^<a name="l00114"><\/a>00114 $/;"	a
l00115	docs/tinystr_8h-source.html	/^<a name="l00115"><\/a>00115     <span class="comment">\/\/ = operator<\/span>$/;"	a
l00116	docs/tinystr_8h-source.html	/^<a name="l00116"><\/a>00116     TiXmlString&amp; operator = (<span class="keyword">const<\/span> TiXmlString &amp; copy)$/;"	a
l00117	docs/tinystr_8h-source.html	/^<a name="l00117"><\/a>00117     {$/;"	a
l00118	docs/tinystr_8h-source.html	/^<a name="l00118"><\/a>00118         <span class="keywordflow">return<\/span> assign(copy.start(), copy.length());$/;"	a
l00119	docs/tinystr_8h-source.html	/^<a name="l00119"><\/a>00119     }$/;"	a
l00120	docs/tinystr_8h-source.html	/^<a name="l00120"><\/a>00120 $/;"	a
l00121	docs/tinystr_8h-source.html	/^<a name="l00121"><\/a>00121 $/;"	a
l00122	docs/tinystr_8h-source.html	/^<a name="l00122"><\/a>00122     <span class="comment">\/\/ += operator. Maps to append<\/span>$/;"	a
l00123	docs/tinystr_8h-source.html	/^<a name="l00123"><\/a>00123     TiXmlString&amp; operator += (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * suffix)$/;"	a
l00124	docs/tinystr_8h-source.html	/^<a name="l00124"><\/a>00124     {$/;"	a
l00125	docs/tinystr_8h-source.html	/^<a name="l00125"><\/a>00125         <span class="keywordflow">return<\/span> append(suffix, static_cast&lt;size_type&gt;( strlen(suffix) ));$/;"	a
l00126	docs/tinystr_8h-source.html	/^<a name="l00126"><\/a>00126     }$/;"	a
l00127	docs/tinystr_8h-source.html	/^<a name="l00127"><\/a>00127 $/;"	a
l00128	docs/tinystr_8h-source.html	/^<a name="l00128"><\/a>00128     <span class="comment">\/\/ += operator. Maps to append<\/span>$/;"	a
l00129	docs/tinystr_8h-source.html	/^<a name="l00129"><\/a>00129     TiXmlString&amp; operator += (<span class="keywordtype">char<\/span> single)$/;"	a
l00129	docs/tinyxml_8h-source.html	/^<a name="l00129"><\/a><a class="code" href="classTiXmlVisitor.html">00129<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>$/;"	a
l00130	docs/tinystr_8h-source.html	/^<a name="l00130"><\/a>00130     {$/;"	a
l00130	docs/tinyxml_8h-source.html	/^<a name="l00130"><\/a>00130 {$/;"	a
l00131	docs/tinystr_8h-source.html	/^<a name="l00131"><\/a>00131         <span class="keywordflow">return<\/span> append(&amp;single, 1);$/;"	a
l00131	docs/tinyxml_8h-source.html	/^<a name="l00131"><\/a>00131 <span class="keyword">public<\/span>:$/;"	a
l00132	docs/tinystr_8h-source.html	/^<a name="l00132"><\/a>00132     }$/;"	a
l00132	docs/tinyxml_8h-source.html	/^<a name="l00132"><\/a>00132     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>() {}$/;"	a
l00133	docs/tinystr_8h-source.html	/^<a name="l00133"><\/a>00133 $/;"	a
l00133	docs/tinyxml_8h-source.html	/^<a name="l00133"><\/a>00133 $/;"	a
l00134	docs/tinystr_8h-source.html	/^<a name="l00134"><\/a>00134     <span class="comment">\/\/ += operator. Maps to append<\/span>$/;"	a
l00135	docs/tinystr_8h-source.html	/^<a name="l00135"><\/a>00135     TiXmlString&amp; operator += (<span class="keyword">const<\/span> TiXmlString &amp; suffix)$/;"	a
l00135	docs/tinyxml_8h-source.html	/^<a name="l00135"><\/a><a class="code" href="classTiXmlVisitor.html#07baecb52dd7d8716ae2a48ad0956ee0">00135<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#07baecb52dd7d8716ae2a48ad0956ee0">VisitEnter<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>&amp; <span class="comment">\/*doc*\/<\/span> )         { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00136	docs/tinystr_8h-source.html	/^<a name="l00136"><\/a>00136     {$/;"	a
l00137	docs/tinystr_8h-source.html	/^<a name="l00137"><\/a>00137         <span class="keywordflow">return<\/span> append(suffix.data(), suffix.length());$/;"	a
l00137	docs/tinyxml_8h-source.html	/^<a name="l00137"><\/a><a class="code" href="classTiXmlVisitor.html#a0ade4f27087447e93974e975c3246ad">00137<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#a0ade4f27087447e93974e975c3246ad">VisitExit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>&amp; <span class="comment">\/*doc*\/<\/span> )          { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00138	docs/tinystr_8h-source.html	/^<a name="l00138"><\/a>00138     }$/;"	a
l00138	docs/tinyxml_8h-source.html	/^<a name="l00138"><\/a>00138 $/;"	a
l00139	docs/tinystr_8h-source.html	/^<a name="l00139"><\/a>00139 $/;"	a
l00140	docs/tinystr_8h-source.html	/^<a name="l00140"><\/a>00140 $/;"	a
l00140	docs/tinyxml_8h-source.html	/^<a name="l00140"><\/a><a class="code" href="classTiXmlVisitor.html#f6c6178ffa517bbdba95d70490875fff">00140<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#07baecb52dd7d8716ae2a48ad0956ee0">VisitEnter<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>&amp; <span class="comment">\/*element*\/<\/span>, <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* <span class="comment">\/*firstAttribute*\/<\/span> )    { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00141	docs/tinystr_8h-source.html	/^<a name="l00141"><\/a>00141     <span class="comment">\/\/ Convert a TiXmlString into a null-terminated char *<\/span>$/;"	a
l00142	docs/tinystr_8h-source.html	/^<a name="l00142"><\/a>00142     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * c_str ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;str; }$/;"	a
l00142	docs/tinyxml_8h-source.html	/^<a name="l00142"><\/a><a class="code" href="classTiXmlVisitor.html#ec2b1f8116226d52f3a1b95dafd3a32c">00142<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#a0ade4f27087447e93974e975c3246ad">VisitExit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>&amp; <span class="comment">\/*element*\/<\/span> )       { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00143	docs/tinystr_8h-source.html	/^<a name="l00143"><\/a>00143 $/;"	a
l00143	docs/tinyxml_8h-source.html	/^<a name="l00143"><\/a>00143 $/;"	a
l00144	docs/tinystr_8h-source.html	/^<a name="l00144"><\/a>00144     <span class="comment">\/\/ Convert a TiXmlString into a char * (need not be null terminated).<\/span>$/;"	a
l00145	docs/tinystr_8h-source.html	/^<a name="l00145"><\/a>00145     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * data ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;str; }$/;"	a
l00145	docs/tinyxml_8h-source.html	/^<a name="l00145"><\/a><a class="code" href="classTiXmlVisitor.html#fad71c71ce6473fb9b4b64cd92de4a19">00145<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#fad71c71ce6473fb9b4b64cd92de4a19">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>&amp; <span class="comment">\/*declaration*\/<\/span> )   { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00146	docs/tinystr_8h-source.html	/^<a name="l00146"><\/a>00146 $/;"	a
l00147	docs/tinystr_8h-source.html	/^<a name="l00147"><\/a>00147     <span class="comment">\/\/ Return the length of a TiXmlString<\/span>$/;"	a
l00147	docs/tinyxml_8h-source.html	/^<a name="l00147"><\/a><a class="code" href="classTiXmlVisitor.html#399b8ebca5cd14664974a32d2ce029e5">00147<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#fad71c71ce6473fb9b4b64cd92de4a19">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html">TiXmlText<\/a>&amp; <span class="comment">\/*text*\/<\/span> )                 { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00148	docs/tinystr_8h-source.html	/^<a name="l00148"><\/a>00148     size_type length ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;size; }$/;"	a
l00149	docs/tinystr_8h-source.html	/^<a name="l00149"><\/a>00149 $/;"	a
l00149	docs/tinyxml_8h-source.html	/^<a name="l00149"><\/a><a class="code" href="classTiXmlVisitor.html#53a60e7a528627b31af3161972cc7fa2">00149<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#fad71c71ce6473fb9b4b64cd92de4a19">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>&amp; <span class="comment">\/*comment*\/<\/span> )           { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00150	docs/tinystr_8h-source.html	/^<a name="l00150"><\/a>00150     <span class="comment">\/\/ Alias for length()<\/span>$/;"	a
l00151	docs/tinystr_8h-source.html	/^<a name="l00151"><\/a>00151     size_type size ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;size; }$/;"	a
l00151	docs/tinyxml_8h-source.html	/^<a name="l00151"><\/a><a class="code" href="classTiXmlVisitor.html#7e284d607d275c51dac1adb58159ce28">00151<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#fad71c71ce6473fb9b4b64cd92de4a19">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>&amp; <span class="comment">\/*unknown*\/<\/span> )           { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00152	docs/tinystr_8h-source.html	/^<a name="l00152"><\/a>00152 $/;"	a
l00152	docs/tinyxml_8h-source.html	/^<a name="l00152"><\/a>00152 };$/;"	a
l00153	docs/tinystr_8h-source.html	/^<a name="l00153"><\/a>00153     <span class="comment">\/\/ Checks if a TiXmlString is empty<\/span>$/;"	a
l00153	docs/tinyxml_8h-source.html	/^<a name="l00153"><\/a>00153 $/;"	a
l00154	docs/tinystr_8h-source.html	/^<a name="l00154"><\/a>00154     <span class="keywordtype">bool<\/span> empty ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;size == 0; }$/;"	a
l00154	docs/tinyxml_8h-source.html	/^<a name="l00154"><\/a>00154 <span class="comment">\/\/ Only used by Attribute::Query functions<\/span>$/;"	a
l00155	docs/tinystr_8h-source.html	/^<a name="l00155"><\/a>00155 $/;"	a
l00155	docs/tinyxml_8h-source.html	/^<a name="l00155"><\/a>00155 <span class="keyword">enum<\/span> $/;"	a
l00156	docs/tinystr_8h-source.html	/^<a name="l00156"><\/a>00156     <span class="comment">\/\/ Return capacity of string<\/span>$/;"	a
l00156	docs/tinyxml_8h-source.html	/^<a name="l00156"><\/a>00156 { $/;"	a
l00157	docs/tinystr_8h-source.html	/^<a name="l00157"><\/a>00157     size_type capacity ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;capacity; }$/;"	a
l00157	docs/tinyxml_8h-source.html	/^<a name="l00157"><\/a>00157     TIXML_SUCCESS,$/;"	a
l00158	docs/tinystr_8h-source.html	/^<a name="l00158"><\/a>00158 $/;"	a
l00158	docs/tinyxml_8h-source.html	/^<a name="l00158"><\/a>00158     TIXML_NO_ATTRIBUTE,$/;"	a
l00159	docs/tinystr_8h-source.html	/^<a name="l00159"><\/a>00159 $/;"	a
l00159	docs/tinyxml_8h-source.html	/^<a name="l00159"><\/a>00159     TIXML_WRONG_TYPE$/;"	a
l00160	docs/tinystr_8h-source.html	/^<a name="l00160"><\/a>00160     <span class="comment">\/\/ single char extraction<\/span>$/;"	a
l00160	docs/tinyxml_8h-source.html	/^<a name="l00160"><\/a>00160 };$/;"	a
l00161	docs/tinystr_8h-source.html	/^<a name="l00161"><\/a>00161     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>&amp; at (size_type index)<span class="keyword"> const<\/span>$/;"	a
l00161	docs/tinyxml_8h-source.html	/^<a name="l00161"><\/a>00161 $/;"	a
l00162	docs/tinystr_8h-source.html	/^<a name="l00162"><\/a>00162 <span class="keyword">    <\/span>{$/;"	a
l00162	docs/tinyxml_8h-source.html	/^<a name="l00162"><\/a>00162 $/;"	a
l00163	docs/tinystr_8h-source.html	/^<a name="l00163"><\/a>00163         assert( index &lt; length() );$/;"	a
l00163	docs/tinyxml_8h-source.html	/^<a name="l00163"><\/a>00163 <span class="comment">\/\/ Used by the parsing routines.<\/span>$/;"	a
l00164	docs/tinystr_8h-source.html	/^<a name="l00164"><\/a>00164         <span class="keywordflow">return<\/span> rep_-&gt;str[ index ];$/;"	a
l00164	docs/tinyxml_8h-source.html	/^<a name="l00164"><\/a>00164 <span class="keyword">enum<\/span> TiXmlEncoding$/;"	a
l00165	docs/tinystr_8h-source.html	/^<a name="l00165"><\/a>00165     }$/;"	a
l00165	docs/tinyxml_8h-source.html	/^<a name="l00165"><\/a>00165 {$/;"	a
l00166	docs/tinystr_8h-source.html	/^<a name="l00166"><\/a>00166 $/;"	a
l00166	docs/tinyxml_8h-source.html	/^<a name="l00166"><\/a>00166     TIXML_ENCODING_UNKNOWN,$/;"	a
l00167	docs/tinystr_8h-source.html	/^<a name="l00167"><\/a>00167     <span class="comment">\/\/ [] operator<\/span>$/;"	a
l00167	docs/tinyxml_8h-source.html	/^<a name="l00167"><\/a>00167     TIXML_ENCODING_UTF8,$/;"	a
l00168	docs/tinystr_8h-source.html	/^<a name="l00168"><\/a>00168     <span class="keywordtype">char<\/span>&amp; operator [] (size_type index)<span class="keyword"> const<\/span>$/;"	a
l00168	docs/tinyxml_8h-source.html	/^<a name="l00168"><\/a>00168     TIXML_ENCODING_LEGACY$/;"	a
l00169	docs/tinystr_8h-source.html	/^<a name="l00169"><\/a>00169 <span class="keyword">    <\/span>{$/;"	a
l00169	docs/tinyxml_8h-source.html	/^<a name="l00169"><\/a>00169 };$/;"	a
l00170	docs/tinystr_8h-source.html	/^<a name="l00170"><\/a>00170         assert( index &lt; length() );$/;"	a
l00170	docs/tinyxml_8h-source.html	/^<a name="l00170"><\/a>00170 $/;"	a
l00171	docs/tinystr_8h-source.html	/^<a name="l00171"><\/a>00171         <span class="keywordflow">return<\/span> rep_-&gt;str[ index ];$/;"	a
l00171	docs/tinyxml_8h-source.html	/^<a name="l00171"><\/a>00171 <span class="keyword">const<\/span> TiXmlEncoding TIXML_DEFAULT_ENCODING = TIXML_ENCODING_UNKNOWN;$/;"	a
l00172	docs/tinystr_8h-source.html	/^<a name="l00172"><\/a>00172     }$/;"	a
l00172	docs/tinyxml_8h-source.html	/^<a name="l00172"><\/a>00172 $/;"	a
l00173	docs/tinystr_8h-source.html	/^<a name="l00173"><\/a>00173 $/;"	a
l00174	docs/tinystr_8h-source.html	/^<a name="l00174"><\/a>00174     <span class="comment">\/\/ find a char in a string. Return TiXmlString::npos if not found<\/span>$/;"	a
l00175	docs/tinystr_8h-source.html	/^<a name="l00175"><\/a>00175     size_type find (<span class="keywordtype">char<\/span> lookup)<span class="keyword"> const<\/span>$/;"	a
l00176	docs/tinystr_8h-source.html	/^<a name="l00176"><\/a>00176 <span class="keyword">    <\/span>{$/;"	a
l00177	docs/tinystr_8h-source.html	/^<a name="l00177"><\/a>00177         <span class="keywordflow">return<\/span> find(lookup, 0);$/;"	a
l00178	docs/tinystr_8h-source.html	/^<a name="l00178"><\/a>00178     }$/;"	a
l00179	docs/tinystr_8h-source.html	/^<a name="l00179"><\/a>00179 $/;"	a
l00180	docs/tinystr_8h-source.html	/^<a name="l00180"><\/a>00180     <span class="comment">\/\/ find a char in a string from an offset. Return TiXmlString::npos if not found<\/span>$/;"	a
l00181	docs/tinystr_8h-source.html	/^<a name="l00181"><\/a>00181     size_type find (<span class="keywordtype">char<\/span> tofind, size_type offset)<span class="keyword"> const<\/span>$/;"	a
l00182	docs/tinystr_8h-source.html	/^<a name="l00182"><\/a>00182 <span class="keyword">    <\/span>{$/;"	a
l00183	docs/tinystr_8h-source.html	/^<a name="l00183"><\/a>00183         <span class="keywordflow">if<\/span> (offset &gt;= length()) <span class="keywordflow">return<\/span> npos;$/;"	a
l00184	docs/tinystr_8h-source.html	/^<a name="l00184"><\/a>00184 $/;"	a
l00185	docs/tinystr_8h-source.html	/^<a name="l00185"><\/a>00185         <span class="keywordflow">for<\/span> (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p = c_str() + offset; *p != <span class="charliteral">'\\0'<\/span>; ++p)$/;"	a
l00186	docs/tinystr_8h-source.html	/^<a name="l00186"><\/a>00186         {$/;"	a
l00187	docs/tinystr_8h-source.html	/^<a name="l00187"><\/a>00187            <span class="keywordflow">if<\/span> (*p == tofind) <span class="keywordflow">return<\/span> static_cast&lt; size_type &gt;( p - c_str() );$/;"	a
l00188	docs/tinystr_8h-source.html	/^<a name="l00188"><\/a>00188         }$/;"	a
l00189	docs/tinystr_8h-source.html	/^<a name="l00189"><\/a>00189         <span class="keywordflow">return<\/span> npos;$/;"	a
l00190	docs/tinystr_8h-source.html	/^<a name="l00190"><\/a>00190     }$/;"	a
l00191	docs/tinystr_8h-source.html	/^<a name="l00191"><\/a>00191 $/;"	a
l00192	docs/tinystr_8h-source.html	/^<a name="l00192"><\/a>00192     <span class="keywordtype">void<\/span> clear ()$/;"	a
l00193	docs/tinystr_8h-source.html	/^<a name="l00193"><\/a>00193     {$/;"	a
l00194	docs/tinystr_8h-source.html	/^<a name="l00194"><\/a>00194         <span class="comment">\/\/Lee:<\/span>$/;"	a
l00195	docs/tinystr_8h-source.html	/^<a name="l00195"><\/a>00195         <span class="comment">\/\/The original was just too strange, though correct:<\/span>$/;"	a
l00195	docs/tinyxml_8h-source.html	/^<a name="l00195"><\/a><a class="code" href="classTiXmlBase.html">00195<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlBase.html">TiXmlBase<\/a>$/;"	a
l00196	docs/tinystr_8h-source.html	/^<a name="l00196"><\/a>00196         <span class="comment">\/\/  TiXmlString().swap(*this);<\/span>$/;"	a
l00196	docs/tinyxml_8h-source.html	/^<a name="l00196"><\/a>00196 {$/;"	a
l00197	docs/tinystr_8h-source.html	/^<a name="l00197"><\/a>00197         <span class="comment">\/\/Instead use the quit &amp; re-init:<\/span>$/;"	a
l00197	docs/tinyxml_8h-source.html	/^<a name="l00197"><\/a>00197     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>;$/;"	a
l00198	docs/tinystr_8h-source.html	/^<a name="l00198"><\/a>00198         quit();$/;"	a
l00198	docs/tinyxml_8h-source.html	/^<a name="l00198"><\/a>00198     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>;$/;"	a
l00199	docs/tinystr_8h-source.html	/^<a name="l00199"><\/a>00199         init(0,0);$/;"	a
l00199	docs/tinyxml_8h-source.html	/^<a name="l00199"><\/a>00199     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>;$/;"	a
l00200	docs/tinystr_8h-source.html	/^<a name="l00200"><\/a>00200     }$/;"	a
l00200	docs/tinyxml_8h-source.html	/^<a name="l00200"><\/a>00200 $/;"	a
l00201	docs/tinystr_8h-source.html	/^<a name="l00201"><\/a>00201 $/;"	a
l00201	docs/tinyxml_8h-source.html	/^<a name="l00201"><\/a>00201 <span class="keyword">public<\/span>:$/;"	a
l00202	docs/tinystr_8h-source.html	/^<a name="l00202"><\/a>00202     <span class="comment">\/*  Function to reserve a big amount of data when we know we'll need it. Be aware that this<\/span>$/;"	a
l00202	docs/tinyxml_8h-source.html	/^<a name="l00202"><\/a>00202     <a class="code" href="classTiXmlBase.html">TiXmlBase<\/a>() :   <a class="code" href="classTiXmlBase.html#b242c01590191f644569fa89a080d97c">userData<\/a>(0)     {}$/;"	a
l00203	docs/tinystr_8h-source.html	/^<a name="l00203"><\/a>00203 <span class="comment">        function DOES NOT clear the content of the TiXmlString if any exists.<\/span>$/;"	a
l00203	docs/tinyxml_8h-source.html	/^<a name="l00203"><\/a>00203     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlBase.html">TiXmlBase<\/a>()            {}$/;"	a
l00204	docs/tinystr_8h-source.html	/^<a name="l00204"><\/a>00204 <span class="comment">    *\/<\/span>$/;"	a
l00204	docs/tinyxml_8h-source.html	/^<a name="l00204"><\/a>00204 $/;"	a
l00205	docs/tinystr_8h-source.html	/^<a name="l00205"><\/a>00205     <span class="keywordtype">void<\/span> reserve (size_type cap);$/;"	a
l00206	docs/tinystr_8h-source.html	/^<a name="l00206"><\/a>00206 $/;"	a
l00207	docs/tinystr_8h-source.html	/^<a name="l00207"><\/a>00207     TiXmlString&amp; assign (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* str, size_type len);$/;"	a
l00208	docs/tinystr_8h-source.html	/^<a name="l00208"><\/a>00208 $/;"	a
l00209	docs/tinystr_8h-source.html	/^<a name="l00209"><\/a>00209     TiXmlString&amp; append (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* str, size_type len);$/;"	a
l00210	docs/tinystr_8h-source.html	/^<a name="l00210"><\/a>00210 $/;"	a
l00211	docs/tinystr_8h-source.html	/^<a name="l00211"><\/a>00211     <span class="keywordtype">void<\/span> swap (TiXmlString&amp; other)$/;"	a
l00212	docs/tinystr_8h-source.html	/^<a name="l00212"><\/a>00212     {$/;"	a
l00213	docs/tinystr_8h-source.html	/^<a name="l00213"><\/a>00213         Rep* r = rep_;$/;"	a
l00214	docs/tinystr_8h-source.html	/^<a name="l00214"><\/a>00214         rep_ = other.rep_;$/;"	a
l00214	docs/tinyxml_8h-source.html	/^<a name="l00214"><\/a>00214     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlBase.html#0de56b3f2ef14c65091a3b916437b512">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth ) <span class="keyword">const <\/span>= 0;$/;"	a
l00215	docs/tinystr_8h-source.html	/^<a name="l00215"><\/a>00215         other.rep_ = r;$/;"	a
l00215	docs/tinyxml_8h-source.html	/^<a name="l00215"><\/a>00215 $/;"	a
l00216	docs/tinystr_8h-source.html	/^<a name="l00216"><\/a>00216     }$/;"	a
l00217	docs/tinystr_8h-source.html	/^<a name="l00217"><\/a>00217 $/;"	a
l00218	docs/tinystr_8h-source.html	/^<a name="l00218"><\/a>00218   <span class="keyword">private<\/span>:$/;"	a
l00219	docs/tinystr_8h-source.html	/^<a name="l00219"><\/a>00219 $/;"	a
l00220	docs/tinystr_8h-source.html	/^<a name="l00220"><\/a>00220     <span class="keywordtype">void<\/span> init(size_type sz) { init(sz, sz); }$/;"	a
l00221	docs/tinystr_8h-source.html	/^<a name="l00221"><\/a>00221     <span class="keywordtype">void<\/span> set_size(size_type sz) { rep_-&gt;str[ rep_-&gt;size = sz ] = <span class="charliteral">'\\0'<\/span>; }$/;"	a
l00222	docs/tinystr_8h-source.html	/^<a name="l00222"><\/a>00222     <span class="keywordtype">char<\/span>* start()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;str; }$/;"	a
l00222	docs/tinyxml_8h-source.html	/^<a name="l00222"><\/a><a class="code" href="classTiXmlBase.html#0f799ec645bfb8d8a969e83478f379c1">00222<\/a>     <span class="keyword">static<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlBase.html#0f799ec645bfb8d8a969e83478f379c1">SetCondenseWhiteSpace<\/a>( <span class="keywordtype">bool<\/span> condense )      { condenseWhiteSpace = condense; }$/;"	a
l00223	docs/tinystr_8h-source.html	/^<a name="l00223"><\/a>00223     <span class="keywordtype">char<\/span>* finish()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;str + rep_-&gt;size; }$/;"	a
l00223	docs/tinyxml_8h-source.html	/^<a name="l00223"><\/a>00223 $/;"	a
l00224	docs/tinystr_8h-source.html	/^<a name="l00224"><\/a>00224 $/;"	a
l00225	docs/tinystr_8h-source.html	/^<a name="l00225"><\/a>00225     <span class="keyword">struct <\/span>Rep$/;"	a
l00225	docs/tinyxml_8h-source.html	/^<a name="l00225"><\/a><a class="code" href="classTiXmlBase.html#d4b1472531c647a25b1840a87ae42438">00225<\/a>     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlBase.html#d4b1472531c647a25b1840a87ae42438">IsWhiteSpaceCondensed<\/a>()                     { <span class="keywordflow">return<\/span> condenseWhiteSpace; }$/;"	a
l00226	docs/tinystr_8h-source.html	/^<a name="l00226"><\/a>00226     {$/;"	a
l00226	docs/tinyxml_8h-source.html	/^<a name="l00226"><\/a>00226 $/;"	a
l00227	docs/tinystr_8h-source.html	/^<a name="l00227"><\/a>00227         size_type size, capacity;$/;"	a
l00228	docs/tinystr_8h-source.html	/^<a name="l00228"><\/a>00228         <span class="keywordtype">char<\/span> str[1];$/;"	a
l00229	docs/tinystr_8h-source.html	/^<a name="l00229"><\/a>00229     };$/;"	a
l00230	docs/tinystr_8h-source.html	/^<a name="l00230"><\/a>00230 $/;"	a
l00231	docs/tinystr_8h-source.html	/^<a name="l00231"><\/a>00231     <span class="keywordtype">void<\/span> init(size_type sz, size_type cap)$/;"	a
l00232	docs/tinystr_8h-source.html	/^<a name="l00232"><\/a>00232     {$/;"	a
l00233	docs/tinystr_8h-source.html	/^<a name="l00233"><\/a>00233         <span class="keywordflow">if<\/span> (cap)$/;"	a
l00234	docs/tinystr_8h-source.html	/^<a name="l00234"><\/a>00234         {$/;"	a
l00235	docs/tinystr_8h-source.html	/^<a name="l00235"><\/a>00235             <span class="comment">\/\/ Lee: the original form:<\/span>$/;"	a
l00236	docs/tinystr_8h-source.html	/^<a name="l00236"><\/a>00236             <span class="comment">\/\/  rep_ = static_cast&lt;Rep*&gt;(operator new(sizeof(Rep) + cap));<\/span>$/;"	a
l00237	docs/tinystr_8h-source.html	/^<a name="l00237"><\/a>00237             <span class="comment">\/\/ doesn't work in some cases of new being overloaded. Switching<\/span>$/;"	a
l00238	docs/tinystr_8h-source.html	/^<a name="l00238"><\/a>00238             <span class="comment">\/\/ to the normal allocation, although use an 'int' for systems<\/span>$/;"	a
l00239	docs/tinystr_8h-source.html	/^<a name="l00239"><\/a>00239             <span class="comment">\/\/ that are overly picky about structure alignment.<\/span>$/;"	a
l00240	docs/tinystr_8h-source.html	/^<a name="l00240"><\/a>00240             <span class="keyword">const<\/span> size_type bytesNeeded = <span class="keyword">sizeof<\/span>(Rep) + cap;$/;"	a
l00241	docs/tinystr_8h-source.html	/^<a name="l00241"><\/a>00241             <span class="keyword">const<\/span> size_type intsNeeded = ( bytesNeeded + <span class="keyword">sizeof<\/span>(int) - 1 ) \/ <span class="keyword">sizeof<\/span>( int ); $/;"	a
l00242	docs/tinystr_8h-source.html	/^<a name="l00242"><\/a>00242             rep_ = reinterpret_cast&lt;Rep*&gt;( <span class="keyword">new<\/span> <span class="keywordtype">int<\/span>[ intsNeeded ] );$/;"	a
l00243	docs/tinystr_8h-source.html	/^<a name="l00243"><\/a>00243 $/;"	a
l00244	docs/tinystr_8h-source.html	/^<a name="l00244"><\/a>00244             rep_-&gt;str[ rep_-&gt;size = sz ] = <span class="charliteral">'\\0'<\/span>;$/;"	a
l00245	docs/tinystr_8h-source.html	/^<a name="l00245"><\/a>00245             rep_-&gt;capacity = cap;$/;"	a
l00245	docs/tinyxml_8h-source.html	/^<a name="l00245"><\/a><a class="code" href="classTiXmlBase.html#024bceb070188df92c2a8d8852dd0853">00245<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlBase.html#024bceb070188df92c2a8d8852dd0853">Row<\/a>()<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> location.row + 1; }$/;"	a
l00246	docs/tinystr_8h-source.html	/^<a name="l00246"><\/a>00246         }$/;"	a
l00246	docs/tinyxml_8h-source.html	/^<a name="l00246"><\/a><a class="code" href="classTiXmlBase.html#b54bfb9b70fe6dd276e7b279cab7f003">00246<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlBase.html#b54bfb9b70fe6dd276e7b279cab7f003">Column<\/a>()<span class="keyword"> const      <\/span>{ <span class="keywordflow">return<\/span> location.col + 1; }    $/;"	a
l00247	docs/tinystr_8h-source.html	/^<a name="l00247"><\/a>00247         <span class="keywordflow">else<\/span>$/;"	a
l00247	docs/tinyxml_8h-source.html	/^<a name="l00247"><\/a>00247 $/;"	a
l00248	docs/tinystr_8h-source.html	/^<a name="l00248"><\/a>00248         {$/;"	a
l00248	docs/tinyxml_8h-source.html	/^<a name="l00248"><\/a><a class="code" href="classTiXmlBase.html#c6b3e0f790930d4970ec30764e937b5d">00248<\/a>     <span class="keywordtype">void<\/span>  <a class="code" href="classTiXmlBase.html#c6b3e0f790930d4970ec30764e937b5d">SetUserData<\/a>( <span class="keywordtype">void<\/span>* user )         { <a class="code" href="classTiXmlBase.html#b242c01590191f644569fa89a080d97c">userData<\/a> = user; }    $/;"	a
l00249	docs/tinystr_8h-source.html	/^<a name="l00249"><\/a>00249             rep_ = &amp;nullrep_;$/;"	a
l00249	docs/tinyxml_8h-source.html	/^<a name="l00249"><\/a><a class="code" href="classTiXmlBase.html#6559a530ca6763fc301a14d77ed28c17">00249<\/a>     <span class="keywordtype">void<\/span>* <a class="code" href="classTiXmlBase.html#6559a530ca6763fc301a14d77ed28c17">GetUserData<\/a>()                     { <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlBase.html#b242c01590191f644569fa89a080d97c">userData<\/a>; }    $/;"	a
l00250	docs/tinystr_8h-source.html	/^<a name="l00250"><\/a>00250         }$/;"	a
l00250	docs/tinyxml_8h-source.html	/^<a name="l00250"><\/a><a class="code" href="classTiXmlBase.html#d0120210e4680ef2088601753ce0ede4">00250<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">void<\/span>* <a class="code" href="classTiXmlBase.html#6559a530ca6763fc301a14d77ed28c17">GetUserData<\/a>()<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlBase.html#b242c01590191f644569fa89a080d97c">userData<\/a>; }    $/;"	a
l00251	docs/tinystr_8h-source.html	/^<a name="l00251"><\/a>00251     }$/;"	a
l00251	docs/tinyxml_8h-source.html	/^<a name="l00251"><\/a>00251 $/;"	a
l00252	docs/tinystr_8h-source.html	/^<a name="l00252"><\/a>00252 $/;"	a
l00252	docs/tinyxml_8h-source.html	/^<a name="l00252"><\/a>00252     <span class="comment">\/\/ Table that returs, for a given lead byte, the total number of bytes<\/span>$/;"	a
l00253	docs/tinystr_8h-source.html	/^<a name="l00253"><\/a>00253     <span class="keywordtype">void<\/span> quit()$/;"	a
l00253	docs/tinyxml_8h-source.html	/^<a name="l00253"><\/a>00253     <span class="comment">\/\/ in the UTF-8 sequence.<\/span>$/;"	a
l00254	docs/tinystr_8h-source.html	/^<a name="l00254"><\/a>00254     {$/;"	a
l00254	docs/tinyxml_8h-source.html	/^<a name="l00254"><\/a>00254     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> utf8ByteTable[256];$/;"	a
l00255	docs/tinystr_8h-source.html	/^<a name="l00255"><\/a>00255         <span class="keywordflow">if<\/span> (rep_ != &amp;nullrep_)$/;"	a
l00255	docs/tinyxml_8h-source.html	/^<a name="l00255"><\/a>00255 $/;"	a
l00256	docs/tinystr_8h-source.html	/^<a name="l00256"><\/a>00256         {$/;"	a
l00256	docs/tinyxml_8h-source.html	/^<a name="l00256"><\/a>00256     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlDocument.html#17ebabe36926ef398e78dec0d0ad0378">Parse<\/a>(  <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, $/;"	a
l00257	docs/tinystr_8h-source.html	/^<a name="l00257"><\/a>00257             <span class="comment">\/\/ The rep_ is really an array of ints. (see the allocator, above).<\/span>$/;"	a
l00257	docs/tinyxml_8h-source.html	/^<a name="l00257"><\/a>00257                                 TiXmlParsingData* data, $/;"	a
l00258	docs/tinystr_8h-source.html	/^<a name="l00258"><\/a>00258             <span class="comment">\/\/ Cast it back before delete, so the compiler won't incorrectly call destructors.<\/span>$/;"	a
l00258	docs/tinyxml_8h-source.html	/^<a name="l00258"><\/a>00258                                 TiXmlEncoding encoding <span class="comment">\/*= TIXML_ENCODING_UNKNOWN *\/<\/span> ) = 0;$/;"	a
l00259	docs/tinystr_8h-source.html	/^<a name="l00259"><\/a>00259             <span class="keyword">delete<\/span> [] ( reinterpret_cast&lt;int*&gt;( rep_ ) );$/;"	a
l00259	docs/tinyxml_8h-source.html	/^<a name="l00259"><\/a>00259 $/;"	a
l00260	docs/tinystr_8h-source.html	/^<a name="l00260"><\/a>00260         }$/;"	a
l00261	docs/tinystr_8h-source.html	/^<a name="l00261"><\/a>00261     }$/;"	a
l00262	docs/tinystr_8h-source.html	/^<a name="l00262"><\/a>00262 $/;"	a
l00263	docs/tinystr_8h-source.html	/^<a name="l00263"><\/a>00263     Rep * rep_;$/;"	a
l00263	docs/tinyxml_8h-source.html	/^<a name="l00263"><\/a>00263     <span class="keyword">static<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlBase.html#6bd8c315c1acb09e34107b8736505948">EncodeString<\/a>( <span class="keyword">const<\/span> TIXML_STRING&amp; str, TIXML_STRING* out );$/;"	a
l00264	docs/tinystr_8h-source.html	/^<a name="l00264"><\/a>00264     <span class="keyword">static<\/span> Rep nullrep_;$/;"	a
l00264	docs/tinyxml_8h-source.html	/^<a name="l00264"><\/a>00264 $/;"	a
l00265	docs/tinystr_8h-source.html	/^<a name="l00265"><\/a>00265 $/;"	a
l00265	docs/tinyxml_8h-source.html	/^<a name="l00265"><\/a>00265     <span class="keyword">enum<\/span>$/;"	a
l00266	docs/tinystr_8h-source.html	/^<a name="l00266"><\/a>00266 } ;$/;"	a
l00266	docs/tinyxml_8h-source.html	/^<a name="l00266"><\/a>00266     {$/;"	a
l00267	docs/tinystr_8h-source.html	/^<a name="l00267"><\/a>00267 $/;"	a
l00267	docs/tinyxml_8h-source.html	/^<a name="l00267"><\/a>00267         TIXML_NO_ERROR = 0,$/;"	a
l00268	docs/tinystr_8h-source.html	/^<a name="l00268"><\/a>00268 $/;"	a
l00268	docs/tinyxml_8h-source.html	/^<a name="l00268"><\/a>00268         TIXML_ERROR,$/;"	a
l00269	docs/tinystr_8h-source.html	/^<a name="l00269"><\/a>00269 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator == (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b)$/;"	a
l00269	docs/tinyxml_8h-source.html	/^<a name="l00269"><\/a>00269         TIXML_ERROR_OPENING_FILE,$/;"	a
l00270	docs/tinystr_8h-source.html	/^<a name="l00270"><\/a>00270 {$/;"	a
l00270	docs/tinyxml_8h-source.html	/^<a name="l00270"><\/a>00270         TIXML_ERROR_OUT_OF_MEMORY,$/;"	a
l00271	docs/tinystr_8h-source.html	/^<a name="l00271"><\/a>00271     <span class="keywordflow">return<\/span>    ( a.length() == b.length() )              <span class="comment">\/\/ optimization on some platforms<\/span>$/;"	a
l00271	docs/tinyxml_8h-source.html	/^<a name="l00271"><\/a>00271         TIXML_ERROR_PARSING_ELEMENT,$/;"	a
l00272	docs/tinystr_8h-source.html	/^<a name="l00272"><\/a>00272            &amp;&amp; ( strcmp(a.c_str(), b.c_str()) == 0 );    <span class="comment">\/\/ actual compare<\/span>$/;"	a
l00272	docs/tinyxml_8h-source.html	/^<a name="l00272"><\/a>00272         TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME,$/;"	a
l00273	docs/tinystr_8h-source.html	/^<a name="l00273"><\/a>00273 }$/;"	a
l00273	docs/tinyxml_8h-source.html	/^<a name="l00273"><\/a>00273         TIXML_ERROR_READING_ELEMENT_VALUE,$/;"	a
l00274	docs/tinystr_8h-source.html	/^<a name="l00274"><\/a>00274 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &lt; (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b)$/;"	a
l00274	docs/tinyxml_8h-source.html	/^<a name="l00274"><\/a>00274         TIXML_ERROR_READING_ATTRIBUTES,$/;"	a
l00275	docs/tinystr_8h-source.html	/^<a name="l00275"><\/a>00275 {$/;"	a
l00275	docs/tinyxml_8h-source.html	/^<a name="l00275"><\/a>00275         TIXML_ERROR_PARSING_EMPTY,$/;"	a
l00276	docs/tinystr_8h-source.html	/^<a name="l00276"><\/a>00276     <span class="keywordflow">return<\/span> strcmp(a.c_str(), b.c_str()) &lt; 0;$/;"	a
l00276	docs/tinyxml_8h-source.html	/^<a name="l00276"><\/a>00276         TIXML_ERROR_READING_END_TAG,$/;"	a
l00277	docs/tinystr_8h-source.html	/^<a name="l00277"><\/a>00277 }$/;"	a
l00277	docs/tinyxml_8h-source.html	/^<a name="l00277"><\/a>00277         TIXML_ERROR_PARSING_UNKNOWN,$/;"	a
l00278	docs/tinystr_8h-source.html	/^<a name="l00278"><\/a>00278 $/;"	a
l00278	docs/tinyxml_8h-source.html	/^<a name="l00278"><\/a>00278         TIXML_ERROR_PARSING_COMMENT,$/;"	a
l00279	docs/tinystr_8h-source.html	/^<a name="l00279"><\/a>00279 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator != (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> !(a == b); }$/;"	a
l00279	docs/tinyxml_8h-source.html	/^<a name="l00279"><\/a>00279         TIXML_ERROR_PARSING_DECLARATION,$/;"	a
l00280	docs/tinystr_8h-source.html	/^<a name="l00280"><\/a>00280 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &gt;  (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> b &lt; a; }$/;"	a
l00280	docs/tinyxml_8h-source.html	/^<a name="l00280"><\/a>00280         TIXML_ERROR_DOCUMENT_EMPTY,$/;"	a
l00281	docs/tinystr_8h-source.html	/^<a name="l00281"><\/a>00281 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &lt;= (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> !(b &lt; a); }$/;"	a
l00281	docs/tinyxml_8h-source.html	/^<a name="l00281"><\/a>00281         TIXML_ERROR_EMBEDDED_NULL,$/;"	a
l00282	docs/tinystr_8h-source.html	/^<a name="l00282"><\/a>00282 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &gt;= (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> !(a &lt; b); }$/;"	a
l00282	docs/tinyxml_8h-source.html	/^<a name="l00282"><\/a>00282         TIXML_ERROR_PARSING_CDATA,$/;"	a
l00283	docs/tinystr_8h-source.html	/^<a name="l00283"><\/a>00283 $/;"	a
l00283	docs/tinyxml_8h-source.html	/^<a name="l00283"><\/a>00283         TIXML_ERROR_DOCUMENT_TOP_ONLY,$/;"	a
l00284	docs/tinystr_8h-source.html	/^<a name="l00284"><\/a>00284 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator == (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* b) { <span class="keywordflow">return<\/span> strcmp(a.c_str(), b) == 0; }$/;"	a
l00284	docs/tinyxml_8h-source.html	/^<a name="l00284"><\/a>00284 $/;"	a
l00285	docs/tinystr_8h-source.html	/^<a name="l00285"><\/a>00285 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator == (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> b == a; }$/;"	a
l00285	docs/tinyxml_8h-source.html	/^<a name="l00285"><\/a>00285         TIXML_ERROR_STRING_COUNT$/;"	a
l00286	docs/tinystr_8h-source.html	/^<a name="l00286"><\/a>00286 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator != (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* b) { <span class="keywordflow">return<\/span> !(a == b); }$/;"	a
l00286	docs/tinyxml_8h-source.html	/^<a name="l00286"><\/a>00286     };$/;"	a
l00287	docs/tinystr_8h-source.html	/^<a name="l00287"><\/a>00287 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator != (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> !(b == a); }$/;"	a
l00287	docs/tinyxml_8h-source.html	/^<a name="l00287"><\/a>00287 $/;"	a
l00288	docs/tinystr_8h-source.html	/^<a name="l00288"><\/a>00288 $/;"	a
l00288	docs/tinyxml_8h-source.html	/^<a name="l00288"><\/a>00288 <span class="keyword">protected<\/span>:$/;"	a
l00289	docs/tinystr_8h-source.html	/^<a name="l00289"><\/a>00289 TiXmlString operator + (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b);$/;"	a
l00289	docs/tinyxml_8h-source.html	/^<a name="l00289"><\/a>00289 $/;"	a
l00290	docs/tinystr_8h-source.html	/^<a name="l00290"><\/a>00290 TiXmlString operator + (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* b);$/;"	a
l00290	docs/tinyxml_8h-source.html	/^<a name="l00290"><\/a>00290     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* SkipWhiteSpace( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*, TiXmlEncoding encoding );$/;"	a
l00291	docs/tinystr_8h-source.html	/^<a name="l00291"><\/a>00291 TiXmlString operator + (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* a, <span class="keyword">const<\/span> TiXmlString &amp; b);$/;"	a
l00291	docs/tinyxml_8h-source.html	/^<a name="l00291"><\/a>00291     <span class="keyword">inline<\/span> <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> IsWhiteSpace( <span class="keywordtype">char<\/span> c )       $/;"	a
l00292	docs/tinystr_8h-source.html	/^<a name="l00292"><\/a>00292 $/;"	a
l00292	docs/tinyxml_8h-source.html	/^<a name="l00292"><\/a>00292     { $/;"	a
l00293	docs/tinystr_8h-source.html	/^<a name="l00293"><\/a>00293 $/;"	a
l00293	docs/tinyxml_8h-source.html	/^<a name="l00293"><\/a>00293         <span class="keywordflow">return<\/span> ( isspace( (<span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span>) c ) || c == <span class="charliteral">'\\n'<\/span> || c == <span class="charliteral">'\\r'<\/span> ); $/;"	a
l00294	docs/tinystr_8h-source.html	/^<a name="l00294"><\/a>00294 <span class="comment">\/*<\/span>$/;"	a
l00294	docs/tinyxml_8h-source.html	/^<a name="l00294"><\/a>00294     }$/;"	a
l00295	docs/tinystr_8h-source.html	/^<a name="l00295"><\/a>00295 <span class="comment">   TiXmlOutStream is an emulation of std::ostream. It is based on TiXmlString.<\/span>$/;"	a
l00295	docs/tinyxml_8h-source.html	/^<a name="l00295"><\/a>00295     <span class="keyword">inline<\/span> <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> IsWhiteSpace( <span class="keywordtype">int<\/span> c )$/;"	a
l00296	docs/tinystr_8h-source.html	/^<a name="l00296"><\/a>00296 <span class="comment">   Only the operators that we need for TinyXML have been developped.<\/span>$/;"	a
l00296	docs/tinyxml_8h-source.html	/^<a name="l00296"><\/a>00296     {$/;"	a
l00297	docs/tinystr_8h-source.html	/^<a name="l00297"><\/a>00297 <span class="comment">*\/<\/span>$/;"	a
l00297	docs/tinyxml_8h-source.html	/^<a name="l00297"><\/a>00297         <span class="keywordflow">if<\/span> ( c &lt; 256 )$/;"	a
l00298	docs/tinystr_8h-source.html	/^<a name="l00298"><\/a>00298 <span class="keyword">class <\/span>TiXmlOutStream : <span class="keyword">public<\/span> TiXmlString$/;"	a
l00298	docs/tinyxml_8h-source.html	/^<a name="l00298"><\/a>00298             <span class="keywordflow">return<\/span> IsWhiteSpace( (<span class="keywordtype">char<\/span>) c );$/;"	a
l00299	docs/tinystr_8h-source.html	/^<a name="l00299"><\/a>00299 {$/;"	a
l00299	docs/tinyxml_8h-source.html	/^<a name="l00299"><\/a>00299         <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;   <span class="comment">\/\/ Again, only truly correct for English\/Latin...but usually works.<\/span>$/;"	a
l00300	docs/tinystr_8h-source.html	/^<a name="l00300"><\/a>00300 <span class="keyword">public<\/span> :$/;"	a
l00300	docs/tinyxml_8h-source.html	/^<a name="l00300"><\/a>00300     }$/;"	a
l00301	docs/tinystr_8h-source.html	/^<a name="l00301"><\/a>00301 $/;"	a
l00301	docs/tinyxml_8h-source.html	/^<a name="l00301"><\/a>00301 $/;"	a
l00302	docs/tinystr_8h-source.html	/^<a name="l00302"><\/a>00302     <span class="comment">\/\/ TiXmlOutStream &lt;&lt; operator.<\/span>$/;"	a
l00302	docs/tinyxml_8h-source.html	/^<a name="l00302"><\/a>00302 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00303	docs/tinystr_8h-source.html	/^<a name="l00303"><\/a>00303     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> TiXmlString &amp; in)$/;"	a
l00303	docs/tinyxml_8h-source.html	/^<a name="l00303"><\/a>00303 <span class="preprocessor"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> StreamWhiteSpace( std::istream * in, TIXML_STRING * tag );$/;"	a
l00304	docs/tinystr_8h-source.html	/^<a name="l00304"><\/a>00304     {$/;"	a
l00304	docs/tinyxml_8h-source.html	/^<a name="l00304"><\/a>00304     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> StreamTo( std::istream * in, <span class="keywordtype">int<\/span> character, TIXML_STRING * tag );$/;"	a
l00305	docs/tinystr_8h-source.html	/^<a name="l00305"><\/a>00305         *<span class="keyword">this<\/span> += in;$/;"	a
l00305	docs/tinyxml_8h-source.html	/^<a name="l00305"><\/a>00305 <span class="preprocessor">    #endif<\/span>$/;"	a
l00306	docs/tinystr_8h-source.html	/^<a name="l00306"><\/a>00306         <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;$/;"	a
l00306	docs/tinyxml_8h-source.html	/^<a name="l00306"><\/a>00306 <span class="preprocessor"><\/span>$/;"	a
l00307	docs/tinystr_8h-source.html	/^<a name="l00307"><\/a>00307     }$/;"	a
l00307	docs/tinyxml_8h-source.html	/^<a name="l00307"><\/a>00307     <span class="comment">\/*  Reads an XML name into the string provided. Returns<\/span>$/;"	a
l00308	docs/tinystr_8h-source.html	/^<a name="l00308"><\/a>00308 $/;"	a
l00308	docs/tinyxml_8h-source.html	/^<a name="l00308"><\/a>00308 <span class="comment">        a pointer just past the last character of the name,<\/span>$/;"	a
l00309	docs/tinystr_8h-source.html	/^<a name="l00309"><\/a>00309     <span class="comment">\/\/ TiXmlOutStream &lt;&lt; operator.<\/span>$/;"	a
l00309	docs/tinyxml_8h-source.html	/^<a name="l00309"><\/a>00309 <span class="comment">        or 0 if the function has an error.<\/span>$/;"	a
l00310	docs/tinystr_8h-source.html	/^<a name="l00310"><\/a>00310     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * in)$/;"	a
l00310	docs/tinyxml_8h-source.html	/^<a name="l00310"><\/a>00310 <span class="comment">    *\/<\/span>$/;"	a
l00311	docs/tinystr_8h-source.html	/^<a name="l00311"><\/a>00311     {$/;"	a
l00311	docs/tinyxml_8h-source.html	/^<a name="l00311"><\/a>00311     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadName( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TIXML_STRING* name, TiXmlEncoding encoding );$/;"	a
l00312	docs/tinystr_8h-source.html	/^<a name="l00312"><\/a>00312         *<span class="keyword">this<\/span> += in;$/;"	a
l00312	docs/tinyxml_8h-source.html	/^<a name="l00312"><\/a>00312 $/;"	a
l00313	docs/tinystr_8h-source.html	/^<a name="l00313"><\/a>00313         <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;$/;"	a
l00313	docs/tinyxml_8h-source.html	/^<a name="l00313"><\/a>00313     <span class="comment">\/*  Reads text. Returns a pointer past the given end tag.<\/span>$/;"	a
l00314	docs/tinystr_8h-source.html	/^<a name="l00314"><\/a>00314     }$/;"	a
l00314	docs/tinyxml_8h-source.html	/^<a name="l00314"><\/a>00314 <span class="comment">        Wickedly complex options, but it keeps the (sensitive) code in one place.<\/span>$/;"	a
l00315	docs/tinystr_8h-source.html	/^<a name="l00315"><\/a>00315 $/;"	a
l00315	docs/tinyxml_8h-source.html	/^<a name="l00315"><\/a>00315 <span class="comment">    *\/<\/span>$/;"	a
l00316	docs/tinystr_8h-source.html	/^<a name="l00316"><\/a>00316 } ;$/;"	a
l00316	docs/tinyxml_8h-source.html	/^<a name="l00316"><\/a>00316     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadText(    <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in,             <span class="comment">\/\/ where to start<\/span>$/;"	a
l00317	docs/tinystr_8h-source.html	/^<a name="l00317"><\/a>00317 $/;"	a
l00317	docs/tinyxml_8h-source.html	/^<a name="l00317"><\/a>00317                                     TIXML_STRING* text,         <span class="comment">\/\/ the string read<\/span>$/;"	a
l00318	docs/tinystr_8h-source.html	/^<a name="l00318"><\/a>00318 <span class="preprocessor">#endif  \/\/ TIXML_STRING_INCLUDED<\/span>$/;"	a
l00318	docs/tinyxml_8h-source.html	/^<a name="l00318"><\/a>00318                                     <span class="keywordtype">bool<\/span> ignoreWhiteSpace,      <span class="comment">\/\/ whether to keep the white space<\/span>$/;"	a
l00319	docs/tinystr_8h-source.html	/^<a name="l00319"><\/a>00319 <span class="preprocessor"><\/span><span class="preprocessor">#endif  \/\/ TIXML_USE_STL<\/span>$/;"	a
l00319	docs/tinyxml_8h-source.html	/^<a name="l00319"><\/a>00319                                     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* endTag,         <span class="comment">\/\/ what ends this text<\/span>$/;"	a
l00320	docs/tinyxml_8h-source.html	/^<a name="l00320"><\/a>00320                                     <span class="keywordtype">bool<\/span> ignoreCase,            <span class="comment">\/\/ whether to ignore case in the end tag<\/span>$/;"	a
l00321	docs/tinyxml_8h-source.html	/^<a name="l00321"><\/a>00321                                     TiXmlEncoding encoding );   <span class="comment">\/\/ the current encoding<\/span>$/;"	a
l00322	docs/tinyxml_8h-source.html	/^<a name="l00322"><\/a>00322 $/;"	a
l00323	docs/tinyxml_8h-source.html	/^<a name="l00323"><\/a>00323     <span class="comment">\/\/ If an entity has been found, transform it into a character.<\/span>$/;"	a
l00324	docs/tinyxml_8h-source.html	/^<a name="l00324"><\/a>00324     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* GetEntity( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in, <span class="keywordtype">char<\/span>* value, <span class="keywordtype">int<\/span>* length, TiXmlEncoding encoding );$/;"	a
l00325	docs/tinyxml_8h-source.html	/^<a name="l00325"><\/a>00325 $/;"	a
l00326	docs/tinyxml_8h-source.html	/^<a name="l00326"><\/a>00326     <span class="comment">\/\/ Get a character, while interpreting entities.<\/span>$/;"	a
l00327	docs/tinyxml_8h-source.html	/^<a name="l00327"><\/a>00327     <span class="comment">\/\/ The length can be from 0 to 4 bytes.<\/span>$/;"	a
l00328	docs/tinyxml_8h-source.html	/^<a name="l00328"><\/a>00328     <span class="keyword">inline<\/span> <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* GetChar( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, <span class="keywordtype">char<\/span>* _value, <span class="keywordtype">int<\/span>* length, TiXmlEncoding encoding )$/;"	a
l00329	docs/tinyxml_8h-source.html	/^<a name="l00329"><\/a>00329     {$/;"	a
l00330	docs/tinyxml_8h-source.html	/^<a name="l00330"><\/a>00330         assert( p );$/;"	a
l00331	docs/tinyxml_8h-source.html	/^<a name="l00331"><\/a>00331         <span class="keywordflow">if<\/span> ( encoding == TIXML_ENCODING_UTF8 )$/;"	a
l00332	docs/tinyxml_8h-source.html	/^<a name="l00332"><\/a>00332         {$/;"	a
l00333	docs/tinyxml_8h-source.html	/^<a name="l00333"><\/a>00333             *length = utf8ByteTable[ *((<span class="keyword">const<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span>*)p) ];$/;"	a
l00334	docs/tinyxml_8h-source.html	/^<a name="l00334"><\/a>00334             assert( *length &gt;= 0 &amp;&amp; *length &lt; 5 );$/;"	a
l00335	docs/tinyxml_8h-source.html	/^<a name="l00335"><\/a>00335         }$/;"	a
l00336	docs/tinyxml_8h-source.html	/^<a name="l00336"><\/a>00336         <span class="keywordflow">else<\/span>$/;"	a
l00337	docs/tinyxml_8h-source.html	/^<a name="l00337"><\/a>00337         {$/;"	a
l00338	docs/tinyxml_8h-source.html	/^<a name="l00338"><\/a>00338             *length = 1;$/;"	a
l00339	docs/tinyxml_8h-source.html	/^<a name="l00339"><\/a>00339         }$/;"	a
l00340	docs/tinyxml_8h-source.html	/^<a name="l00340"><\/a>00340 $/;"	a
l00341	docs/tinyxml_8h-source.html	/^<a name="l00341"><\/a>00341         <span class="keywordflow">if<\/span> ( *length == 1 )$/;"	a
l00342	docs/tinyxml_8h-source.html	/^<a name="l00342"><\/a>00342         {$/;"	a
l00343	docs/tinyxml_8h-source.html	/^<a name="l00343"><\/a>00343             <span class="keywordflow">if<\/span> ( *p == <span class="charliteral">'&amp;'<\/span> )$/;"	a
l00344	docs/tinyxml_8h-source.html	/^<a name="l00344"><\/a>00344                 <span class="keywordflow">return<\/span> GetEntity( p, _value, length, encoding );$/;"	a
l00345	docs/tinyxml_8h-source.html	/^<a name="l00345"><\/a>00345             *_value = *p;$/;"	a
l00346	docs/tinyxml_8h-source.html	/^<a name="l00346"><\/a>00346             <span class="keywordflow">return<\/span> p+1;$/;"	a
l00347	docs/tinyxml_8h-source.html	/^<a name="l00347"><\/a>00347         }$/;"	a
l00348	docs/tinyxml_8h-source.html	/^<a name="l00348"><\/a>00348         <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> ( *length )$/;"	a
l00349	docs/tinyxml_8h-source.html	/^<a name="l00349"><\/a>00349         {$/;"	a
l00350	docs/tinyxml_8h-source.html	/^<a name="l00350"><\/a>00350             <span class="comment">\/\/strncpy( _value, p, *length );    \/\/ lots of compilers don't like this function (unsafe),<\/span>$/;"	a
l00351	docs/tinyxml_8h-source.html	/^<a name="l00351"><\/a>00351                                                 <span class="comment">\/\/ and the null terminator isn't needed<\/span>$/;"	a
l00352	docs/tinyxml_8h-source.html	/^<a name="l00352"><\/a>00352             <span class="keywordflow">for<\/span>( <span class="keywordtype">int<\/span> i=0; p[i] &amp;&amp; i&lt;*length; ++i ) {$/;"	a
l00353	docs/tinyxml_8h-source.html	/^<a name="l00353"><\/a>00353                 _value[i] = p[i];$/;"	a
l00354	docs/tinyxml_8h-source.html	/^<a name="l00354"><\/a>00354             }$/;"	a
l00355	docs/tinyxml_8h-source.html	/^<a name="l00355"><\/a>00355             <span class="keywordflow">return<\/span> p + (*length);$/;"	a
l00356	docs/tinyxml_8h-source.html	/^<a name="l00356"><\/a>00356         }$/;"	a
l00357	docs/tinyxml_8h-source.html	/^<a name="l00357"><\/a>00357         <span class="keywordflow">else<\/span>$/;"	a
l00358	docs/tinyxml_8h-source.html	/^<a name="l00358"><\/a>00358         {$/;"	a
l00359	docs/tinyxml_8h-source.html	/^<a name="l00359"><\/a>00359             <span class="comment">\/\/ Not valid text.<\/span>$/;"	a
l00360	docs/tinyxml_8h-source.html	/^<a name="l00360"><\/a>00360             <span class="keywordflow">return<\/span> 0;$/;"	a
l00361	docs/tinyxml_8h-source.html	/^<a name="l00361"><\/a>00361         }$/;"	a
l00362	docs/tinyxml_8h-source.html	/^<a name="l00362"><\/a>00362     }$/;"	a
l00363	docs/tinyxml_8h-source.html	/^<a name="l00363"><\/a>00363 $/;"	a
l00364	docs/tinyxml_8h-source.html	/^<a name="l00364"><\/a>00364     <span class="comment">\/\/ Return true if the next characters in the stream are any of the endTag sequences.<\/span>$/;"	a
l00365	docs/tinyxml_8h-source.html	/^<a name="l00365"><\/a>00365     <span class="comment">\/\/ Ignore case only works for english, and should only be relied on when comparing<\/span>$/;"	a
l00366	docs/tinyxml_8h-source.html	/^<a name="l00366"><\/a>00366     <span class="comment">\/\/ to English words: StringEqual( p, "version", true ) is fine.<\/span>$/;"	a
l00367	docs/tinyxml_8h-source.html	/^<a name="l00367"><\/a>00367     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> StringEqual(    <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p,$/;"	a
l00368	docs/tinyxml_8h-source.html	/^<a name="l00368"><\/a>00368                                 <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* endTag,$/;"	a
l00369	docs/tinyxml_8h-source.html	/^<a name="l00369"><\/a>00369                                 <span class="keywordtype">bool<\/span> ignoreCase,$/;"	a
l00370	docs/tinyxml_8h-source.html	/^<a name="l00370"><\/a>00370                                 TiXmlEncoding encoding );$/;"	a
l00371	docs/tinyxml_8h-source.html	/^<a name="l00371"><\/a>00371 $/;"	a
l00372	docs/tinyxml_8h-source.html	/^<a name="l00372"><\/a>00372     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* errorString[ TIXML_ERROR_STRING_COUNT ];$/;"	a
l00373	docs/tinyxml_8h-source.html	/^<a name="l00373"><\/a>00373 $/;"	a
l00374	docs/tinyxml_8h-source.html	/^<a name="l00374"><\/a>00374     TiXmlCursor location;$/;"	a
l00375	docs/tinyxml_8h-source.html	/^<a name="l00375"><\/a>00375 $/;"	a
l00377	docs/tinyxml_8h-source.html	/^<a name="l00377"><\/a><a class="code" href="classTiXmlBase.html#b242c01590191f644569fa89a080d97c">00377<\/a>     <span class="keywordtype">void<\/span>*           <a class="code" href="classTiXmlBase.html#b242c01590191f644569fa89a080d97c">userData<\/a>;$/;"	a
l00378	docs/tinyxml_8h-source.html	/^<a name="l00378"><\/a>00378     $/;"	a
l00379	docs/tinyxml_8h-source.html	/^<a name="l00379"><\/a>00379     <span class="comment">\/\/ None of these methods are reliable for any language except English.<\/span>$/;"	a
l00380	docs/tinyxml_8h-source.html	/^<a name="l00380"><\/a>00380     <span class="comment">\/\/ Good for approximation, not great for accuracy.<\/span>$/;"	a
l00381	docs/tinyxml_8h-source.html	/^<a name="l00381"><\/a>00381     <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> IsAlpha( <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> anyByte, TiXmlEncoding encoding );$/;"	a
l00382	docs/tinyxml_8h-source.html	/^<a name="l00382"><\/a>00382     <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> IsAlphaNum( <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> anyByte, TiXmlEncoding encoding );$/;"	a
l00383	docs/tinyxml_8h-source.html	/^<a name="l00383"><\/a>00383     <span class="keyword">inline<\/span> <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> ToLower( <span class="keywordtype">int<\/span> v, TiXmlEncoding encoding )$/;"	a
l00384	docs/tinyxml_8h-source.html	/^<a name="l00384"><\/a>00384     {$/;"	a
l00385	docs/tinyxml_8h-source.html	/^<a name="l00385"><\/a>00385         <span class="keywordflow">if<\/span> ( encoding == TIXML_ENCODING_UTF8 )$/;"	a
l00386	docs/tinyxml_8h-source.html	/^<a name="l00386"><\/a>00386         {$/;"	a
l00387	docs/tinyxml_8h-source.html	/^<a name="l00387"><\/a>00387             <span class="keywordflow">if<\/span> ( v &lt; 128 ) <span class="keywordflow">return<\/span> tolower( v );$/;"	a
l00388	docs/tinyxml_8h-source.html	/^<a name="l00388"><\/a>00388             <span class="keywordflow">return<\/span> v;$/;"	a
l00389	docs/tinyxml_8h-source.html	/^<a name="l00389"><\/a>00389         }$/;"	a
l00390	docs/tinyxml_8h-source.html	/^<a name="l00390"><\/a>00390         <span class="keywordflow">else<\/span>$/;"	a
l00391	docs/tinyxml_8h-source.html	/^<a name="l00391"><\/a>00391         {$/;"	a
l00392	docs/tinyxml_8h-source.html	/^<a name="l00392"><\/a>00392             <span class="keywordflow">return<\/span> tolower( v );$/;"	a
l00393	docs/tinyxml_8h-source.html	/^<a name="l00393"><\/a>00393         }$/;"	a
l00394	docs/tinyxml_8h-source.html	/^<a name="l00394"><\/a>00394     }$/;"	a
l00395	docs/tinyxml_8h-source.html	/^<a name="l00395"><\/a>00395     <span class="keyword">static<\/span> <span class="keywordtype">void<\/span> ConvertUTF32ToUTF8( <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> input, <span class="keywordtype">char<\/span>* output, <span class="keywordtype">int<\/span>* length );$/;"	a
l00396	docs/tinyxml_8h-source.html	/^<a name="l00396"><\/a>00396 $/;"	a
l00397	docs/tinyxml_8h-source.html	/^<a name="l00397"><\/a>00397 <span class="keyword">private<\/span>:$/;"	a
l00398	docs/tinyxml_8h-source.html	/^<a name="l00398"><\/a>00398     <a class="code" href="classTiXmlBase.html">TiXmlBase<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlBase.html">TiXmlBase<\/a>&amp; );              <span class="comment">\/\/ not implemented.<\/span>$/;"	a
l00399	docs/tinyxml_8h-source.html	/^<a name="l00399"><\/a>00399     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlBase.html">TiXmlBase<\/a>&amp; base );    <span class="comment">\/\/ not allowed.<\/span>$/;"	a
l00400	docs/tinyxml_8h-source.html	/^<a name="l00400"><\/a>00400 $/;"	a
l00401	docs/tinyxml_8h-source.html	/^<a name="l00401"><\/a>00401     <span class="keyword">struct <\/span>Entity$/;"	a
l00402	docs/tinyxml_8h-source.html	/^<a name="l00402"><\/a>00402     {$/;"	a
l00403	docs/tinyxml_8h-source.html	/^<a name="l00403"><\/a>00403         <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*     str;$/;"	a
l00404	docs/tinyxml_8h-source.html	/^<a name="l00404"><\/a>00404         <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span>    strLength;$/;"	a
l00405	docs/tinyxml_8h-source.html	/^<a name="l00405"><\/a>00405         <span class="keywordtype">char<\/span>            chr;$/;"	a
l00406	docs/tinyxml_8h-source.html	/^<a name="l00406"><\/a>00406     };$/;"	a
l00407	docs/tinyxml_8h-source.html	/^<a name="l00407"><\/a>00407     <span class="keyword">enum<\/span>$/;"	a
l00408	docs/tinyxml_8h-source.html	/^<a name="l00408"><\/a>00408     {$/;"	a
l00409	docs/tinyxml_8h-source.html	/^<a name="l00409"><\/a>00409         NUM_ENTITY = 5,$/;"	a
l00410	docs/tinyxml_8h-source.html	/^<a name="l00410"><\/a>00410         MAX_ENTITY_LENGTH = 6$/;"	a
l00411	docs/tinyxml_8h-source.html	/^<a name="l00411"><\/a>00411 $/;"	a
l00412	docs/tinyxml_8h-source.html	/^<a name="l00412"><\/a>00412     };$/;"	a
l00413	docs/tinyxml_8h-source.html	/^<a name="l00413"><\/a>00413     <span class="keyword">static<\/span> Entity entity[ NUM_ENTITY ];$/;"	a
l00414	docs/tinyxml_8h-source.html	/^<a name="l00414"><\/a>00414     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> condenseWhiteSpace;$/;"	a
l00415	docs/tinyxml_8h-source.html	/^<a name="l00415"><\/a>00415 };$/;"	a
l00416	docs/tinyxml_8h-source.html	/^<a name="l00416"><\/a>00416 $/;"	a
l00417	docs/tinyxml_8h-source.html	/^<a name="l00417"><\/a>00417 $/;"	a
l00424	docs/tinyxml_8h-source.html	/^<a name="l00424"><\/a><a class="code" href="classTiXmlNode.html">00424<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlNode.html">TiXmlNode<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlBase.html">TiXmlBase<\/a>$/;"	a
l00425	docs/tinyxml_8h-source.html	/^<a name="l00425"><\/a>00425 {$/;"	a
l00426	docs/tinyxml_8h-source.html	/^<a name="l00426"><\/a>00426     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>;$/;"	a
l00427	docs/tinyxml_8h-source.html	/^<a name="l00427"><\/a>00427     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>;$/;"	a
l00428	docs/tinyxml_8h-source.html	/^<a name="l00428"><\/a>00428 $/;"	a
l00429	docs/tinyxml_8h-source.html	/^<a name="l00429"><\/a>00429 <span class="keyword">public<\/span>:$/;"	a
l00430	docs/tinyxml_8h-source.html	/^<a name="l00430"><\/a>00430 <span class="preprocessor">    #ifdef TIXML_USE_STL    <\/span>$/;"	a
l00431	docs/tinyxml_8h-source.html	/^<a name="l00431"><\/a>00431 <span class="preprocessor"><\/span>$/;"	a
l00435	docs/tinyxml_8h-source.html	/^<a name="l00435"><\/a>00435         <span class="keyword">friend<\/span> std::istream&amp; <a class="code" href="classTiXmlNode.html#b57bd426563c926844f65a78412e18b9">operator &gt;&gt; <\/a>(std::istream&amp; in, <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>&amp; base);$/;"	a
l00436	docs/tinyxml_8h-source.html	/^<a name="l00436"><\/a>00436 $/;"	a
l00453	docs/tinyxml_8h-source.html	/^<a name="l00453"><\/a>00453         <span class="keyword">friend<\/span> std::ostream&amp; <a class="code" href="classTiXmlNode.html#86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt; <\/a>(std::ostream&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>&amp; base);$/;"	a
l00454	docs/tinyxml_8h-source.html	/^<a name="l00454"><\/a>00454 $/;"	a
l00456	docs/tinyxml_8h-source.html	/^<a name="l00456"><\/a>00456         <span class="keyword">friend<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt; <\/a>(std::string&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>&amp; base );$/;"	a
l00457	docs/tinyxml_8h-source.html	/^<a name="l00457"><\/a>00457 $/;"	a
l00458	docs/tinyxml_8h-source.html	/^<a name="l00458"><\/a>00458 <span class="preprocessor">    #endif<\/span>$/;"	a
l00459	docs/tinyxml_8h-source.html	/^<a name="l00459"><\/a>00459 <span class="preprocessor"><\/span>$/;"	a
l00463	docs/tinyxml_8h-source.html	/^<a name="l00463"><\/a><a class="code" href="classTiXmlNode.html#836eded4920ab9e9ef28496f48cd95a2">00463<\/a>     <span class="keyword">enum<\/span> <a class="code" href="classTiXmlNode.html#836eded4920ab9e9ef28496f48cd95a2">NodeType<\/a>$/;"	a
l00464	docs/tinyxml_8h-source.html	/^<a name="l00464"><\/a>00464     {$/;"	a
l00465	docs/tinyxml_8h-source.html	/^<a name="l00465"><\/a>00465         DOCUMENT,$/;"	a
l00466	docs/tinyxml_8h-source.html	/^<a name="l00466"><\/a>00466         ELEMENT,$/;"	a
l00467	docs/tinyxml_8h-source.html	/^<a name="l00467"><\/a>00467         COMMENT,$/;"	a
l00468	docs/tinyxml_8h-source.html	/^<a name="l00468"><\/a>00468         UNKNOWN,$/;"	a
l00469	docs/tinyxml_8h-source.html	/^<a name="l00469"><\/a>00469         TEXT,$/;"	a
l00470	docs/tinyxml_8h-source.html	/^<a name="l00470"><\/a>00470         DECLARATION,$/;"	a
l00471	docs/tinyxml_8h-source.html	/^<a name="l00471"><\/a>00471         TYPECOUNT$/;"	a
l00472	docs/tinyxml_8h-source.html	/^<a name="l00472"><\/a>00472     };$/;"	a
l00473	docs/tinyxml_8h-source.html	/^<a name="l00473"><\/a>00473 $/;"	a
l00474	docs/tinyxml_8h-source.html	/^<a name="l00474"><\/a>00474     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>();$/;"	a
l00475	docs/tinyxml_8h-source.html	/^<a name="l00475"><\/a>00475 $/;"	a
l00488	docs/tinyxml_8h-source.html	/^<a name="l00488"><\/a><a class="code" href="classTiXmlNode.html#77943eb90d12c2892b1337a9f5918b41">00488<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *<a class="code" href="classTiXmlNode.html#77943eb90d12c2892b1337a9f5918b41">Value<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> value.c_str (); }$/;"	a
l00489	docs/tinyxml_8h-source.html	/^<a name="l00489"><\/a>00489 $/;"	a
l00490	docs/tinyxml_8h-source.html	/^<a name="l00490"><\/a>00490 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00491	docs/tinyxml_8h-source.html	/^<a name="l00491"><\/a>00491 <span class="preprocessor"><\/span>$/;"	a
l00495	docs/tinyxml_8h-source.html	/^<a name="l00495"><\/a><a class="code" href="classTiXmlNode.html#6d9e505619d39bf50bfd9609c9169ea5">00495<\/a>     <span class="keyword">const<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#6d9e505619d39bf50bfd9609c9169ea5">ValueStr<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> value; }$/;"	a
l00496	docs/tinyxml_8h-source.html	/^<a name="l00496"><\/a>00496 <span class="preprocessor">    #endif<\/span>$/;"	a
l00497	docs/tinyxml_8h-source.html	/^<a name="l00497"><\/a>00497 <span class="preprocessor"><\/span>$/;"	a
l00498	docs/tinyxml_8h-source.html	/^<a name="l00498"><\/a>00498     <span class="keyword">const<\/span> TIXML_STRING&amp; ValueTStr()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> value; }$/;"	a
l00499	docs/tinyxml_8h-source.html	/^<a name="l00499"><\/a>00499 $/;"	a
l00509	docs/tinyxml_8h-source.html	/^<a name="l00509"><\/a><a class="code" href="classTiXmlNode.html#2a38329ca5d3f28f98ce932b8299ae90">00509<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlNode.html#2a38329ca5d3f28f98ce932b8299ae90">SetValue<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value) { value = _value;}$/;"	a
l00510	docs/tinyxml_8h-source.html	/^<a name="l00510"><\/a>00510 $/;"	a
l00511	docs/tinyxml_8h-source.html	/^<a name="l00511"><\/a>00511 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00513	docs/tinyxml_8h-source.html	/^<a name="l00513"><\/a><a class="code" href="classTiXmlNode.html#2598d5f448042c1abbeae4503dd45ff2">00513<\/a> <span class="preprocessor">    void SetValue( const std::string&amp; _value )  { value = _value; }<\/span>$/;"	a
l00514	docs/tinyxml_8h-source.html	/^<a name="l00514"><\/a>00514 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l00515	docs/tinyxml_8h-source.html	/^<a name="l00515"><\/a>00515 <span class="preprocessor"><\/span>$/;"	a
l00517	docs/tinyxml_8h-source.html	/^<a name="l00517"><\/a>00517     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlNode.html#708e7f953df61d4d2d12f73171550a4b">Clear<\/a>();$/;"	a
l00518	docs/tinyxml_8h-source.html	/^<a name="l00518"><\/a>00518 $/;"	a
l00520	docs/tinyxml_8h-source.html	/^<a name="l00520"><\/a><a class="code" href="classTiXmlNode.html#b643043132ffd794f8602685d34a982e">00520<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#b643043132ffd794f8602685d34a982e">Parent<\/a>()                         { <span class="keywordflow">return<\/span> parent; }$/;"	a
l00521	docs/tinyxml_8h-source.html	/^<a name="l00521"><\/a>00521     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#b643043132ffd794f8602685d34a982e">Parent<\/a>()<span class="keyword"> const             <\/span>{ <span class="keywordflow">return<\/span> parent; }$/;"	a
l00522	docs/tinyxml_8h-source.html	/^<a name="l00522"><\/a>00522 $/;"	a
l00523	docs/tinyxml_8h-source.html	/^<a name="l00523"><\/a><a class="code" href="classTiXmlNode.html#44c8eee26bbe2d1b2762038df9dde2f0">00523<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#44c8eee26bbe2d1b2762038df9dde2f0">FirstChild<\/a>()<span class="keyword">   const       <\/span>{ <span class="keywordflow">return<\/span> firstChild; }  $/;"	a
l00524	docs/tinyxml_8h-source.html	/^<a name="l00524"><\/a>00524     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#44c8eee26bbe2d1b2762038df9dde2f0">FirstChild<\/a>()                     { <span class="keywordflow">return<\/span> firstChild; }$/;"	a
l00525	docs/tinyxml_8h-source.html	/^<a name="l00525"><\/a>00525     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#44c8eee26bbe2d1b2762038df9dde2f0">FirstChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * value ) <span class="keyword">const<\/span>;            $/;"	a
l00526	docs/tinyxml_8h-source.html	/^<a name="l00526"><\/a>00526 $/;"	a
l00527	docs/tinyxml_8h-source.html	/^<a name="l00527"><\/a><a class="code" href="classTiXmlNode.html#bc8bf32be6419ec453a731868de19554">00527<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#44c8eee26bbe2d1b2762038df9dde2f0">FirstChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	a
l00528	docs/tinyxml_8h-source.html	/^<a name="l00528"><\/a>00528         <span class="comment">\/\/ Call through to the const version - safe since nothing is changed. Exiting syntax: cast this to a const (always safe)<\/span>$/;"	a
l00529	docs/tinyxml_8h-source.html	/^<a name="l00529"><\/a>00529         <span class="comment">\/\/ call the method, cast the return back to non-const.<\/span>$/;"	a
l00530	docs/tinyxml_8h-source.html	/^<a name="l00530"><\/a>00530         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlNode* &gt; ((const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;FirstChild( _value ));$/;"	a
l00531	docs/tinyxml_8h-source.html	/^<a name="l00531"><\/a>00531     }$/;"	a
l00532	docs/tinyxml_8h-source.html	/^<a name="l00532"><\/a>00532     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* LastChild()<span class="keyword"> const  <\/span>{ <span class="keywordflow">return<\/span> lastChild; }       $/;"	a
l00533	docs/tinyxml_8h-source.html	/^<a name="l00533"><\/a><a class="code" href="classTiXmlNode.html#6432d2b2495f6caf9cb4278df706a031">00533<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* LastChild()  { <span class="keywordflow">return<\/span> lastChild; }$/;"	a
l00534	docs/tinyxml_8h-source.html	/^<a name="l00534"><\/a>00534     $/;"	a
l00535	docs/tinyxml_8h-source.html	/^<a name="l00535"><\/a>00535     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* LastChild( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * value ) <span class="keyword">const<\/span>;         $/;"	a
l00536	docs/tinyxml_8h-source.html	/^<a name="l00536"><\/a><a class="code" href="classTiXmlNode.html#bad5bf1059c48127b958711ef89e8e5d">00536<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* LastChild( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	a
l00537	docs/tinyxml_8h-source.html	/^<a name="l00537"><\/a>00537         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlNode* &gt; ((const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;LastChild( _value ));$/;"	a
l00538	docs/tinyxml_8h-source.html	/^<a name="l00538"><\/a>00538     }$/;"	a
l00539	docs/tinyxml_8h-source.html	/^<a name="l00539"><\/a>00539 $/;"	a
l00540	docs/tinyxml_8h-source.html	/^<a name="l00540"><\/a>00540 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00541	docs/tinyxml_8h-source.html	/^<a name="l00541"><\/a><a class="code" href="classTiXmlNode.html#07f6200a5956c723c5b52d70f29c46f6">00541<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#44c8eee26bbe2d1b2762038df9dde2f0">FirstChild<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const  <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#44c8eee26bbe2d1b2762038df9dde2f0">FirstChild<\/a> (_value.c_str ());    }   $/;"	a
l00542	docs/tinyxml_8h-source.html	/^<a name="l00542"><\/a><a class="code" href="classTiXmlNode.html#10d2669ccb5e29e02fcb0e4408685ef6">00542<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#44c8eee26bbe2d1b2762038df9dde2f0">FirstChild<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )              {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#44c8eee26bbe2d1b2762038df9dde2f0">FirstChild<\/a> (_value.c_str ());    }   $/;"	a
l00543	docs/tinyxml_8h-source.html	/^<a name="l00543"><\/a><a class="code" href="classTiXmlNode.html#256d0cdbfcfeccae83f3a1c9747a8b63">00543<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* LastChild( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const   <\/span>{   <span class="keywordflow">return<\/span> LastChild (_value.c_str ()); }   $/;"	a
l00544	docs/tinyxml_8h-source.html	/^<a name="l00544"><\/a><a class="code" href="classTiXmlNode.html#69772c9202f70553f940b15c06b07be3">00544<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* LastChild( <span class="keyword">const<\/span> std::string&amp; _value )               {   <span class="keywordflow">return<\/span> LastChild (_value.c_str ()); }   $/;"	a
l00545	docs/tinyxml_8h-source.html	/^<a name="l00545"><\/a>00545 <span class="preprocessor">    #endif<\/span>$/;"	a
l00546	docs/tinyxml_8h-source.html	/^<a name="l00546"><\/a>00546 <span class="preprocessor"><\/span>$/;"	a
l00563	docs/tinyxml_8h-source.html	/^<a name="l00563"><\/a>00563     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#8621196ba3705fa226bef4a761cc51b6">IterateChildren<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* previous ) <span class="keyword">const<\/span>;$/;"	a
l00564	docs/tinyxml_8h-source.html	/^<a name="l00564"><\/a>00564     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#8621196ba3705fa226bef4a761cc51b6">IterateChildren<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* previous ) {$/;"	a
l00565	docs/tinyxml_8h-source.html	/^<a name="l00565"><\/a>00565         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlNode* &gt;( (const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;IterateChildren( previous ) );$/;"	a
l00566	docs/tinyxml_8h-source.html	/^<a name="l00566"><\/a>00566     }$/;"	a
l00567	docs/tinyxml_8h-source.html	/^<a name="l00567"><\/a>00567 $/;"	a
l00569	docs/tinyxml_8h-source.html	/^<a name="l00569"><\/a>00569     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#8621196ba3705fa226bef4a761cc51b6">IterateChildren<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * value, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* previous ) <span class="keyword">const<\/span>;$/;"	a
l00570	docs/tinyxml_8h-source.html	/^<a name="l00570"><\/a>00570     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#8621196ba3705fa226bef4a761cc51b6">IterateChildren<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* previous ) {$/;"	a
l00571	docs/tinyxml_8h-source.html	/^<a name="l00571"><\/a>00571         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlNode* &gt;( (const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;IterateChildren( _value, previous ) );$/;"	a
l00572	docs/tinyxml_8h-source.html	/^<a name="l00572"><\/a>00572     }$/;"	a
l00573	docs/tinyxml_8h-source.html	/^<a name="l00573"><\/a>00573 $/;"	a
l00574	docs/tinyxml_8h-source.html	/^<a name="l00574"><\/a>00574 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00575	docs/tinyxml_8h-source.html	/^<a name="l00575"><\/a><a class="code" href="classTiXmlNode.html#1cbaaf8e82c09ad763d52616d75724df">00575<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#8621196ba3705fa226bef4a761cc51b6">IterateChildren<\/a>( <span class="keyword">const<\/span> std::string&amp; _value, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* previous )<span class="keyword"> const  <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#8621196ba3705fa226bef4a761cc51b6">IterateChildren<\/a> (_value.c_str (), previous); }   $/;"	a
l00576	docs/tinyxml_8h-source.html	/^<a name="l00576"><\/a><a class="code" href="classTiXmlNode.html#16e9ad53e2f5445b14bf325c90aa862c">00576<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#8621196ba3705fa226bef4a761cc51b6">IterateChildren<\/a>( <span class="keyword">const<\/span> std::string&amp; _value, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* previous ) {    <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#8621196ba3705fa226bef4a761cc51b6">IterateChildren<\/a> (_value.c_str (), previous); }   $/;"	a
l00577	docs/tinyxml_8h-source.html	/^<a name="l00577"><\/a>00577 <span class="preprocessor">    #endif<\/span>$/;"	a
l00578	docs/tinyxml_8h-source.html	/^<a name="l00578"><\/a>00578 <span class="preprocessor"><\/span>$/;"	a
l00582	docs/tinyxml_8h-source.html	/^<a name="l00582"><\/a>00582     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#d7d4630e1a2a916edda16be22448a8ba">InsertEndChild<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>&amp; addThis );$/;"	a
l00583	docs/tinyxml_8h-source.html	/^<a name="l00583"><\/a>00583 $/;"	a
l00584	docs/tinyxml_8h-source.html	/^<a name="l00584"><\/a>00584 $/;"	a
l00594	docs/tinyxml_8h-source.html	/^<a name="l00594"><\/a>00594     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#5d29442ae46de6d0168429156197bfc6">LinkEndChild<\/a>( <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* addThis );$/;"	a
l00595	docs/tinyxml_8h-source.html	/^<a name="l00595"><\/a>00595 $/;"	a
l00599	docs/tinyxml_8h-source.html	/^<a name="l00599"><\/a>00599     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#0c146fa2fff0157b681594102f48cbc7">InsertBeforeChild<\/a>( <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* beforeThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>&amp; addThis );$/;"	a
l00600	docs/tinyxml_8h-source.html	/^<a name="l00600"><\/a>00600 $/;"	a
l00604	docs/tinyxml_8h-source.html	/^<a name="l00604"><\/a>00604     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#d9b75e54ec19301c8b4d5ff583d0b3d5">InsertAfterChild<\/a>(  <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* afterThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>&amp; addThis );$/;"	a
l00605	docs/tinyxml_8h-source.html	/^<a name="l00605"><\/a>00605 $/;"	a
l00609	docs/tinyxml_8h-source.html	/^<a name="l00609"><\/a>00609     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#0c49e739a17b9938050c22cd89617fbd">ReplaceChild<\/a>( <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* replaceThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>&amp; withThis );$/;"	a
l00610	docs/tinyxml_8h-source.html	/^<a name="l00610"><\/a>00610 $/;"	a
l00612	docs/tinyxml_8h-source.html	/^<a name="l00612"><\/a>00612     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlNode.html#e19d8510efc90596552f4feeac9a8fbf">RemoveChild<\/a>( <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* removeThis );$/;"	a
l00613	docs/tinyxml_8h-source.html	/^<a name="l00613"><\/a>00613 $/;"	a
l00615	docs/tinyxml_8h-source.html	/^<a name="l00615"><\/a><a class="code" href="classTiXmlNode.html#c2cd892768726270e511b2ab32de4d10">00615<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#c2cd892768726270e511b2ab32de4d10">PreviousSibling<\/a>()<span class="keyword"> const            <\/span>{ <span class="keywordflow">return<\/span> prev; }$/;"	a
l00616	docs/tinyxml_8h-source.html	/^<a name="l00616"><\/a>00616     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#c2cd892768726270e511b2ab32de4d10">PreviousSibling<\/a>()                        { <span class="keywordflow">return<\/span> prev; }$/;"	a
l00617	docs/tinyxml_8h-source.html	/^<a name="l00617"><\/a>00617 $/;"	a
l00619	docs/tinyxml_8h-source.html	/^<a name="l00619"><\/a>00619     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#c2cd892768726270e511b2ab32de4d10">PreviousSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * ) <span class="keyword">const<\/span>;$/;"	a
l00620	docs/tinyxml_8h-source.html	/^<a name="l00620"><\/a>00620     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#c2cd892768726270e511b2ab32de4d10">PreviousSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *_prev ) {$/;"	a
l00621	docs/tinyxml_8h-source.html	/^<a name="l00621"><\/a>00621         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlNode* &gt;( (const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;PreviousSibling( _prev ) );$/;"	a
l00622	docs/tinyxml_8h-source.html	/^<a name="l00622"><\/a>00622     }$/;"	a
l00623	docs/tinyxml_8h-source.html	/^<a name="l00623"><\/a>00623 $/;"	a
l00624	docs/tinyxml_8h-source.html	/^<a name="l00624"><\/a>00624 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00625	docs/tinyxml_8h-source.html	/^<a name="l00625"><\/a><a class="code" href="classTiXmlNode.html#658276f57d35d5d4256d1dc1a2c398ab">00625<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#c2cd892768726270e511b2ab32de4d10">PreviousSibling<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#c2cd892768726270e511b2ab32de4d10">PreviousSibling<\/a> (_value.c_str ());   }   $/;"	a
l00626	docs/tinyxml_8h-source.html	/^<a name="l00626"><\/a><a class="code" href="classTiXmlNode.html#cc8a0434c7f401d4a3b6dee77c1a5912">00626<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#c2cd892768726270e511b2ab32de4d10">PreviousSibling<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )             {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#c2cd892768726270e511b2ab32de4d10">PreviousSibling<\/a> (_value.c_str ());   }   $/;"	a
l00627	docs/tinyxml_8h-source.html	/^<a name="l00627"><\/a><a class="code" href="classTiXmlNode.html#1b94d2f7fa7ab25a5a8e8d4340c449c9">00627<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#f854baeba384f5fe9859f5aee03b548e">NextSibling<\/a>( <span class="keyword">const<\/span> std::string&amp; _value)<span class="keyword"> const      <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#f854baeba384f5fe9859f5aee03b548e">NextSibling<\/a> (_value.c_str ());   }   $/;"	a
l00628	docs/tinyxml_8h-source.html	/^<a name="l00628"><\/a><a class="code" href="classTiXmlNode.html#1757c1f4d01e8c9596ffdbd561c76aea">00628<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#f854baeba384f5fe9859f5aee03b548e">NextSibling<\/a>( <span class="keyword">const<\/span> std::string&amp; _value)                  {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#f854baeba384f5fe9859f5aee03b548e">NextSibling<\/a> (_value.c_str ());   }   $/;"	a
l00629	docs/tinyxml_8h-source.html	/^<a name="l00629"><\/a>00629 <span class="preprocessor">    #endif<\/span>$/;"	a
l00630	docs/tinyxml_8h-source.html	/^<a name="l00630"><\/a>00630 <span class="preprocessor"><\/span>$/;"	a
l00632	docs/tinyxml_8h-source.html	/^<a name="l00632"><\/a><a class="code" href="classTiXmlNode.html#f854baeba384f5fe9859f5aee03b548e">00632<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#f854baeba384f5fe9859f5aee03b548e">NextSibling<\/a>()<span class="keyword"> const                <\/span>{ <span class="keywordflow">return<\/span> next; }$/;"	a
l00633	docs/tinyxml_8h-source.html	/^<a name="l00633"><\/a>00633     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#f854baeba384f5fe9859f5aee03b548e">NextSibling<\/a>()                            { <span class="keywordflow">return<\/span> next; }$/;"	a
l00634	docs/tinyxml_8h-source.html	/^<a name="l00634"><\/a>00634 $/;"	a
l00636	docs/tinyxml_8h-source.html	/^<a name="l00636"><\/a>00636     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#f854baeba384f5fe9859f5aee03b548e">NextSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * ) <span class="keyword">const<\/span>;$/;"	a
l00637	docs/tinyxml_8h-source.html	/^<a name="l00637"><\/a>00637     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#f854baeba384f5fe9859f5aee03b548e">NextSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _next ) {$/;"	a
l00638	docs/tinyxml_8h-source.html	/^<a name="l00638"><\/a>00638         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlNode* &gt;( (const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;NextSibling( _next ) );$/;"	a
l00639	docs/tinyxml_8h-source.html	/^<a name="l00639"><\/a>00639     }$/;"	a
l00640	docs/tinyxml_8h-source.html	/^<a name="l00640"><\/a>00640 $/;"	a
l00645	docs/tinyxml_8h-source.html	/^<a name="l00645"><\/a>00645     <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#73acf929d49d10bd0e5fb3d31b0372d1">NextSiblingElement<\/a>() <span class="keyword">const<\/span>;$/;"	a
l00646	docs/tinyxml_8h-source.html	/^<a name="l00646"><\/a>00646     <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#73acf929d49d10bd0e5fb3d31b0372d1">NextSiblingElement<\/a>() {$/;"	a
l00647	docs/tinyxml_8h-source.html	/^<a name="l00647"><\/a>00647         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlElement* &gt;( (const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;NextSiblingElement() );$/;"	a
l00648	docs/tinyxml_8h-source.html	/^<a name="l00648"><\/a>00648     }$/;"	a
l00649	docs/tinyxml_8h-source.html	/^<a name="l00649"><\/a>00649 $/;"	a
l00654	docs/tinyxml_8h-source.html	/^<a name="l00654"><\/a>00654     <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#73acf929d49d10bd0e5fb3d31b0372d1">NextSiblingElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * ) <span class="keyword">const<\/span>;$/;"	a
l00655	docs/tinyxml_8h-source.html	/^<a name="l00655"><\/a>00655     <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#73acf929d49d10bd0e5fb3d31b0372d1">NextSiblingElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *_next ) {$/;"	a
l00656	docs/tinyxml_8h-source.html	/^<a name="l00656"><\/a>00656         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlElement* &gt;( (const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;NextSiblingElement( _next ) );$/;"	a
l00657	docs/tinyxml_8h-source.html	/^<a name="l00657"><\/a>00657     }$/;"	a
l00658	docs/tinyxml_8h-source.html	/^<a name="l00658"><\/a>00658 $/;"	a
l00659	docs/tinyxml_8h-source.html	/^<a name="l00659"><\/a>00659 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00660	docs/tinyxml_8h-source.html	/^<a name="l00660"><\/a><a class="code" href="classTiXmlNode.html#7572d0af9d1e696ee3f05d8bb5ebb463">00660<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#73acf929d49d10bd0e5fb3d31b0372d1">NextSiblingElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value)<span class="keyword"> const    <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#73acf929d49d10bd0e5fb3d31b0372d1">NextSiblingElement<\/a> (_value.c_str ());    }   $/;"	a
l00661	docs/tinyxml_8h-source.html	/^<a name="l00661"><\/a><a class="code" href="classTiXmlNode.html#506958e34406729a4e4c5326ea39d081">00661<\/a>     <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#73acf929d49d10bd0e5fb3d31b0372d1">NextSiblingElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value)                {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#73acf929d49d10bd0e5fb3d31b0372d1">NextSiblingElement<\/a> (_value.c_str ());    }   $/;"	a
l00662	docs/tinyxml_8h-source.html	/^<a name="l00662"><\/a>00662 <span class="preprocessor">    #endif<\/span>$/;"	a
l00663	docs/tinyxml_8h-source.html	/^<a name="l00663"><\/a>00663 <span class="preprocessor"><\/span>$/;"	a
l00665	docs/tinyxml_8h-source.html	/^<a name="l00665"><\/a>00665     <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#f4fb652f6bd79ae0d5ce7d0f7d3c0fba">FirstChildElement<\/a>() <span class="keyword">const<\/span>;$/;"	a
l00666	docs/tinyxml_8h-source.html	/^<a name="l00666"><\/a>00666     <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#f4fb652f6bd79ae0d5ce7d0f7d3c0fba">FirstChildElement<\/a>() {$/;"	a
l00667	docs/tinyxml_8h-source.html	/^<a name="l00667"><\/a>00667         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlElement* &gt;( (const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;FirstChildElement() );$/;"	a
l00668	docs/tinyxml_8h-source.html	/^<a name="l00668"><\/a>00668     }$/;"	a
l00669	docs/tinyxml_8h-source.html	/^<a name="l00669"><\/a>00669 $/;"	a
l00671	docs/tinyxml_8h-source.html	/^<a name="l00671"><\/a>00671     <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#f4fb652f6bd79ae0d5ce7d0f7d3c0fba">FirstChildElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) <span class="keyword">const<\/span>;$/;"	a
l00672	docs/tinyxml_8h-source.html	/^<a name="l00672"><\/a>00672     <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#f4fb652f6bd79ae0d5ce7d0f7d3c0fba">FirstChildElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	a
l00673	docs/tinyxml_8h-source.html	/^<a name="l00673"><\/a>00673         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlElement* &gt;( (const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;FirstChildElement( _value ) );$/;"	a
l00674	docs/tinyxml_8h-source.html	/^<a name="l00674"><\/a>00674     }$/;"	a
l00675	docs/tinyxml_8h-source.html	/^<a name="l00675"><\/a>00675 $/;"	a
l00676	docs/tinyxml_8h-source.html	/^<a name="l00676"><\/a>00676 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00677	docs/tinyxml_8h-source.html	/^<a name="l00677"><\/a><a class="code" href="classTiXmlNode.html#327ad4bbd90073c5dfc931b07314f5f7">00677<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#f4fb652f6bd79ae0d5ce7d0f7d3c0fba">FirstChildElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const    <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#f4fb652f6bd79ae0d5ce7d0f7d3c0fba">FirstChildElement<\/a> (_value.c_str ()); }   $/;"	a
l00678	docs/tinyxml_8h-source.html	/^<a name="l00678"><\/a><a class="code" href="classTiXmlNode.html#7f1d7291880534c1e5cdeb392d8c1f45">00678<\/a>     <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#f4fb652f6bd79ae0d5ce7d0f7d3c0fba">FirstChildElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )                {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#f4fb652f6bd79ae0d5ce7d0f7d3c0fba">FirstChildElement<\/a> (_value.c_str ()); }   $/;"	a
l00679	docs/tinyxml_8h-source.html	/^<a name="l00679"><\/a>00679 <span class="preprocessor">    #endif<\/span>$/;"	a
l00680	docs/tinyxml_8h-source.html	/^<a name="l00680"><\/a>00680 <span class="preprocessor"><\/span>$/;"	a
l00685	docs/tinyxml_8h-source.html	/^<a name="l00685"><\/a><a class="code" href="classTiXmlNode.html#57b99d5c97d67a42b9752f5210a1ba5e">00685<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlNode.html#57b99d5c97d67a42b9752f5210a1ba5e">Type<\/a>()<span class="keyword"> const    <\/span>{ <span class="keywordflow">return<\/span> type; }$/;"	a
l00686	docs/tinyxml_8h-source.html	/^<a name="l00686"><\/a>00686 $/;"	a
l00690	docs/tinyxml_8h-source.html	/^<a name="l00690"><\/a>00690     <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>* <a class="code" href="classTiXmlNode.html#80e397fa973cf5323e33b07154b024f3">GetDocument<\/a>() <span class="keyword">const<\/span>;$/;"	a
l00691	docs/tinyxml_8h-source.html	/^<a name="l00691"><\/a>00691     <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>* <a class="code" href="classTiXmlNode.html#80e397fa973cf5323e33b07154b024f3">GetDocument<\/a>() {$/;"	a
l00692	docs/tinyxml_8h-source.html	/^<a name="l00692"><\/a>00692         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlDocument* &gt;( (const_cast&lt; const TiXmlNode* &gt;(<span class="keyword">this<\/span>))-&gt;GetDocument() );$/;"	a
l00693	docs/tinyxml_8h-source.html	/^<a name="l00693"><\/a>00693     }$/;"	a
l00694	docs/tinyxml_8h-source.html	/^<a name="l00694"><\/a>00694 $/;"	a
l00696	docs/tinyxml_8h-source.html	/^<a name="l00696"><\/a><a class="code" href="classTiXmlNode.html#eed21ad30630ef6e7faf096127edc9f3">00696<\/a>     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlNode.html#eed21ad30630ef6e7faf096127edc9f3">NoChildren<\/a>()<span class="keyword"> const                     <\/span>{ <span class="keywordflow">return<\/span> !firstChild; }$/;"	a
l00697	docs/tinyxml_8h-source.html	/^<a name="l00697"><\/a>00697 $/;"	a
l00698	docs/tinyxml_8h-source.html	/^<a name="l00698"><\/a><a class="code" href="classTiXmlNode.html#8a4cda4b15c29f64cff419309aebed08">00698<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>*    <a class="code" href="classTiXmlNode.html#8a4cda4b15c29f64cff419309aebed08">ToDocument<\/a>()<span class="keyword">    const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00699	docs/tinyxml_8h-source.html	/^<a name="l00699"><\/a><a class="code" href="classTiXmlNode.html#72abed96dc9667ab9e0a2a275301bb1c">00699<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>*     <a class="code" href="classTiXmlNode.html#72abed96dc9667ab9e0a2a275301bb1c">ToElement<\/a>()<span class="keyword">     const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00700	docs/tinyxml_8h-source.html	/^<a name="l00700"><\/a><a class="code" href="classTiXmlNode.html#a0a5086f9eaee910bbfdc7f975e26574">00700<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>*     <a class="code" href="classTiXmlNode.html#a0a5086f9eaee910bbfdc7f975e26574">ToComment<\/a>()<span class="keyword">     const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00701	docs/tinyxml_8h-source.html	/^<a name="l00701"><\/a><a class="code" href="classTiXmlNode.html#fd7205cf31d7a376929f8a36930627a2">00701<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>*     <a class="code" href="classTiXmlNode.html#fd7205cf31d7a376929f8a36930627a2">ToUnknown<\/a>()<span class="keyword">     const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00702	docs/tinyxml_8h-source.html	/^<a name="l00702"><\/a><a class="code" href="classTiXmlNode.html#95a46a52c525992d6b4ee08beb14cd69">00702<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html">TiXmlText<\/a>*        <a class="code" href="classTiXmlNode.html#95a46a52c525992d6b4ee08beb14cd69">ToText<\/a>()<span class="keyword">        const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00703	docs/tinyxml_8h-source.html	/^<a name="l00703"><\/a><a class="code" href="classTiXmlNode.html#9f43e6984fc7d4afd6eb32714c6b7b72">00703<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>* <a class="code" href="classTiXmlNode.html#9f43e6984fc7d4afd6eb32714c6b7b72">ToDeclaration<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00704	docs/tinyxml_8h-source.html	/^<a name="l00704"><\/a>00704 $/;"	a
l00705	docs/tinyxml_8h-source.html	/^<a name="l00705"><\/a><a class="code" href="classTiXmlNode.html#6a4c8ac28ee7a745d059db6691e03bae">00705<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>*          <a class="code" href="classTiXmlNode.html#8a4cda4b15c29f64cff419309aebed08">ToDocument<\/a>()    { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00706	docs/tinyxml_8h-source.html	/^<a name="l00706"><\/a><a class="code" href="classTiXmlNode.html#a65d000223187d22a4dcebd7479e9ebc">00706<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>*           <a class="code" href="classTiXmlNode.html#72abed96dc9667ab9e0a2a275301bb1c">ToElement<\/a>()     { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00707	docs/tinyxml_8h-source.html	/^<a name="l00707"><\/a><a class="code" href="classTiXmlNode.html#383e06a0787f7063953934867990f849">00707<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>*           <a class="code" href="classTiXmlNode.html#a0a5086f9eaee910bbfdc7f975e26574">ToComment<\/a>()     { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00708	docs/tinyxml_8h-source.html	/^<a name="l00708"><\/a><a class="code" href="classTiXmlNode.html#06de5af852668c7e4af0d09c205f0b0d">00708<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>*           <a class="code" href="classTiXmlNode.html#fd7205cf31d7a376929f8a36930627a2">ToUnknown<\/a>()     { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00709	docs/tinyxml_8h-source.html	/^<a name="l00709"><\/a><a class="code" href="classTiXmlNode.html#3ddfbcac78fbea041fad57e5c6d60a03">00709<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlText.html">TiXmlText<\/a>*              <a class="code" href="classTiXmlNode.html#95a46a52c525992d6b4ee08beb14cd69">ToText<\/a>()        { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00710	docs/tinyxml_8h-source.html	/^<a name="l00710"><\/a><a class="code" href="classTiXmlNode.html#4027136ca820ff4a636b607231b6a6df">00710<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>*       <a class="code" href="classTiXmlNode.html#9f43e6984fc7d4afd6eb32714c6b7b72">ToDeclaration<\/a>() { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00711	docs/tinyxml_8h-source.html	/^<a name="l00711"><\/a>00711 $/;"	a
l00715	docs/tinyxml_8h-source.html	/^<a name="l00715"><\/a>00715     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#4508cc3a2d7a98e96a54cc09c37a78a4">Clone<\/a>() <span class="keyword">const <\/span>= 0;$/;"	a
l00716	docs/tinyxml_8h-source.html	/^<a name="l00716"><\/a>00716 $/;"	a
l00739	docs/tinyxml_8h-source.html	/^<a name="l00739"><\/a>00739     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlNode.html#cc0f88b7462c6cb73809d410a4f5bb86">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>* visitor ) <span class="keyword">const <\/span>= 0;$/;"	a
l00740	docs/tinyxml_8h-source.html	/^<a name="l00740"><\/a>00740 $/;"	a
l00741	docs/tinyxml_8h-source.html	/^<a name="l00741"><\/a>00741 <span class="keyword">protected<\/span>:$/;"	a
l00742	docs/tinyxml_8h-source.html	/^<a name="l00742"><\/a>00742     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html#836eded4920ab9e9ef28496f48cd95a2">NodeType<\/a> _type );$/;"	a
l00743	docs/tinyxml_8h-source.html	/^<a name="l00743"><\/a>00743 $/;"	a
l00744	docs/tinyxml_8h-source.html	/^<a name="l00744"><\/a>00744     <span class="comment">\/\/ Copy to the allocated object. Shared functionality between Clone, Copy constructor,<\/span>$/;"	a
l00745	docs/tinyxml_8h-source.html	/^<a name="l00745"><\/a>00745     <span class="comment">\/\/ and the assignment operator.<\/span>$/;"	a
l00746	docs/tinyxml_8h-source.html	/^<a name="l00746"><\/a>00746     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l00747	docs/tinyxml_8h-source.html	/^<a name="l00747"><\/a>00747 $/;"	a
l00748	docs/tinyxml_8h-source.html	/^<a name="l00748"><\/a>00748 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00749	docs/tinyxml_8h-source.html	/^<a name="l00749"><\/a>00749 <span class="preprocessor"><\/span>        <span class="comment">\/\/ The real work of the input operator.<\/span>$/;"	a
l00750	docs/tinyxml_8h-source.html	/^<a name="l00750"><\/a>00750     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream* in, TIXML_STRING* tag ) = 0;$/;"	a
l00751	docs/tinyxml_8h-source.html	/^<a name="l00751"><\/a>00751 <span class="preprocessor">    #endif<\/span>$/;"	a
l00752	docs/tinyxml_8h-source.html	/^<a name="l00752"><\/a>00752 <span class="preprocessor"><\/span>$/;"	a
l00753	docs/tinyxml_8h-source.html	/^<a name="l00753"><\/a>00753     <span class="comment">\/\/ Figure out what is at *p, and parse it. Returns null if it is not an xml node.<\/span>$/;"	a
l00754	docs/tinyxml_8h-source.html	/^<a name="l00754"><\/a>00754     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* Identify( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* start, TiXmlEncoding encoding );$/;"	a
l00755	docs/tinyxml_8h-source.html	/^<a name="l00755"><\/a>00755 $/;"	a
l00756	docs/tinyxml_8h-source.html	/^<a name="l00756"><\/a>00756     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>*      parent;$/;"	a
l00757	docs/tinyxml_8h-source.html	/^<a name="l00757"><\/a>00757     <a class="code" href="classTiXmlNode.html#836eded4920ab9e9ef28496f48cd95a2">NodeType<\/a>        type;$/;"	a
l00758	docs/tinyxml_8h-source.html	/^<a name="l00758"><\/a>00758 $/;"	a
l00759	docs/tinyxml_8h-source.html	/^<a name="l00759"><\/a>00759     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>*      firstChild;$/;"	a
l00760	docs/tinyxml_8h-source.html	/^<a name="l00760"><\/a>00760     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>*      lastChild;$/;"	a
l00761	docs/tinyxml_8h-source.html	/^<a name="l00761"><\/a>00761 $/;"	a
l00762	docs/tinyxml_8h-source.html	/^<a name="l00762"><\/a>00762     TIXML_STRING    value;$/;"	a
l00763	docs/tinyxml_8h-source.html	/^<a name="l00763"><\/a>00763 $/;"	a
l00764	docs/tinyxml_8h-source.html	/^<a name="l00764"><\/a>00764     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>*      prev;$/;"	a
l00765	docs/tinyxml_8h-source.html	/^<a name="l00765"><\/a>00765     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>*      next;$/;"	a
l00766	docs/tinyxml_8h-source.html	/^<a name="l00766"><\/a>00766 $/;"	a
l00767	docs/tinyxml_8h-source.html	/^<a name="l00767"><\/a>00767 <span class="keyword">private<\/span>:$/;"	a
l00768	docs/tinyxml_8h-source.html	/^<a name="l00768"><\/a>00768     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>&amp; );              <span class="comment">\/\/ not implemented.<\/span>$/;"	a
l00769	docs/tinyxml_8h-source.html	/^<a name="l00769"><\/a>00769     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>&amp; base );    <span class="comment">\/\/ not allowed.<\/span>$/;"	a
l00770	docs/tinyxml_8h-source.html	/^<a name="l00770"><\/a>00770 };$/;"	a
l00771	docs/tinyxml_8h-source.html	/^<a name="l00771"><\/a>00771 $/;"	a
l00772	docs/tinyxml_8h-source.html	/^<a name="l00772"><\/a>00772 $/;"	a
l00780	docs/tinyxml_8h-source.html	/^<a name="l00780"><\/a><a class="code" href="classTiXmlAttribute.html">00780<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlBase.html">TiXmlBase<\/a>$/;"	a
l00781	docs/tinyxml_8h-source.html	/^<a name="l00781"><\/a>00781 {$/;"	a
l00782	docs/tinyxml_8h-source.html	/^<a name="l00782"><\/a>00782     <span class="keyword">friend<\/span> <span class="keyword">class <\/span>TiXmlAttributeSet;$/;"	a
l00783	docs/tinyxml_8h-source.html	/^<a name="l00783"><\/a>00783 $/;"	a
l00784	docs/tinyxml_8h-source.html	/^<a name="l00784"><\/a>00784 <span class="keyword">public<\/span>:$/;"	a
l00786	docs/tinyxml_8h-source.html	/^<a name="l00786"><\/a><a class="code" href="classTiXmlAttribute.html#9cfa3c8179873fd485d83003b114f8e1">00786<\/a>     <a class="code" href="classTiXmlAttribute.html#9cfa3c8179873fd485d83003b114f8e1">TiXmlAttribute<\/a>() : <a class="code" href="classTiXmlBase.html">TiXmlBase<\/a>()$/;"	a
l00787	docs/tinyxml_8h-source.html	/^<a name="l00787"><\/a>00787     {$/;"	a
l00788	docs/tinyxml_8h-source.html	/^<a name="l00788"><\/a>00788         document = 0;$/;"	a
l00789	docs/tinyxml_8h-source.html	/^<a name="l00789"><\/a>00789         prev = next = 0;$/;"	a
l00790	docs/tinyxml_8h-source.html	/^<a name="l00790"><\/a>00790     }$/;"	a
l00791	docs/tinyxml_8h-source.html	/^<a name="l00791"><\/a>00791 $/;"	a
l00792	docs/tinyxml_8h-source.html	/^<a name="l00792"><\/a>00792 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00794	docs/tinyxml_8h-source.html	/^<a name="l00794"><\/a><a class="code" href="classTiXmlAttribute.html#052213522caac3979960e0714063861d">00794<\/a> <span class="preprocessor">    TiXmlAttribute( const std::string&amp; _name, const std::string&amp; _value )<\/span>$/;"	a
l00795	docs/tinyxml_8h-source.html	/^<a name="l00795"><\/a>00795 <span class="preprocessor"><\/span>    {$/;"	a
l00796	docs/tinyxml_8h-source.html	/^<a name="l00796"><\/a>00796         name = _name;$/;"	a
l00797	docs/tinyxml_8h-source.html	/^<a name="l00797"><\/a>00797         value = _value;$/;"	a
l00798	docs/tinyxml_8h-source.html	/^<a name="l00798"><\/a>00798         document = 0;$/;"	a
l00799	docs/tinyxml_8h-source.html	/^<a name="l00799"><\/a>00799         prev = next = 0;$/;"	a
l00800	docs/tinyxml_8h-source.html	/^<a name="l00800"><\/a>00800     }$/;"	a
l00801	docs/tinyxml_8h-source.html	/^<a name="l00801"><\/a>00801 <span class="preprocessor">    #endif<\/span>$/;"	a
l00802	docs/tinyxml_8h-source.html	/^<a name="l00802"><\/a>00802 <span class="preprocessor"><\/span>$/;"	a
l00804	docs/tinyxml_8h-source.html	/^<a name="l00804"><\/a><a class="code" href="classTiXmlAttribute.html#759d0b76fb8fcf765ecab243bc14f05e">00804<\/a>     <a class="code" href="classTiXmlAttribute.html#9cfa3c8179873fd485d83003b114f8e1">TiXmlAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _name, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value )$/;"	a
l00805	docs/tinyxml_8h-source.html	/^<a name="l00805"><\/a>00805     {$/;"	a
l00806	docs/tinyxml_8h-source.html	/^<a name="l00806"><\/a>00806         name = _name;$/;"	a
l00807	docs/tinyxml_8h-source.html	/^<a name="l00807"><\/a>00807         value = _value;$/;"	a
l00808	docs/tinyxml_8h-source.html	/^<a name="l00808"><\/a>00808         document = 0;$/;"	a
l00809	docs/tinyxml_8h-source.html	/^<a name="l00809"><\/a>00809         prev = next = 0;$/;"	a
l00810	docs/tinyxml_8h-source.html	/^<a name="l00810"><\/a>00810     }$/;"	a
l00811	docs/tinyxml_8h-source.html	/^<a name="l00811"><\/a>00811 $/;"	a
l00812	docs/tinyxml_8h-source.html	/^<a name="l00812"><\/a><a class="code" href="classTiXmlAttribute.html#298a57287d305904ba6bd96ae6f78d3d">00812<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*     <a class="code" href="classTiXmlAttribute.html#298a57287d305904ba6bd96ae6f78d3d">Name<\/a>()<span class="keyword">  const       <\/span>{ <span class="keywordflow">return<\/span> name.c_str(); }        $/;"	a
l00813	docs/tinyxml_8h-source.html	/^<a name="l00813"><\/a><a class="code" href="classTiXmlAttribute.html#0f874490eac8ca00ee0070765d0e97e3">00813<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*     <a class="code" href="classTiXmlAttribute.html#0f874490eac8ca00ee0070765d0e97e3">Value<\/a>()<span class="keyword"> const       <\/span>{ <span class="keywordflow">return<\/span> value.c_str(); }       $/;"	a
l00814	docs/tinyxml_8h-source.html	/^<a name="l00814"><\/a>00814 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00815	docs/tinyxml_8h-source.html	/^<a name="l00815"><\/a><a class="code" href="classTiXmlAttribute.html#87705c3ccf9ee9417beb4f7cbacd4d33">00815<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> std::string&amp; <a class="code" href="classTiXmlAttribute.html#87705c3ccf9ee9417beb4f7cbacd4d33">ValueStr<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> value; }               $/;"	a
l00816	docs/tinyxml_8h-source.html	/^<a name="l00816"><\/a>00816 <span class="preprocessor">    #endif<\/span>$/;"	a
l00817	docs/tinyxml_8h-source.html	/^<a name="l00817"><\/a>00817 <span class="preprocessor"><\/span>    <span class="keywordtype">int<\/span>             <a class="code" href="classTiXmlAttribute.html#a1a20ad59dc7e89a0ab265396360d50f">IntValue<\/a>() <span class="keyword">const<\/span>;                                   $/;"	a
l00818	docs/tinyxml_8h-source.html	/^<a name="l00818"><\/a>00818     <span class="keywordtype">double<\/span>          <a class="code" href="classTiXmlAttribute.html#2880ddef53fc7522c99535273954d230">DoubleValue<\/a>() <span class="keyword">const<\/span>;                                $/;"	a
l00819	docs/tinyxml_8h-source.html	/^<a name="l00819"><\/a>00819 $/;"	a
l00820	docs/tinyxml_8h-source.html	/^<a name="l00820"><\/a>00820     <span class="comment">\/\/ Get the tinyxml string representation<\/span>$/;"	a
l00821	docs/tinyxml_8h-source.html	/^<a name="l00821"><\/a>00821     <span class="keyword">const<\/span> TIXML_STRING&amp; NameTStr()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> name; }$/;"	a
l00822	docs/tinyxml_8h-source.html	/^<a name="l00822"><\/a>00822 $/;"	a
l00832	docs/tinyxml_8h-source.html	/^<a name="l00832"><\/a>00832     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlAttribute.html#d6c93088ee21af41a107931223339344">QueryIntValue<\/a>( <span class="keywordtype">int<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l00834	docs/tinyxml_8h-source.html	/^<a name="l00834"><\/a>00834     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlAttribute.html#c87b2a8489906a5d7aa2875f20be3513">QueryDoubleValue<\/a>( <span class="keywordtype">double<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l00835	docs/tinyxml_8h-source.html	/^<a name="l00835"><\/a>00835 $/;"	a
l00836	docs/tinyxml_8h-source.html	/^<a name="l00836"><\/a><a class="code" href="classTiXmlAttribute.html#b7fa3d21ff8d7c5764cf9af15b667a99">00836<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#b7fa3d21ff8d7c5764cf9af15b667a99">SetName<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _name )   { name = _name; }               $/;"	a
l00837	docs/tinyxml_8h-source.html	/^<a name="l00837"><\/a><a class="code" href="classTiXmlAttribute.html#2dae44178f668b3cb48101be4f2236a0">00837<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#2dae44178f668b3cb48101be4f2236a0">SetValue<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _value ) { value = _value; }             $/;"	a
l00838	docs/tinyxml_8h-source.html	/^<a name="l00838"><\/a>00838 $/;"	a
l00839	docs/tinyxml_8h-source.html	/^<a name="l00839"><\/a>00839     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#7e065df640116a62ea4f4b7da5449cc8">SetIntValue<\/a>( <span class="keywordtype">int<\/span> _value );                                     $/;"	a
l00840	docs/tinyxml_8h-source.html	/^<a name="l00840"><\/a>00840     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#0316da31373496c4368ad549bf711394">SetDoubleValue<\/a>( <span class="keywordtype">double<\/span> _value );                               $/;"	a
l00841	docs/tinyxml_8h-source.html	/^<a name="l00841"><\/a>00841 $/;"	a
l00842	docs/tinyxml_8h-source.html	/^<a name="l00842"><\/a>00842 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00844	docs/tinyxml_8h-source.html	/^<a name="l00844"><\/a><a class="code" href="classTiXmlAttribute.html#b296ff0c9a8c701055cd257a8a976e57">00844<\/a> <span class="preprocessor">    void SetName( const std::string&amp; _name )    { name = _name; }   <\/span>$/;"	a
l00846	docs/tinyxml_8h-source.html	/^<a name="l00846"><\/a><a class="code" href="classTiXmlAttribute.html#b43f67a0cc3ec1d80e62606500f0925f">00846<\/a> <span class="preprocessor">    void SetValue( const std::string&amp; _value )  { value = _value; }<\/span>$/;"	a
l00847	docs/tinyxml_8h-source.html	/^<a name="l00847"><\/a>00847 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l00848	docs/tinyxml_8h-source.html	/^<a name="l00848"><\/a>00848 <span class="preprocessor"><\/span>$/;"	a
l00850	docs/tinyxml_8h-source.html	/^<a name="l00850"><\/a>00850     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#1c78e92e223a40843f644ba48ef69f67">Next<\/a>() <span class="keyword">const<\/span>;$/;"	a
l00851	docs/tinyxml_8h-source.html	/^<a name="l00851"><\/a>00851     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#1c78e92e223a40843f644ba48ef69f67">Next<\/a>() {$/;"	a
l00852	docs/tinyxml_8h-source.html	/^<a name="l00852"><\/a>00852         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlAttribute* &gt;( (const_cast&lt; const TiXmlAttribute* &gt;(<span class="keyword">this<\/span>))-&gt;Next() ); $/;"	a
l00853	docs/tinyxml_8h-source.html	/^<a name="l00853"><\/a>00853     }$/;"	a
l00854	docs/tinyxml_8h-source.html	/^<a name="l00854"><\/a>00854 $/;"	a
l00856	docs/tinyxml_8h-source.html	/^<a name="l00856"><\/a>00856     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#6ebbfe333fe76cd834bd6cbcca3130cf">Previous<\/a>() <span class="keyword">const<\/span>;$/;"	a
l00857	docs/tinyxml_8h-source.html	/^<a name="l00857"><\/a>00857     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#6ebbfe333fe76cd834bd6cbcca3130cf">Previous<\/a>() {$/;"	a
l00858	docs/tinyxml_8h-source.html	/^<a name="l00858"><\/a>00858         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlAttribute* &gt;( (const_cast&lt; const TiXmlAttribute* &gt;(<span class="keyword">this<\/span>))-&gt;Previous() ); $/;"	a
l00859	docs/tinyxml_8h-source.html	/^<a name="l00859"><\/a>00859     }$/;"	a
l00860	docs/tinyxml_8h-source.html	/^<a name="l00860"><\/a>00860 $/;"	a
l00861	docs/tinyxml_8h-source.html	/^<a name="l00861"><\/a>00861     <span class="keywordtype">bool<\/span> operator==( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rhs.<a class="code" href="classTiXmlAttribute.html#fcbe165f33f08cf9b24daa33f0ee951a">name<\/a> == name; }$/;"	a
l00862	docs/tinyxml_8h-source.html	/^<a name="l00862"><\/a>00862     <span class="keywordtype">bool<\/span> operator&lt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &lt; rhs.<a class="code" href="classTiXmlAttribute.html#fcbe165f33f08cf9b24daa33f0ee951a">name<\/a>; }$/;"	a
l00863	docs/tinyxml_8h-source.html	/^<a name="l00863"><\/a>00863     <span class="keywordtype">bool<\/span> operator&gt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &gt; rhs.<a class="code" href="classTiXmlAttribute.html#fcbe165f33f08cf9b24daa33f0ee951a">name<\/a>; }$/;"	a
l00864	docs/tinyxml_8h-source.html	/^<a name="l00864"><\/a>00864 $/;"	a
l00865	docs/tinyxml_8h-source.html	/^<a name="l00865"><\/a>00865     <span class="comment">\/*  Attribute parsing starts: first letter of the name<\/span>$/;"	a
l00866	docs/tinyxml_8h-source.html	/^<a name="l00866"><\/a>00866 <span class="comment">                         returns: the next char after the value end quote<\/span>$/;"	a
l00867	docs/tinyxml_8h-source.html	/^<a name="l00867"><\/a>00867 <span class="comment">    *\/<\/span>$/;"	a
l00868	docs/tinyxml_8h-source.html	/^<a name="l00868"><\/a>00868     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l00869	docs/tinyxml_8h-source.html	/^<a name="l00869"><\/a>00869 $/;"	a
l00870	docs/tinyxml_8h-source.html	/^<a name="l00870"><\/a>00870     <span class="comment">\/\/ Prints this Attribute to a FILE stream.<\/span>$/;"	a
l00871	docs/tinyxml_8h-source.html	/^<a name="l00871"><\/a><a class="code" href="classTiXmlAttribute.html#cc04956c1d5c4c31fe74f7a7528d109a">00871<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#cc04956c1d5c4c31fe74f7a7528d109a">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth )<span class="keyword"> const <\/span>{$/;"	a
l00872	docs/tinyxml_8h-source.html	/^<a name="l00872"><\/a>00872         <a class="code" href="classTiXmlAttribute.html#cc04956c1d5c4c31fe74f7a7528d109a">Print<\/a>( cfile, depth, 0 );$/;"	a
l00873	docs/tinyxml_8h-source.html	/^<a name="l00873"><\/a>00873     }$/;"	a
l00874	docs/tinyxml_8h-source.html	/^<a name="l00874"><\/a>00874     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#cc04956c1d5c4c31fe74f7a7528d109a">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth, TIXML_STRING* str ) <span class="keyword">const<\/span>;$/;"	a
l00875	docs/tinyxml_8h-source.html	/^<a name="l00875"><\/a>00875 $/;"	a
l00876	docs/tinyxml_8h-source.html	/^<a name="l00876"><\/a>00876     <span class="comment">\/\/ [internal use]<\/span>$/;"	a
l00877	docs/tinyxml_8h-source.html	/^<a name="l00877"><\/a>00877     <span class="comment">\/\/ Set the document pointer so the attribute can report errors.<\/span>$/;"	a
l00878	docs/tinyxml_8h-source.html	/^<a name="l00878"><\/a>00878     <span class="keywordtype">void<\/span> SetDocument( <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>* doc )  { document = doc; }$/;"	a
l00879	docs/tinyxml_8h-source.html	/^<a name="l00879"><\/a>00879 $/;"	a
l00880	docs/tinyxml_8h-source.html	/^<a name="l00880"><\/a>00880 <span class="keyword">private<\/span>:$/;"	a
l00881	docs/tinyxml_8h-source.html	/^<a name="l00881"><\/a>00881     <a class="code" href="classTiXmlAttribute.html#9cfa3c8179873fd485d83003b114f8e1">TiXmlAttribute<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>&amp; );                <span class="comment">\/\/ not implemented.<\/span>$/;"	a
l00882	docs/tinyxml_8h-source.html	/^<a name="l00882"><\/a>00882     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>&amp; base );   <span class="comment">\/\/ not allowed.<\/span>$/;"	a
l00883	docs/tinyxml_8h-source.html	/^<a name="l00883"><\/a>00883 $/;"	a
l00884	docs/tinyxml_8h-source.html	/^<a name="l00884"><\/a>00884     <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>*  document;   <span class="comment">\/\/ A pointer back to a document, for error reporting.<\/span>$/;"	a
l00885	docs/tinyxml_8h-source.html	/^<a name="l00885"><\/a>00885     TIXML_STRING name;$/;"	a
l00886	docs/tinyxml_8h-source.html	/^<a name="l00886"><\/a>00886     TIXML_STRING value;$/;"	a
l00887	docs/tinyxml_8h-source.html	/^<a name="l00887"><\/a>00887     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* prev;$/;"	a
l00888	docs/tinyxml_8h-source.html	/^<a name="l00888"><\/a>00888     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* next;$/;"	a
l00889	docs/tinyxml_8h-source.html	/^<a name="l00889"><\/a>00889 };$/;"	a
l00890	docs/tinyxml_8h-source.html	/^<a name="l00890"><\/a>00890 $/;"	a
l00891	docs/tinyxml_8h-source.html	/^<a name="l00891"><\/a>00891 $/;"	a
l00892	docs/tinyxml_8h-source.html	/^<a name="l00892"><\/a>00892 <span class="comment">\/*  A class used to manage a group of attributes.<\/span>$/;"	a
l00893	docs/tinyxml_8h-source.html	/^<a name="l00893"><\/a>00893 <span class="comment">    It is only used internally, both by the ELEMENT and the DECLARATION.<\/span>$/;"	a
l00894	docs/tinyxml_8h-source.html	/^<a name="l00894"><\/a>00894 <span class="comment">    <\/span>$/;"	a
l00895	docs/tinyxml_8h-source.html	/^<a name="l00895"><\/a>00895 <span class="comment">    The set can be changed transparent to the Element and Declaration<\/span>$/;"	a
l00896	docs/tinyxml_8h-source.html	/^<a name="l00896"><\/a>00896 <span class="comment">    classes that use it, but NOT transparent to the Attribute<\/span>$/;"	a
l00897	docs/tinyxml_8h-source.html	/^<a name="l00897"><\/a>00897 <span class="comment">    which has to implement a next() and previous() method. Which makes<\/span>$/;"	a
l00898	docs/tinyxml_8h-source.html	/^<a name="l00898"><\/a>00898 <span class="comment">    it a bit problematic and prevents the use of STL.<\/span>$/;"	a
l00899	docs/tinyxml_8h-source.html	/^<a name="l00899"><\/a>00899 <span class="comment"><\/span>$/;"	a
l00900	docs/tinyxml_8h-source.html	/^<a name="l00900"><\/a>00900 <span class="comment">    This version is implemented with circular lists because:<\/span>$/;"	a
l00901	docs/tinyxml_8h-source.html	/^<a name="l00901"><\/a>00901 <span class="comment">        - I like circular lists<\/span>$/;"	a
l00902	docs/tinyxml_8h-source.html	/^<a name="l00902"><\/a>00902 <span class="comment">        - it demonstrates some independence from the (typical) doubly linked list.<\/span>$/;"	a
l00903	docs/tinyxml_8h-source.html	/^<a name="l00903"><\/a>00903 <span class="comment">*\/<\/span>$/;"	a
l00904	docs/tinyxml_8h-source.html	/^<a name="l00904"><\/a>00904 <span class="keyword">class <\/span>TiXmlAttributeSet$/;"	a
l00905	docs/tinyxml_8h-source.html	/^<a name="l00905"><\/a>00905 {$/;"	a
l00906	docs/tinyxml_8h-source.html	/^<a name="l00906"><\/a>00906 <span class="keyword">public<\/span>:$/;"	a
l00907	docs/tinyxml_8h-source.html	/^<a name="l00907"><\/a>00907     TiXmlAttributeSet();$/;"	a
l00908	docs/tinyxml_8h-source.html	/^<a name="l00908"><\/a>00908     ~TiXmlAttributeSet();$/;"	a
l00909	docs/tinyxml_8h-source.html	/^<a name="l00909"><\/a>00909 $/;"	a
l00910	docs/tinyxml_8h-source.html	/^<a name="l00910"><\/a>00910     <span class="keywordtype">void<\/span> Add( <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* attribute );$/;"	a
l00911	docs/tinyxml_8h-source.html	/^<a name="l00911"><\/a>00911     <span class="keywordtype">void<\/span> Remove( <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* attribute );$/;"	a
l00912	docs/tinyxml_8h-source.html	/^<a name="l00912"><\/a>00912 $/;"	a
l00913	docs/tinyxml_8h-source.html	/^<a name="l00913"><\/a>00913     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* First()<span class="keyword">   const   <\/span>{ <span class="keywordflow">return<\/span> ( sentinel.next == &amp;sentinel ) ? 0 : sentinel.next; }$/;"	a
l00914	docs/tinyxml_8h-source.html	/^<a name="l00914"><\/a>00914     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* First()                 { <span class="keywordflow">return<\/span> ( sentinel.next == &amp;sentinel ) ? 0 : sentinel.next; }$/;"	a
l00915	docs/tinyxml_8h-source.html	/^<a name="l00915"><\/a>00915     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* Last()<span class="keyword"> const      <\/span>{ <span class="keywordflow">return<\/span> ( sentinel.prev == &amp;sentinel ) ? 0 : sentinel.prev; }$/;"	a
l00916	docs/tinyxml_8h-source.html	/^<a name="l00916"><\/a>00916     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* Last()                  { <span class="keywordflow">return<\/span> ( sentinel.prev == &amp;sentinel ) ? 0 : sentinel.prev; }$/;"	a
l00917	docs/tinyxml_8h-source.html	/^<a name="l00917"><\/a>00917 $/;"	a
l00918	docs/tinyxml_8h-source.html	/^<a name="l00918"><\/a>00918     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>*   Find( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _name ) <span class="keyword">const<\/span>;$/;"	a
l00919	docs/tinyxml_8h-source.html	/^<a name="l00919"><\/a>00919     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* Find( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _name ) {$/;"	a
l00920	docs/tinyxml_8h-source.html	/^<a name="l00920"><\/a>00920         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlAttribute* &gt;( (const_cast&lt; const TiXmlAttributeSet* &gt;(<span class="keyword">this<\/span>))-&gt;Find( _name ) );$/;"	a
l00921	docs/tinyxml_8h-source.html	/^<a name="l00921"><\/a>00921     }$/;"	a
l00922	docs/tinyxml_8h-source.html	/^<a name="l00922"><\/a>00922 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00923	docs/tinyxml_8h-source.html	/^<a name="l00923"><\/a>00923 <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>*   Find( <span class="keyword">const<\/span> std::string&amp; _name ) <span class="keyword">const<\/span>;$/;"	a
l00924	docs/tinyxml_8h-source.html	/^<a name="l00924"><\/a>00924     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* Find( <span class="keyword">const<\/span> std::string&amp; _name ) {$/;"	a
l00925	docs/tinyxml_8h-source.html	/^<a name="l00925"><\/a>00925         <span class="keywordflow">return<\/span> const_cast&lt; TiXmlAttribute* &gt;( (const_cast&lt; const TiXmlAttributeSet* &gt;(<span class="keyword">this<\/span>))-&gt;Find( _name ) );$/;"	a
l00926	docs/tinyxml_8h-source.html	/^<a name="l00926"><\/a>00926     }$/;"	a
l00927	docs/tinyxml_8h-source.html	/^<a name="l00927"><\/a>00927 $/;"	a
l00928	docs/tinyxml_8h-source.html	/^<a name="l00928"><\/a>00928 <span class="preprocessor">    #endif<\/span>$/;"	a
l00929	docs/tinyxml_8h-source.html	/^<a name="l00929"><\/a>00929 <span class="preprocessor"><\/span>$/;"	a
l00930	docs/tinyxml_8h-source.html	/^<a name="l00930"><\/a>00930 <span class="keyword">private<\/span>:$/;"	a
l00931	docs/tinyxml_8h-source.html	/^<a name="l00931"><\/a>00931     <span class="comment">\/\/*ME:  Because of hidden\/disabled copy-construktor in TiXmlAttribute (sentinel-element),<\/span>$/;"	a
l00932	docs/tinyxml_8h-source.html	/^<a name="l00932"><\/a>00932     <span class="comment">\/\/*ME:  this class must be also use a hidden\/disabled copy-constructor !!!<\/span>$/;"	a
l00933	docs/tinyxml_8h-source.html	/^<a name="l00933"><\/a>00933     TiXmlAttributeSet( <span class="keyword">const<\/span> TiXmlAttributeSet&amp; );  <span class="comment">\/\/ not allowed<\/span>$/;"	a
l00934	docs/tinyxml_8h-source.html	/^<a name="l00934"><\/a>00934     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> TiXmlAttributeSet&amp; ); <span class="comment">\/\/ not allowed (as TiXmlAttribute)<\/span>$/;"	a
l00935	docs/tinyxml_8h-source.html	/^<a name="l00935"><\/a>00935 $/;"	a
l00936	docs/tinyxml_8h-source.html	/^<a name="l00936"><\/a>00936     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a> sentinel;$/;"	a
l00937	docs/tinyxml_8h-source.html	/^<a name="l00937"><\/a>00937 };$/;"	a
l00938	docs/tinyxml_8h-source.html	/^<a name="l00938"><\/a>00938 $/;"	a
l00939	docs/tinyxml_8h-source.html	/^<a name="l00939"><\/a>00939 $/;"	a
l00944	docs/tinyxml_8h-source.html	/^<a name="l00944"><\/a><a class="code" href="classTiXmlElement.html">00944<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html">TiXmlElement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>$/;"	a
l00945	docs/tinyxml_8h-source.html	/^<a name="l00945"><\/a>00945 {$/;"	a
l00946	docs/tinyxml_8h-source.html	/^<a name="l00946"><\/a>00946 <span class="keyword">public<\/span>:$/;"	a
l00948	docs/tinyxml_8h-source.html	/^<a name="l00948"><\/a>00948     <a class="code" href="classTiXmlElement.html#01bc3ab372d35da08efcbbe65ad90c60">TiXmlElement<\/a> (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * in_value);$/;"	a
l00949	docs/tinyxml_8h-source.html	/^<a name="l00949"><\/a>00949 $/;"	a
l00950	docs/tinyxml_8h-source.html	/^<a name="l00950"><\/a>00950 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00952	docs/tinyxml_8h-source.html	/^<a name="l00952"><\/a>00952 <span class="preprocessor">    TiXmlElement( const std::string&amp; _value );<\/span>$/;"	a
l00953	docs/tinyxml_8h-source.html	/^<a name="l00953"><\/a>00953 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l00954	docs/tinyxml_8h-source.html	/^<a name="l00954"><\/a>00954 <span class="preprocessor"><\/span>$/;"	a
l00955	docs/tinyxml_8h-source.html	/^<a name="l00955"><\/a>00955     <a class="code" href="classTiXmlElement.html#01bc3ab372d35da08efcbbe65ad90c60">TiXmlElement<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>&amp; );$/;"	a
l00956	docs/tinyxml_8h-source.html	/^<a name="l00956"><\/a>00956 $/;"	a
l00957	docs/tinyxml_8h-source.html	/^<a name="l00957"><\/a>00957     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>&amp; base );$/;"	a
l00958	docs/tinyxml_8h-source.html	/^<a name="l00958"><\/a>00958 $/;"	a
l00959	docs/tinyxml_8h-source.html	/^<a name="l00959"><\/a>00959     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>();$/;"	a
l00960	docs/tinyxml_8h-source.html	/^<a name="l00960"><\/a>00960 $/;"	a
l00964	docs/tinyxml_8h-source.html	/^<a name="l00964"><\/a>00964     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlElement.html#e419a442a9701a62b0c3d8fd1cbdd12d">Attribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name ) <span class="keyword">const<\/span>;$/;"	a
l00965	docs/tinyxml_8h-source.html	/^<a name="l00965"><\/a>00965 $/;"	a
l00972	docs/tinyxml_8h-source.html	/^<a name="l00972"><\/a>00972     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlElement.html#e419a442a9701a62b0c3d8fd1cbdd12d">Attribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">int<\/span>* i ) <span class="keyword">const<\/span>;$/;"	a
l00973	docs/tinyxml_8h-source.html	/^<a name="l00973"><\/a>00973 $/;"	a
l00980	docs/tinyxml_8h-source.html	/^<a name="l00980"><\/a>00980     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlElement.html#e419a442a9701a62b0c3d8fd1cbdd12d">Attribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">double<\/span>* d ) <span class="keyword">const<\/span>;$/;"	a
l00981	docs/tinyxml_8h-source.html	/^<a name="l00981"><\/a>00981 $/;"	a
l00989	docs/tinyxml_8h-source.html	/^<a name="l00989"><\/a>00989     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#ea0bfe471380f281c5945770ddbf52b9">QueryIntAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">int<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l00991	docs/tinyxml_8h-source.html	/^<a name="l00991"><\/a>00991     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#898d7730ecc341f0bffc7a9dadbf1ce7">QueryDoubleAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">double<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l00993	docs/tinyxml_8h-source.html	/^<a name="l00993"><\/a><a class="code" href="classTiXmlElement.html#a04d3af11601ef5a5f88295203a843be">00993<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#a04d3af11601ef5a5f88295203a843be">QueryFloatAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">float<\/span>* _value )<span class="keyword"> const <\/span>{$/;"	a
l00994	docs/tinyxml_8h-source.html	/^<a name="l00994"><\/a>00994         <span class="keywordtype">double<\/span> d;$/;"	a
l00995	docs/tinyxml_8h-source.html	/^<a name="l00995"><\/a>00995         <span class="keywordtype">int<\/span> result = <a class="code" href="classTiXmlElement.html#898d7730ecc341f0bffc7a9dadbf1ce7">QueryDoubleAttribute<\/a>( name, &amp;d );$/;"	a
l00996	docs/tinyxml_8h-source.html	/^<a name="l00996"><\/a>00996         <span class="keywordflow">if<\/span> ( result == TIXML_SUCCESS ) {$/;"	a
l00997	docs/tinyxml_8h-source.html	/^<a name="l00997"><\/a>00997             *_value = (float)d;$/;"	a
l00998	docs/tinyxml_8h-source.html	/^<a name="l00998"><\/a>00998         }$/;"	a
l00999	docs/tinyxml_8h-source.html	/^<a name="l00999"><\/a>00999         <span class="keywordflow">return<\/span> result;$/;"	a
l01000	docs/tinyxml_8h-source.html	/^<a name="l01000"><\/a>01000     }$/;"	a
l01001	docs/tinyxml_8h-source.html	/^<a name="l01001"><\/a>01001 $/;"	a
l01002	docs/tinyxml_8h-source.html	/^<a name="l01002"><\/a>01002 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01003	docs/tinyxml_8h-source.html	/^<a name="l01003"><\/a>01003 <span class="preprocessor"><\/span>$/;"	a
l01011	docs/tinyxml_8h-source.html	/^<a name="l01011"><\/a><a class="code" href="classTiXmlElement.html#e3b9a03b0a56663a40801c7256683576">01011<\/a>     <span class="keyword">template<\/span>&lt; <span class="keyword">typename<\/span> T &gt; <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#e3b9a03b0a56663a40801c7256683576">QueryValueAttribute<\/a>( <span class="keyword">const<\/span> std::string&amp; name, T* outValue )<span class="keyword"> const<\/span>$/;"	a
l01012	docs/tinyxml_8h-source.html	/^<a name="l01012"><\/a>01012 <span class="keyword">    <\/span>{$/;"	a
l01013	docs/tinyxml_8h-source.html	/^<a name="l01013"><\/a>01013         <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* node = attributeSet.Find( name );$/;"	a
l01014	docs/tinyxml_8h-source.html	/^<a name="l01014"><\/a>01014         <span class="keywordflow">if<\/span> ( !node )$/;"	a
l01015	docs/tinyxml_8h-source.html	/^<a name="l01015"><\/a>01015             <span class="keywordflow">return<\/span> TIXML_NO_ATTRIBUTE;$/;"	a
l01016	docs/tinyxml_8h-source.html	/^<a name="l01016"><\/a>01016 $/;"	a
l01017	docs/tinyxml_8h-source.html	/^<a name="l01017"><\/a>01017         std::stringstream sstream( node-&gt;<a class="code" href="classTiXmlAttribute.html#87705c3ccf9ee9417beb4f7cbacd4d33">ValueStr<\/a>() );$/;"	a
l01018	docs/tinyxml_8h-source.html	/^<a name="l01018"><\/a>01018         sstream &gt;&gt; *outValue;$/;"	a
l01019	docs/tinyxml_8h-source.html	/^<a name="l01019"><\/a>01019         <span class="keywordflow">if<\/span> ( !sstream.fail() )$/;"	a
l01020	docs/tinyxml_8h-source.html	/^<a name="l01020"><\/a>01020             <span class="keywordflow">return<\/span> TIXML_SUCCESS;$/;"	a
l01021	docs/tinyxml_8h-source.html	/^<a name="l01021"><\/a>01021         <span class="keywordflow">return<\/span> TIXML_WRONG_TYPE;$/;"	a
l01022	docs/tinyxml_8h-source.html	/^<a name="l01022"><\/a>01022     }$/;"	a
l01023	docs/tinyxml_8h-source.html	/^<a name="l01023"><\/a>01023     <span class="comment">\/*<\/span>$/;"	a
l01024	docs/tinyxml_8h-source.html	/^<a name="l01024"><\/a>01024 <span class="comment">     This is - in theory - a bug fix for "QueryValueAtribute returns truncated std::string"<\/span>$/;"	a
l01025	docs/tinyxml_8h-source.html	/^<a name="l01025"><\/a>01025 <span class="comment">     but template specialization is hard to get working cross-compiler. Leaving the bug for now.<\/span>$/;"	a
l01026	docs/tinyxml_8h-source.html	/^<a name="l01026"><\/a>01026 <span class="comment">     <\/span>$/;"	a
l01027	docs/tinyxml_8h-source.html	/^<a name="l01027"><\/a>01027 <span class="comment">    \/\/ The above will fail for std::string because the space character is used as a seperator.<\/span>$/;"	a
l01028	docs/tinyxml_8h-source.html	/^<a name="l01028"><\/a>01028 <span class="comment">    \/\/ Specialize for strings. Bug [ 1695429 ] QueryValueAtribute returns truncated std::string<\/span>$/;"	a
l01029	docs/tinyxml_8h-source.html	/^<a name="l01029"><\/a>01029 <span class="comment">    template&lt;&gt; int QueryValueAttribute( const std::string&amp; name, std::string* outValue ) const<\/span>$/;"	a
l01030	docs/tinyxml_8h-source.html	/^<a name="l01030"><\/a>01030 <span class="comment">    {<\/span>$/;"	a
l01031	docs/tinyxml_8h-source.html	/^<a name="l01031"><\/a>01031 <span class="comment">        const TiXmlAttribute* node = attributeSet.Find( name );<\/span>$/;"	a
l01032	docs/tinyxml_8h-source.html	/^<a name="l01032"><\/a>01032 <span class="comment">        if ( !node )<\/span>$/;"	a
l01033	docs/tinyxml_8h-source.html	/^<a name="l01033"><\/a>01033 <span class="comment">            return TIXML_NO_ATTRIBUTE;<\/span>$/;"	a
l01034	docs/tinyxml_8h-source.html	/^<a name="l01034"><\/a>01034 <span class="comment">        *outValue = node-&gt;ValueStr();<\/span>$/;"	a
l01035	docs/tinyxml_8h-source.html	/^<a name="l01035"><\/a>01035 <span class="comment">        return TIXML_SUCCESS;<\/span>$/;"	a
l01036	docs/tinyxml_8h-source.html	/^<a name="l01036"><\/a>01036 <span class="comment">    }<\/span>$/;"	a
l01037	docs/tinyxml_8h-source.html	/^<a name="l01037"><\/a>01037 <span class="comment">    *\/<\/span>$/;"	a
l01038	docs/tinyxml_8h-source.html	/^<a name="l01038"><\/a>01038 <span class="preprocessor">    #endif<\/span>$/;"	a
l01039	docs/tinyxml_8h-source.html	/^<a name="l01039"><\/a>01039 <span class="preprocessor"><\/span>$/;"	a
l01043	docs/tinyxml_8h-source.html	/^<a name="l01043"><\/a>01043     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlElement.html#bf0b3bd7f0e4c746a89ec6e7f101fc32">SetAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value );$/;"	a
l01044	docs/tinyxml_8h-source.html	/^<a name="l01044"><\/a>01044 $/;"	a
l01045	docs/tinyxml_8h-source.html	/^<a name="l01045"><\/a>01045 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01046	docs/tinyxml_8h-source.html	/^<a name="l01046"><\/a>01046 <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> std::string* <a class="code" href="classTiXmlElement.html#e419a442a9701a62b0c3d8fd1cbdd12d">Attribute<\/a>( <span class="keyword">const<\/span> std::string&amp; name ) <span class="keyword">const<\/span>;$/;"	a
l01047	docs/tinyxml_8h-source.html	/^<a name="l01047"><\/a>01047     <span class="keyword">const<\/span> std::string* <a class="code" href="classTiXmlElement.html#e419a442a9701a62b0c3d8fd1cbdd12d">Attribute<\/a>( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">int<\/span>* i ) <span class="keyword">const<\/span>;$/;"	a
l01048	docs/tinyxml_8h-source.html	/^<a name="l01048"><\/a>01048     <span class="keyword">const<\/span> std::string* <a class="code" href="classTiXmlElement.html#e419a442a9701a62b0c3d8fd1cbdd12d">Attribute<\/a>( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">double<\/span>* d ) <span class="keyword">const<\/span>;$/;"	a
l01049	docs/tinyxml_8h-source.html	/^<a name="l01049"><\/a>01049     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#ea0bfe471380f281c5945770ddbf52b9">QueryIntAttribute<\/a>( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">int<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l01050	docs/tinyxml_8h-source.html	/^<a name="l01050"><\/a>01050     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#898d7730ecc341f0bffc7a9dadbf1ce7">QueryDoubleAttribute<\/a>( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">double<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l01051	docs/tinyxml_8h-source.html	/^<a name="l01051"><\/a>01051 $/;"	a
l01053	docs/tinyxml_8h-source.html	/^<a name="l01053"><\/a>01053     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlElement.html#bf0b3bd7f0e4c746a89ec6e7f101fc32">SetAttribute<\/a>( <span class="keyword">const<\/span> std::string&amp; name, <span class="keyword">const<\/span> std::string&amp; _value );$/;"	a
l01055	docs/tinyxml_8h-source.html	/^<a name="l01055"><\/a>01055     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlElement.html#bf0b3bd7f0e4c746a89ec6e7f101fc32">SetAttribute<\/a>( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">int<\/span> _value );$/;"	a
l01056	docs/tinyxml_8h-source.html	/^<a name="l01056"><\/a>01056 <span class="preprocessor">    #endif<\/span>$/;"	a
l01057	docs/tinyxml_8h-source.html	/^<a name="l01057"><\/a>01057 <span class="preprocessor"><\/span>$/;"	a
l01061	docs/tinyxml_8h-source.html	/^<a name="l01061"><\/a>01061     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlElement.html#bf0b3bd7f0e4c746a89ec6e7f101fc32">SetAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name, <span class="keywordtype">int<\/span> value );$/;"	a
l01062	docs/tinyxml_8h-source.html	/^<a name="l01062"><\/a>01062 $/;"	a
l01066	docs/tinyxml_8h-source.html	/^<a name="l01066"><\/a>01066     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlElement.html#0d1dd975d75496778177e35abfe0ec0b">SetDoubleAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name, <span class="keywordtype">double<\/span> value );$/;"	a
l01067	docs/tinyxml_8h-source.html	/^<a name="l01067"><\/a>01067 $/;"	a
l01070	docs/tinyxml_8h-source.html	/^<a name="l01070"><\/a>01070     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlElement.html#56979767deca794376b1dfa69a525b2a">RemoveAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name );$/;"	a
l01071	docs/tinyxml_8h-source.html	/^<a name="l01071"><\/a>01071 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01072	docs/tinyxml_8h-source.html	/^<a name="l01072"><\/a><a class="code" href="classTiXmlElement.html#1afa6aea716511326a608e4c05df4f3a">01072<\/a> <span class="preprocessor"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlElement.html#56979767deca794376b1dfa69a525b2a">RemoveAttribute<\/a>( <span class="keyword">const<\/span> std::string&amp; name ) {   <a class="code" href="classTiXmlElement.html#56979767deca794376b1dfa69a525b2a">RemoveAttribute<\/a> (name.c_str ());    }   $/;"	a
l01073	docs/tinyxml_8h-source.html	/^<a name="l01073"><\/a>01073 <span class="preprocessor">    #endif<\/span>$/;"	a
l01074	docs/tinyxml_8h-source.html	/^<a name="l01074"><\/a>01074 <span class="preprocessor"><\/span>$/;"	a
l01075	docs/tinyxml_8h-source.html	/^<a name="l01075"><\/a><a class="code" href="classTiXmlElement.html#516054c9073647d6cb29b6abe9fa0592">01075<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlElement.html#516054c9073647d6cb29b6abe9fa0592">FirstAttribute<\/a>()<span class="keyword"> const    <\/span>{ <span class="keywordflow">return<\/span> attributeSet.First(); }        $/;"	a
l01076	docs/tinyxml_8h-source.html	/^<a name="l01076"><\/a>01076     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlElement.html#516054c9073647d6cb29b6abe9fa0592">FirstAttribute<\/a>()                { <span class="keywordflow">return<\/span> attributeSet.First(); }$/;"	a
l01077	docs/tinyxml_8h-source.html	/^<a name="l01077"><\/a><a class="code" href="classTiXmlElement.html#86191b49f9177be132b85b14655f1381">01077<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlElement.html#86191b49f9177be132b85b14655f1381">LastAttribute<\/a>()<span class="keyword">   const   <\/span>{ <span class="keywordflow">return<\/span> attributeSet.Last(); }     $/;"	a
l01078	docs/tinyxml_8h-source.html	/^<a name="l01078"><\/a>01078     <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlElement.html#86191b49f9177be132b85b14655f1381">LastAttribute<\/a>()                 { <span class="keywordflow">return<\/span> attributeSet.Last(); }$/;"	a
l01079	docs/tinyxml_8h-source.html	/^<a name="l01079"><\/a>01079 $/;"	a
l01112	docs/tinyxml_8h-source.html	/^<a name="l01112"><\/a>01112     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlElement.html#f3282294986cdb216646ea1f67af2c87">GetText<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01113	docs/tinyxml_8h-source.html	/^<a name="l01113"><\/a>01113 $/;"	a
l01115	docs/tinyxml_8h-source.html	/^<a name="l01115"><\/a>01115     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlElement.html#a464535ea1994db337cb6a8ce4b588b5">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01116	docs/tinyxml_8h-source.html	/^<a name="l01116"><\/a>01116     <span class="comment">\/\/ Print the Element to a FILE stream.<\/span>$/;"	a
l01117	docs/tinyxml_8h-source.html	/^<a name="l01117"><\/a>01117     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlElement.html#fbf52736e70fc91ec9d760721d6f4fd2">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth ) <span class="keyword">const<\/span>;$/;"	a
l01118	docs/tinyxml_8h-source.html	/^<a name="l01118"><\/a>01118 $/;"	a
l01119	docs/tinyxml_8h-source.html	/^<a name="l01119"><\/a>01119     <span class="comment">\/*  Attribtue parsing starts: next char past '&lt;'<\/span>$/;"	a
l01120	docs/tinyxml_8h-source.html	/^<a name="l01120"><\/a>01120 <span class="comment">                         returns: next char past '&gt;'<\/span>$/;"	a
l01121	docs/tinyxml_8h-source.html	/^<a name="l01121"><\/a>01121 <span class="comment">    *\/<\/span>$/;"	a
l01122	docs/tinyxml_8h-source.html	/^<a name="l01122"><\/a>01122     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l01123	docs/tinyxml_8h-source.html	/^<a name="l01123"><\/a>01123 $/;"	a
l01124	docs/tinyxml_8h-source.html	/^<a name="l01124"><\/a><a class="code" href="classTiXmlElement.html#c5b8d0e25fa23fd9acbb6d146082901c">01124<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>*     <a class="code" href="classTiXmlElement.html#c5b8d0e25fa23fd9acbb6d146082901c">ToElement<\/a>()<span class="keyword">     const <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01125	docs/tinyxml_8h-source.html	/^<a name="l01125"><\/a><a class="code" href="classTiXmlElement.html#9def86337ea7a755eb41cac980f60c7a">01125<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>*           <a class="code" href="classTiXmlElement.html#c5b8d0e25fa23fd9acbb6d146082901c">ToElement<\/a>()           { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01126	docs/tinyxml_8h-source.html	/^<a name="l01126"><\/a>01126 $/;"	a
l01129	docs/tinyxml_8h-source.html	/^<a name="l01129"><\/a>01129     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlElement.html#71a81b2afb0d42be1543d1c404dee6f5">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>* visitor ) <span class="keyword">const<\/span>;$/;"	a
l01130	docs/tinyxml_8h-source.html	/^<a name="l01130"><\/a>01130 $/;"	a
l01131	docs/tinyxml_8h-source.html	/^<a name="l01131"><\/a>01131 <span class="keyword">protected<\/span>:$/;"	a
l01132	docs/tinyxml_8h-source.html	/^<a name="l01132"><\/a>01132 $/;"	a
l01133	docs/tinyxml_8h-source.html	/^<a name="l01133"><\/a>01133     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01134	docs/tinyxml_8h-source.html	/^<a name="l01134"><\/a>01134     <span class="keywordtype">void<\/span> ClearThis();   <span class="comment">\/\/ like clear, but initializes 'this' object as well<\/span>$/;"	a
l01135	docs/tinyxml_8h-source.html	/^<a name="l01135"><\/a>01135 $/;"	a
l01136	docs/tinyxml_8h-source.html	/^<a name="l01136"><\/a>01136     <span class="comment">\/\/ Used to be public [internal use]<\/span>$/;"	a
l01137	docs/tinyxml_8h-source.html	/^<a name="l01137"><\/a>01137 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01138	docs/tinyxml_8h-source.html	/^<a name="l01138"><\/a>01138 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01139	docs/tinyxml_8h-source.html	/^<a name="l01139"><\/a>01139 <span class="preprocessor">    #endif<\/span>$/;"	a
l01140	docs/tinyxml_8h-source.html	/^<a name="l01140"><\/a>01140 <span class="preprocessor"><\/span>    <span class="comment">\/*  [internal use]<\/span>$/;"	a
l01141	docs/tinyxml_8h-source.html	/^<a name="l01141"><\/a>01141 <span class="comment">        Reads the "value" of the element -- another element, or text.<\/span>$/;"	a
l01142	docs/tinyxml_8h-source.html	/^<a name="l01142"><\/a>01142 <span class="comment">        This should terminate with the current end tag.<\/span>$/;"	a
l01143	docs/tinyxml_8h-source.html	/^<a name="l01143"><\/a>01143 <span class="comment">    *\/<\/span>$/;"	a
l01144	docs/tinyxml_8h-source.html	/^<a name="l01144"><\/a>01144     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadValue( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	a
l01145	docs/tinyxml_8h-source.html	/^<a name="l01145"><\/a>01145 $/;"	a
l01146	docs/tinyxml_8h-source.html	/^<a name="l01146"><\/a>01146 <span class="keyword">private<\/span>:$/;"	a
l01147	docs/tinyxml_8h-source.html	/^<a name="l01147"><\/a>01147 $/;"	a
l01148	docs/tinyxml_8h-source.html	/^<a name="l01148"><\/a>01148     TiXmlAttributeSet attributeSet;$/;"	a
l01149	docs/tinyxml_8h-source.html	/^<a name="l01149"><\/a>01149 };$/;"	a
l01150	docs/tinyxml_8h-source.html	/^<a name="l01150"><\/a>01150 $/;"	a
l01151	docs/tinyxml_8h-source.html	/^<a name="l01151"><\/a>01151 $/;"	a
l01154	docs/tinyxml_8h-source.html	/^<a name="l01154"><\/a><a class="code" href="classTiXmlComment.html">01154<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlComment.html">TiXmlComment<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>$/;"	a
l01155	docs/tinyxml_8h-source.html	/^<a name="l01155"><\/a>01155 {$/;"	a
l01156	docs/tinyxml_8h-source.html	/^<a name="l01156"><\/a>01156 <span class="keyword">public<\/span>:$/;"	a
l01158	docs/tinyxml_8h-source.html	/^<a name="l01158"><\/a><a class="code" href="classTiXmlComment.html#aa3252031d3e8bd3a2bf51a1c61201b7">01158<\/a>     <a class="code" href="classTiXmlComment.html#aa3252031d3e8bd3a2bf51a1c61201b7">TiXmlComment<\/a>() : <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>::COMMENT ) {}$/;"	a
l01160	docs/tinyxml_8h-source.html	/^<a name="l01160"><\/a><a class="code" href="classTiXmlComment.html#37e7802ef17bc03ebe5ae79bf0713d47">01160<\/a>     <a class="code" href="classTiXmlComment.html#aa3252031d3e8bd3a2bf51a1c61201b7">TiXmlComment<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _value ) : <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>::COMMENT ) {$/;"	a
l01161	docs/tinyxml_8h-source.html	/^<a name="l01161"><\/a>01161         <a class="code" href="classTiXmlNode.html#2a38329ca5d3f28f98ce932b8299ae90">SetValue<\/a>( _value );$/;"	a
l01162	docs/tinyxml_8h-source.html	/^<a name="l01162"><\/a>01162     }$/;"	a
l01163	docs/tinyxml_8h-source.html	/^<a name="l01163"><\/a>01163     <a class="code" href="classTiXmlComment.html#aa3252031d3e8bd3a2bf51a1c61201b7">TiXmlComment<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>&amp; );$/;"	a
l01164	docs/tinyxml_8h-source.html	/^<a name="l01164"><\/a>01164     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>&amp; base );$/;"	a
l01165	docs/tinyxml_8h-source.html	/^<a name="l01165"><\/a>01165 $/;"	a
l01166	docs/tinyxml_8h-source.html	/^<a name="l01166"><\/a>01166     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>() {}$/;"	a
l01167	docs/tinyxml_8h-source.html	/^<a name="l01167"><\/a>01167 $/;"	a
l01169	docs/tinyxml_8h-source.html	/^<a name="l01169"><\/a>01169     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlComment.html#0d6662bdc52488b9e12b3c7a0453d028">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01170	docs/tinyxml_8h-source.html	/^<a name="l01170"><\/a>01170     <span class="comment">\/\/ Write this Comment to a FILE stream.<\/span>$/;"	a
l01171	docs/tinyxml_8h-source.html	/^<a name="l01171"><\/a>01171     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlComment.html#6b316527aaa8da0370cd68c22a5a0f5f">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth ) <span class="keyword">const<\/span>;$/;"	a
l01172	docs/tinyxml_8h-source.html	/^<a name="l01172"><\/a>01172 $/;"	a
l01173	docs/tinyxml_8h-source.html	/^<a name="l01173"><\/a>01173     <span class="comment">\/*  Attribtue parsing starts: at the ! of the !--<\/span>$/;"	a
l01174	docs/tinyxml_8h-source.html	/^<a name="l01174"><\/a>01174 <span class="comment">                         returns: next char past '&gt;'<\/span>$/;"	a
l01175	docs/tinyxml_8h-source.html	/^<a name="l01175"><\/a>01175 <span class="comment">    *\/<\/span>$/;"	a
l01176	docs/tinyxml_8h-source.html	/^<a name="l01176"><\/a>01176     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l01177	docs/tinyxml_8h-source.html	/^<a name="l01177"><\/a>01177 $/;"	a
l01178	docs/tinyxml_8h-source.html	/^<a name="l01178"><\/a><a class="code" href="classTiXmlComment.html#00fb4215c20a2399ea05ac9b9e7e68a0">01178<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>*  <a class="code" href="classTiXmlComment.html#00fb4215c20a2399ea05ac9b9e7e68a0">ToComment<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01179	docs/tinyxml_8h-source.html	/^<a name="l01179"><\/a><a class="code" href="classTiXmlComment.html#cc7c7e07e13c23f17797d642981511df">01179<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>*  <a class="code" href="classTiXmlComment.html#00fb4215c20a2399ea05ac9b9e7e68a0">ToComment<\/a>() { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01180	docs/tinyxml_8h-source.html	/^<a name="l01180"><\/a>01180 $/;"	a
l01183	docs/tinyxml_8h-source.html	/^<a name="l01183"><\/a>01183     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlComment.html#f3ac1b99fbbe9ea4fb6e14146156e43e">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>* visitor ) <span class="keyword">const<\/span>;$/;"	a
l01184	docs/tinyxml_8h-source.html	/^<a name="l01184"><\/a>01184 $/;"	a
l01185	docs/tinyxml_8h-source.html	/^<a name="l01185"><\/a>01185 <span class="keyword">protected<\/span>:$/;"	a
l01186	docs/tinyxml_8h-source.html	/^<a name="l01186"><\/a>01186     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01187	docs/tinyxml_8h-source.html	/^<a name="l01187"><\/a>01187 $/;"	a
l01188	docs/tinyxml_8h-source.html	/^<a name="l01188"><\/a>01188     <span class="comment">\/\/ used to be public<\/span>$/;"	a
l01189	docs/tinyxml_8h-source.html	/^<a name="l01189"><\/a>01189 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01190	docs/tinyxml_8h-source.html	/^<a name="l01190"><\/a>01190 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01191	docs/tinyxml_8h-source.html	/^<a name="l01191"><\/a>01191 <span class="preprocessor">    #endif<\/span>$/;"	a
l01192	docs/tinyxml_8h-source.html	/^<a name="l01192"><\/a>01192 <span class="preprocessor"><\/span><span class="comment">\/\/  virtual void StreamOut( TIXML_OSTREAM * out ) const;<\/span>$/;"	a
l01193	docs/tinyxml_8h-source.html	/^<a name="l01193"><\/a>01193 $/;"	a
l01194	docs/tinyxml_8h-source.html	/^<a name="l01194"><\/a>01194 <span class="keyword">private<\/span>:$/;"	a
l01195	docs/tinyxml_8h-source.html	/^<a name="l01195"><\/a>01195 $/;"	a
l01196	docs/tinyxml_8h-source.html	/^<a name="l01196"><\/a>01196 };$/;"	a
l01197	docs/tinyxml_8h-source.html	/^<a name="l01197"><\/a>01197 $/;"	a
l01198	docs/tinyxml_8h-source.html	/^<a name="l01198"><\/a>01198 $/;"	a
l01204	docs/tinyxml_8h-source.html	/^<a name="l01204"><\/a><a class="code" href="classTiXmlText.html">01204<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlText.html">TiXmlText<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>$/;"	a
l01205	docs/tinyxml_8h-source.html	/^<a name="l01205"><\/a>01205 {$/;"	a
l01206	docs/tinyxml_8h-source.html	/^<a name="l01206"><\/a>01206     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>;$/;"	a
l01207	docs/tinyxml_8h-source.html	/^<a name="l01207"><\/a>01207 <span class="keyword">public<\/span>:$/;"	a
l01212	docs/tinyxml_8h-source.html	/^<a name="l01212"><\/a><a class="code" href="classTiXmlText.html#f659e77c6b87d684827f35a8f4895960">01212<\/a>     <a class="code" href="classTiXmlText.html#f659e77c6b87d684827f35a8f4895960">TiXmlText<\/a> (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * initValue ) : <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a> (<a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>::TEXT)$/;"	a
l01213	docs/tinyxml_8h-source.html	/^<a name="l01213"><\/a>01213     {$/;"	a
l01214	docs/tinyxml_8h-source.html	/^<a name="l01214"><\/a>01214         <a class="code" href="classTiXmlNode.html#2a38329ca5d3f28f98ce932b8299ae90">SetValue<\/a>( initValue );$/;"	a
l01215	docs/tinyxml_8h-source.html	/^<a name="l01215"><\/a>01215         cdata = <span class="keyword">false<\/span>;$/;"	a
l01216	docs/tinyxml_8h-source.html	/^<a name="l01216"><\/a>01216     }$/;"	a
l01217	docs/tinyxml_8h-source.html	/^<a name="l01217"><\/a>01217     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlText.html">TiXmlText<\/a>() {}$/;"	a
l01218	docs/tinyxml_8h-source.html	/^<a name="l01218"><\/a>01218 $/;"	a
l01219	docs/tinyxml_8h-source.html	/^<a name="l01219"><\/a>01219 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01221	docs/tinyxml_8h-source.html	/^<a name="l01221"><\/a><a class="code" href="classTiXmlText.html#439792f6183a3d3fb6f2bc2b16fa5691">01221<\/a> <span class="preprocessor">    TiXmlText( const std::string&amp; initValue ) : TiXmlNode (TiXmlNode::TEXT)<\/span>$/;"	a
l01222	docs/tinyxml_8h-source.html	/^<a name="l01222"><\/a>01222 <span class="preprocessor"><\/span>    {$/;"	a
l01223	docs/tinyxml_8h-source.html	/^<a name="l01223"><\/a>01223         <a class="code" href="classTiXmlNode.html#2a38329ca5d3f28f98ce932b8299ae90">SetValue<\/a>( initValue );$/;"	a
l01224	docs/tinyxml_8h-source.html	/^<a name="l01224"><\/a>01224         cdata = <span class="keyword">false<\/span>;$/;"	a
l01225	docs/tinyxml_8h-source.html	/^<a name="l01225"><\/a>01225     }$/;"	a
l01226	docs/tinyxml_8h-source.html	/^<a name="l01226"><\/a>01226 <span class="preprocessor">    #endif<\/span>$/;"	a
l01227	docs/tinyxml_8h-source.html	/^<a name="l01227"><\/a>01227 <span class="preprocessor"><\/span>$/;"	a
l01228	docs/tinyxml_8h-source.html	/^<a name="l01228"><\/a>01228     <a class="code" href="classTiXmlText.html#f659e77c6b87d684827f35a8f4895960">TiXmlText<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html">TiXmlText<\/a>&amp; copy ) : <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>::TEXT )   { copy.<a class="code" href="classTiXmlText.html#dcec7d9b6fccfc5777452bb97e6031c1">CopyTo<\/a>( <span class="keyword">this<\/span> ); }$/;"	a
l01229	docs/tinyxml_8h-source.html	/^<a name="l01229"><\/a>01229     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html">TiXmlText<\/a>&amp; base )                             { base.<a class="code" href="classTiXmlText.html#dcec7d9b6fccfc5777452bb97e6031c1">CopyTo<\/a>( <span class="keyword">this<\/span> ); }$/;"	a
l01230	docs/tinyxml_8h-source.html	/^<a name="l01230"><\/a>01230 $/;"	a
l01231	docs/tinyxml_8h-source.html	/^<a name="l01231"><\/a>01231     <span class="comment">\/\/ Write this text object to a FILE stream.<\/span>$/;"	a
l01232	docs/tinyxml_8h-source.html	/^<a name="l01232"><\/a>01232     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlText.html#0cafbf6f236c7f02d12b2bffc2b7976b">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth ) <span class="keyword">const<\/span>;$/;"	a
l01233	docs/tinyxml_8h-source.html	/^<a name="l01233"><\/a>01233 $/;"	a
l01235	docs/tinyxml_8h-source.html	/^<a name="l01235"><\/a><a class="code" href="classTiXmlText.html#d1a6a6b83fa2271022dd97c072a2b586">01235<\/a>     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlText.html#d1a6a6b83fa2271022dd97c072a2b586">CDATA<\/a>()<span class="keyword"> const              <\/span>{ <span class="keywordflow">return<\/span> cdata; }$/;"	a
l01237	docs/tinyxml_8h-source.html	/^<a name="l01237"><\/a><a class="code" href="classTiXmlText.html#cb17ff7c5d09b2c839393445a3de5ea9">01237<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlText.html#cb17ff7c5d09b2c839393445a3de5ea9">SetCDATA<\/a>( <span class="keywordtype">bool<\/span> _cdata )    { cdata = _cdata; }$/;"	a
l01238	docs/tinyxml_8h-source.html	/^<a name="l01238"><\/a>01238 $/;"	a
l01239	docs/tinyxml_8h-source.html	/^<a name="l01239"><\/a>01239     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l01240	docs/tinyxml_8h-source.html	/^<a name="l01240"><\/a>01240 $/;"	a
l01241	docs/tinyxml_8h-source.html	/^<a name="l01241"><\/a><a class="code" href="classTiXmlText.html#895bf34ffad17f7439ab2a52b9651648">01241<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html">TiXmlText<\/a>* <a class="code" href="classTiXmlText.html#895bf34ffad17f7439ab2a52b9651648">ToText<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01242	docs/tinyxml_8h-source.html	/^<a name="l01242"><\/a><a class="code" href="classTiXmlText.html#e7c3a8fd3e4dbf6c0c4363a943d72f5b">01242<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlText.html">TiXmlText<\/a>*       <a class="code" href="classTiXmlText.html#895bf34ffad17f7439ab2a52b9651648">ToText<\/a>()       { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01243	docs/tinyxml_8h-source.html	/^<a name="l01243"><\/a>01243 $/;"	a
l01246	docs/tinyxml_8h-source.html	/^<a name="l01246"><\/a>01246     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlText.html#8483d4415ce9de6c4fa8f63d067d5de6">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>* content ) <span class="keyword">const<\/span>;$/;"	a
l01247	docs/tinyxml_8h-source.html	/^<a name="l01247"><\/a>01247 $/;"	a
l01248	docs/tinyxml_8h-source.html	/^<a name="l01248"><\/a>01248 <span class="keyword">protected<\/span> :$/;"	a
l01250	docs/tinyxml_8h-source.html	/^<a name="l01250"><\/a>01250     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlText.html#0c411e93a27537369479d034cc82da3b">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01251	docs/tinyxml_8h-source.html	/^<a name="l01251"><\/a>01251     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlText.html">TiXmlText<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01252	docs/tinyxml_8h-source.html	/^<a name="l01252"><\/a>01252 $/;"	a
l01253	docs/tinyxml_8h-source.html	/^<a name="l01253"><\/a>01253     <span class="keywordtype">bool<\/span> Blank() <span class="keyword">const<\/span>; <span class="comment">\/\/ returns true if all white space and new lines<\/span>$/;"	a
l01254	docs/tinyxml_8h-source.html	/^<a name="l01254"><\/a>01254     <span class="comment">\/\/ [internal use]<\/span>$/;"	a
l01255	docs/tinyxml_8h-source.html	/^<a name="l01255"><\/a>01255 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01256	docs/tinyxml_8h-source.html	/^<a name="l01256"><\/a>01256 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01257	docs/tinyxml_8h-source.html	/^<a name="l01257"><\/a>01257 <span class="preprocessor">    #endif<\/span>$/;"	a
l01258	docs/tinyxml_8h-source.html	/^<a name="l01258"><\/a>01258 <span class="preprocessor"><\/span>$/;"	a
l01259	docs/tinyxml_8h-source.html	/^<a name="l01259"><\/a>01259 <span class="keyword">private<\/span>:$/;"	a
l01260	docs/tinyxml_8h-source.html	/^<a name="l01260"><\/a>01260     <span class="keywordtype">bool<\/span> cdata;         <span class="comment">\/\/ true if this should be input and output as a CDATA style text element<\/span>$/;"	a
l01261	docs/tinyxml_8h-source.html	/^<a name="l01261"><\/a>01261 };$/;"	a
l01262	docs/tinyxml_8h-source.html	/^<a name="l01262"><\/a>01262 $/;"	a
l01263	docs/tinyxml_8h-source.html	/^<a name="l01263"><\/a>01263 $/;"	a
l01277	docs/tinyxml_8h-source.html	/^<a name="l01277"><\/a><a class="code" href="classTiXmlDeclaration.html">01277<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>$/;"	a
l01278	docs/tinyxml_8h-source.html	/^<a name="l01278"><\/a>01278 {$/;"	a
l01279	docs/tinyxml_8h-source.html	/^<a name="l01279"><\/a>01279 <span class="keyword">public<\/span>:$/;"	a
l01281	docs/tinyxml_8h-source.html	/^<a name="l01281"><\/a><a class="code" href="classTiXmlDeclaration.html#a0484d059bea0ea1acb47c9094382d79">01281<\/a>     <a class="code" href="classTiXmlDeclaration.html#a0484d059bea0ea1acb47c9094382d79">TiXmlDeclaration<\/a>()   : <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>::DECLARATION ) {}$/;"	a
l01282	docs/tinyxml_8h-source.html	/^<a name="l01282"><\/a>01282 $/;"	a
l01283	docs/tinyxml_8h-source.html	/^<a name="l01283"><\/a>01283 <span class="preprocessor">#ifdef TIXML_USE_STL<\/span>$/;"	a
l01285	docs/tinyxml_8h-source.html	/^<a name="l01285"><\/a>01285 <span class="preprocessor">    TiXmlDeclaration(   const std::string&amp; _version,<\/span>$/;"	a
l01286	docs/tinyxml_8h-source.html	/^<a name="l01286"><\/a>01286 <span class="preprocessor"><\/span>                        <span class="keyword">const<\/span> std::string&amp; _encoding,$/;"	a
l01287	docs/tinyxml_8h-source.html	/^<a name="l01287"><\/a>01287                         <span class="keyword">const<\/span> std::string&amp; _standalone );$/;"	a
l01288	docs/tinyxml_8h-source.html	/^<a name="l01288"><\/a>01288 <span class="preprocessor">#endif<\/span>$/;"	a
l01289	docs/tinyxml_8h-source.html	/^<a name="l01289"><\/a>01289 <span class="preprocessor"><\/span>$/;"	a
l01291	docs/tinyxml_8h-source.html	/^<a name="l01291"><\/a>01291     <a class="code" href="classTiXmlDeclaration.html#a0484d059bea0ea1acb47c9094382d79">TiXmlDeclaration<\/a>(   <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _version,$/;"	a
l01292	docs/tinyxml_8h-source.html	/^<a name="l01292"><\/a>01292                         <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _encoding,$/;"	a
l01293	docs/tinyxml_8h-source.html	/^<a name="l01293"><\/a>01293                         <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _standalone );$/;"	a
l01294	docs/tinyxml_8h-source.html	/^<a name="l01294"><\/a>01294 $/;"	a
l01295	docs/tinyxml_8h-source.html	/^<a name="l01295"><\/a>01295     <a class="code" href="classTiXmlDeclaration.html#a0484d059bea0ea1acb47c9094382d79">TiXmlDeclaration<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>&amp; copy );$/;"	a
l01296	docs/tinyxml_8h-source.html	/^<a name="l01296"><\/a>01296     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>&amp; copy );$/;"	a
l01297	docs/tinyxml_8h-source.html	/^<a name="l01297"><\/a>01297 $/;"	a
l01298	docs/tinyxml_8h-source.html	/^<a name="l01298"><\/a>01298     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>() {}$/;"	a
l01299	docs/tinyxml_8h-source.html	/^<a name="l01299"><\/a>01299 $/;"	a
l01301	docs/tinyxml_8h-source.html	/^<a name="l01301"><\/a><a class="code" href="classTiXmlDeclaration.html#02ee557b1a4545c3219ed377c103ec76">01301<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *<a class="code" href="classTiXmlDeclaration.html#02ee557b1a4545c3219ed377c103ec76">Version<\/a>()<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> version.c_str (); }$/;"	a
l01303	docs/tinyxml_8h-source.html	/^<a name="l01303"><\/a><a class="code" href="classTiXmlDeclaration.html#5d974231f9e9a2f0542f15f3a46cdb76">01303<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *<a class="code" href="classTiXmlDeclaration.html#5d974231f9e9a2f0542f15f3a46cdb76">Encoding<\/a>()<span class="keyword"> const        <\/span>{ <span class="keywordflow">return<\/span> encoding.c_str (); }$/;"	a
l01305	docs/tinyxml_8h-source.html	/^<a name="l01305"><\/a><a class="code" href="classTiXmlDeclaration.html#9ff06afc033d7ef730ec7c6825b97ad9">01305<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *<a class="code" href="classTiXmlDeclaration.html#9ff06afc033d7ef730ec7c6825b97ad9">Standalone<\/a>()<span class="keyword"> const      <\/span>{ <span class="keywordflow">return<\/span> standalone.c_str (); }$/;"	a
l01306	docs/tinyxml_8h-source.html	/^<a name="l01306"><\/a>01306 $/;"	a
l01308	docs/tinyxml_8h-source.html	/^<a name="l01308"><\/a>01308     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlDeclaration.html#7cf459186040141cda7a180a6585ce2e">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01309	docs/tinyxml_8h-source.html	/^<a name="l01309"><\/a>01309     <span class="comment">\/\/ Print this declaration to a FILE stream.<\/span>$/;"	a
l01310	docs/tinyxml_8h-source.html	/^<a name="l01310"><\/a>01310     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> Print( FILE* cfile, <span class="keywordtype">int<\/span> depth, TIXML_STRING* str ) <span class="keyword">const<\/span>;$/;"	a
l01311	docs/tinyxml_8h-source.html	/^<a name="l01311"><\/a><a class="code" href="classTiXmlDeclaration.html#bf6303db4bd05b5be554036817ff1cb4">01311<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> Print( FILE* cfile, <span class="keywordtype">int<\/span> depth )<span class="keyword"> const <\/span>{$/;"	a
l01312	docs/tinyxml_8h-source.html	/^<a name="l01312"><\/a>01312         Print( cfile, depth, 0 );$/;"	a
l01313	docs/tinyxml_8h-source.html	/^<a name="l01313"><\/a>01313     }$/;"	a
l01314	docs/tinyxml_8h-source.html	/^<a name="l01314"><\/a>01314 $/;"	a
l01315	docs/tinyxml_8h-source.html	/^<a name="l01315"><\/a>01315     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l01316	docs/tinyxml_8h-source.html	/^<a name="l01316"><\/a>01316 $/;"	a
l01317	docs/tinyxml_8h-source.html	/^<a name="l01317"><\/a><a class="code" href="classTiXmlDeclaration.html#1e085d3fefd1dbf5ccdbff729931a967">01317<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>* <a class="code" href="classTiXmlDeclaration.html#1e085d3fefd1dbf5ccdbff729931a967">ToDeclaration<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01318	docs/tinyxml_8h-source.html	/^<a name="l01318"><\/a><a class="code" href="classTiXmlDeclaration.html#6bd3d1daddcaeb9543c24bfd090969ce">01318<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>*       <a class="code" href="classTiXmlDeclaration.html#1e085d3fefd1dbf5ccdbff729931a967">ToDeclaration<\/a>()       { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01319	docs/tinyxml_8h-source.html	/^<a name="l01319"><\/a>01319 $/;"	a
l01322	docs/tinyxml_8h-source.html	/^<a name="l01322"><\/a>01322     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDeclaration.html#22315a535983b86535cdba3458669e3e">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>* visitor ) <span class="keyword">const<\/span>;$/;"	a
l01323	docs/tinyxml_8h-source.html	/^<a name="l01323"><\/a>01323 $/;"	a
l01324	docs/tinyxml_8h-source.html	/^<a name="l01324"><\/a>01324 <span class="keyword">protected<\/span>:$/;"	a
l01325	docs/tinyxml_8h-source.html	/^<a name="l01325"><\/a>01325     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01326	docs/tinyxml_8h-source.html	/^<a name="l01326"><\/a>01326     <span class="comment">\/\/ used to be public<\/span>$/;"	a
l01327	docs/tinyxml_8h-source.html	/^<a name="l01327"><\/a>01327 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01328	docs/tinyxml_8h-source.html	/^<a name="l01328"><\/a>01328 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01329	docs/tinyxml_8h-source.html	/^<a name="l01329"><\/a>01329 <span class="preprocessor">    #endif<\/span>$/;"	a
l01330	docs/tinyxml_8h-source.html	/^<a name="l01330"><\/a>01330 <span class="preprocessor"><\/span>$/;"	a
l01331	docs/tinyxml_8h-source.html	/^<a name="l01331"><\/a>01331 <span class="keyword">private<\/span>:$/;"	a
l01332	docs/tinyxml_8h-source.html	/^<a name="l01332"><\/a>01332 $/;"	a
l01333	docs/tinyxml_8h-source.html	/^<a name="l01333"><\/a>01333     TIXML_STRING version;$/;"	a
l01334	docs/tinyxml_8h-source.html	/^<a name="l01334"><\/a>01334     TIXML_STRING encoding;$/;"	a
l01335	docs/tinyxml_8h-source.html	/^<a name="l01335"><\/a>01335     TIXML_STRING standalone;$/;"	a
l01336	docs/tinyxml_8h-source.html	/^<a name="l01336"><\/a>01336 };$/;"	a
l01337	docs/tinyxml_8h-source.html	/^<a name="l01337"><\/a>01337 $/;"	a
l01338	docs/tinyxml_8h-source.html	/^<a name="l01338"><\/a>01338 $/;"	a
l01346	docs/tinyxml_8h-source.html	/^<a name="l01346"><\/a><a class="code" href="classTiXmlUnknown.html">01346<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>$/;"	a
l01347	docs/tinyxml_8h-source.html	/^<a name="l01347"><\/a>01347 {$/;"	a
l01348	docs/tinyxml_8h-source.html	/^<a name="l01348"><\/a>01348 <span class="keyword">public<\/span>:$/;"	a
l01349	docs/tinyxml_8h-source.html	/^<a name="l01349"><\/a>01349     <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>() : <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>( TiXmlNode::UNKNOWN )    {}$/;"	a
l01350	docs/tinyxml_8h-source.html	/^<a name="l01350"><\/a>01350     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>() {}$/;"	a
l01351	docs/tinyxml_8h-source.html	/^<a name="l01351"><\/a>01351 $/;"	a
l01352	docs/tinyxml_8h-source.html	/^<a name="l01352"><\/a>01352     <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>&amp; copy ) : <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>( TiXmlNode::UNKNOWN )      { copy.<a class="code" href="classTiXmlUnknown.html#08ca7b225a2bcb604d3c72e199d33408">CopyTo<\/a>( <span class="keyword">this<\/span> ); }$/;"	a
l01353	docs/tinyxml_8h-source.html	/^<a name="l01353"><\/a>01353     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>&amp; copy )                                      { copy.<a class="code" href="classTiXmlUnknown.html#08ca7b225a2bcb604d3c72e199d33408">CopyTo<\/a>( <span class="keyword">this<\/span> ); }$/;"	a
l01354	docs/tinyxml_8h-source.html	/^<a name="l01354"><\/a>01354 $/;"	a
l01356	docs/tinyxml_8h-source.html	/^<a name="l01356"><\/a>01356     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlUnknown.html#0960bb7428b3f341da46244229604d73">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01357	docs/tinyxml_8h-source.html	/^<a name="l01357"><\/a>01357     <span class="comment">\/\/ Print this Unknown to a FILE stream.<\/span>$/;"	a
l01358	docs/tinyxml_8h-source.html	/^<a name="l01358"><\/a>01358     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlUnknown.html#31ba089a40fb5a1869750fce09b0bacb">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth ) <span class="keyword">const<\/span>;$/;"	a
l01359	docs/tinyxml_8h-source.html	/^<a name="l01359"><\/a>01359 $/;"	a
l01360	docs/tinyxml_8h-source.html	/^<a name="l01360"><\/a>01360     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l01361	docs/tinyxml_8h-source.html	/^<a name="l01361"><\/a>01361 $/;"	a
l01362	docs/tinyxml_8h-source.html	/^<a name="l01362"><\/a><a class="code" href="classTiXmlUnknown.html#b0313e5fe77987d746ac1a97a254419d">01362<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>*     <a class="code" href="classTiXmlUnknown.html#b0313e5fe77987d746ac1a97a254419d">ToUnknown<\/a>()<span class="keyword">     const <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01363	docs/tinyxml_8h-source.html	/^<a name="l01363"><\/a><a class="code" href="classTiXmlUnknown.html#67c9fd22940e8c47f706a72cdd2e332c">01363<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>*           <a class="code" href="classTiXmlUnknown.html#b0313e5fe77987d746ac1a97a254419d">ToUnknown<\/a>()     { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01364	docs/tinyxml_8h-source.html	/^<a name="l01364"><\/a>01364 $/;"	a
l01367	docs/tinyxml_8h-source.html	/^<a name="l01367"><\/a>01367     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlUnknown.html#d7122e5135581b3c832a1a3217760a93">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>* content ) <span class="keyword">const<\/span>;$/;"	a
l01368	docs/tinyxml_8h-source.html	/^<a name="l01368"><\/a>01368 $/;"	a
l01369	docs/tinyxml_8h-source.html	/^<a name="l01369"><\/a>01369 <span class="keyword">protected<\/span>:$/;"	a
l01370	docs/tinyxml_8h-source.html	/^<a name="l01370"><\/a>01370     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01371	docs/tinyxml_8h-source.html	/^<a name="l01371"><\/a>01371 $/;"	a
l01372	docs/tinyxml_8h-source.html	/^<a name="l01372"><\/a>01372 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01373	docs/tinyxml_8h-source.html	/^<a name="l01373"><\/a>01373 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01374	docs/tinyxml_8h-source.html	/^<a name="l01374"><\/a>01374 <span class="preprocessor">    #endif<\/span>$/;"	a
l01375	docs/tinyxml_8h-source.html	/^<a name="l01375"><\/a>01375 <span class="preprocessor"><\/span>$/;"	a
l01376	docs/tinyxml_8h-source.html	/^<a name="l01376"><\/a>01376 <span class="keyword">private<\/span>:$/;"	a
l01377	docs/tinyxml_8h-source.html	/^<a name="l01377"><\/a>01377 $/;"	a
l01378	docs/tinyxml_8h-source.html	/^<a name="l01378"><\/a>01378 };$/;"	a
l01379	docs/tinyxml_8h-source.html	/^<a name="l01379"><\/a>01379 $/;"	a
l01380	docs/tinyxml_8h-source.html	/^<a name="l01380"><\/a>01380 $/;"	a
l01385	docs/tinyxml_8h-source.html	/^<a name="l01385"><\/a><a class="code" href="classTiXmlDocument.html">01385<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>$/;"	a
l01386	docs/tinyxml_8h-source.html	/^<a name="l01386"><\/a>01386 {$/;"	a
l01387	docs/tinyxml_8h-source.html	/^<a name="l01387"><\/a>01387 <span class="keyword">public<\/span>:$/;"	a
l01389	docs/tinyxml_8h-source.html	/^<a name="l01389"><\/a>01389     <a class="code" href="classTiXmlDocument.html#9f5e84335708fde98400230f9f12659c">TiXmlDocument<\/a>();$/;"	a
l01391	docs/tinyxml_8h-source.html	/^<a name="l01391"><\/a>01391     <a class="code" href="classTiXmlDocument.html#9f5e84335708fde98400230f9f12659c">TiXmlDocument<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * documentName );$/;"	a
l01392	docs/tinyxml_8h-source.html	/^<a name="l01392"><\/a>01392 $/;"	a
l01393	docs/tinyxml_8h-source.html	/^<a name="l01393"><\/a>01393 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01395	docs/tinyxml_8h-source.html	/^<a name="l01395"><\/a>01395 <span class="preprocessor">    TiXmlDocument( const std::string&amp; documentName );<\/span>$/;"	a
l01396	docs/tinyxml_8h-source.html	/^<a name="l01396"><\/a>01396 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l01397	docs/tinyxml_8h-source.html	/^<a name="l01397"><\/a>01397 <span class="preprocessor"><\/span>$/;"	a
l01398	docs/tinyxml_8h-source.html	/^<a name="l01398"><\/a>01398     <a class="code" href="classTiXmlDocument.html#9f5e84335708fde98400230f9f12659c">TiXmlDocument<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>&amp; copy );$/;"	a
l01399	docs/tinyxml_8h-source.html	/^<a name="l01399"><\/a>01399     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>&amp; copy );$/;"	a
l01400	docs/tinyxml_8h-source.html	/^<a name="l01400"><\/a>01400 $/;"	a
l01401	docs/tinyxml_8h-source.html	/^<a name="l01401"><\/a>01401     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>() {}$/;"	a
l01402	docs/tinyxml_8h-source.html	/^<a name="l01402"><\/a>01402 $/;"	a
l01407	docs/tinyxml_8h-source.html	/^<a name="l01407"><\/a>01407     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#4c852a889c02cf251117fd1d9fe1845f">LoadFile<\/a>( TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	a
l01409	docs/tinyxml_8h-source.html	/^<a name="l01409"><\/a>01409     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#21c0aeb0d0a720169ad4ac89523ebe93">SaveFile<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01411	docs/tinyxml_8h-source.html	/^<a name="l01411"><\/a>01411     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#4c852a889c02cf251117fd1d9fe1845f">LoadFile<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	a
l01413	docs/tinyxml_8h-source.html	/^<a name="l01413"><\/a>01413     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#21c0aeb0d0a720169ad4ac89523ebe93">SaveFile<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * filename ) <span class="keyword">const<\/span>;$/;"	a
l01419	docs/tinyxml_8h-source.html	/^<a name="l01419"><\/a>01419     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#4c852a889c02cf251117fd1d9fe1845f">LoadFile<\/a>( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	a
l01421	docs/tinyxml_8h-source.html	/^<a name="l01421"><\/a>01421     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#21c0aeb0d0a720169ad4ac89523ebe93">SaveFile<\/a>( FILE* ) <span class="keyword">const<\/span>;$/;"	a
l01422	docs/tinyxml_8h-source.html	/^<a name="l01422"><\/a>01422 $/;"	a
l01423	docs/tinyxml_8h-source.html	/^<a name="l01423"><\/a>01423 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01424	docs/tinyxml_8h-source.html	/^<a name="l01424"><\/a><a class="code" href="classTiXmlDocument.html#18ae6ed34fed7991ebc220862dfac884">01424<\/a> <span class="preprocessor"><\/span>    <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#4c852a889c02cf251117fd1d9fe1845f">LoadFile<\/a>( <span class="keyword">const<\/span> std::string&amp; filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )           $/;"	a
l01425	docs/tinyxml_8h-source.html	/^<a name="l01425"><\/a>01425     {$/;"	a
l01426	docs/tinyxml_8h-source.html	/^<a name="l01426"><\/a>01426 <span class="comment">\/\/      StringToBuffer f( filename );<\/span>$/;"	a
l01427	docs/tinyxml_8h-source.html	/^<a name="l01427"><\/a>01427 <span class="comment">\/\/      return ( f.buffer &amp;&amp; LoadFile( f.buffer, encoding ));<\/span>$/;"	a
l01428	docs/tinyxml_8h-source.html	/^<a name="l01428"><\/a>01428         <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlDocument.html#4c852a889c02cf251117fd1d9fe1845f">LoadFile<\/a>( filename.c_str(), encoding );$/;"	a
l01429	docs/tinyxml_8h-source.html	/^<a name="l01429"><\/a>01429     }$/;"	a
l01430	docs/tinyxml_8h-source.html	/^<a name="l01430"><\/a><a class="code" href="classTiXmlDocument.html#3d4fae0463f3f03679ba0b7cf6f2df52">01430<\/a>     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#21c0aeb0d0a720169ad4ac89523ebe93">SaveFile<\/a>( <span class="keyword">const<\/span> std::string&amp; filename ) <span class="keyword">const<\/span>      $/;"	a
l01431	docs/tinyxml_8h-source.html	/^<a name="l01431"><\/a>01431     {$/;"	a
l01432	docs/tinyxml_8h-source.html	/^<a name="l01432"><\/a>01432 <span class="comment">\/\/      StringToBuffer f( filename );<\/span>$/;"	a
l01433	docs/tinyxml_8h-source.html	/^<a name="l01433"><\/a>01433 <span class="comment">\/\/      return ( f.buffer &amp;&amp; SaveFile( f.buffer ));<\/span>$/;"	a
l01434	docs/tinyxml_8h-source.html	/^<a name="l01434"><\/a>01434         <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlDocument.html#21c0aeb0d0a720169ad4ac89523ebe93">SaveFile<\/a>( filename.c_str() );$/;"	a
l01435	docs/tinyxml_8h-source.html	/^<a name="l01435"><\/a>01435     }$/;"	a
l01436	docs/tinyxml_8h-source.html	/^<a name="l01436"><\/a>01436 <span class="preprocessor">    #endif<\/span>$/;"	a
l01437	docs/tinyxml_8h-source.html	/^<a name="l01437"><\/a>01437 <span class="preprocessor"><\/span>$/;"	a
l01442	docs/tinyxml_8h-source.html	/^<a name="l01442"><\/a>01442     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlDocument.html#17ebabe36926ef398e78dec0d0ad0378">Parse<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data = 0, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	a
l01443	docs/tinyxml_8h-source.html	/^<a name="l01443"><\/a>01443 $/;"	a
l01448	docs/tinyxml_8h-source.html	/^<a name="l01448"><\/a><a class="code" href="classTiXmlDocument.html#d09d17927f908f40efb406af2fb873be">01448<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlDocument.html#d09d17927f908f40efb406af2fb873be">RootElement<\/a>()<span class="keyword"> const     <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#f4fb652f6bd79ae0d5ce7d0f7d3c0fba">FirstChildElement<\/a>(); }$/;"	a
l01449	docs/tinyxml_8h-source.html	/^<a name="l01449"><\/a>01449     <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlDocument.html#d09d17927f908f40efb406af2fb873be">RootElement<\/a>()                 { <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#f4fb652f6bd79ae0d5ce7d0f7d3c0fba">FirstChildElement<\/a>(); }$/;"	a
l01450	docs/tinyxml_8h-source.html	/^<a name="l01450"><\/a>01450 $/;"	a
l01456	docs/tinyxml_8h-source.html	/^<a name="l01456"><\/a><a class="code" href="classTiXmlDocument.html#6dfc01a6e5d58e56acd537dfd3bdeb29">01456<\/a>     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#6dfc01a6e5d58e56acd537dfd3bdeb29">Error<\/a>()<span class="keyword"> const                      <\/span>{ <span class="keywordflow">return<\/span> error; }$/;"	a
l01457	docs/tinyxml_8h-source.html	/^<a name="l01457"><\/a>01457 $/;"	a
l01459	docs/tinyxml_8h-source.html	/^<a name="l01459"><\/a><a class="code" href="classTiXmlDocument.html#9d0f689f6e09ea494ea547be8d79c25e">01459<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * <a class="code" href="classTiXmlDocument.html#9d0f689f6e09ea494ea547be8d79c25e">ErrorDesc<\/a>()<span class="keyword"> const  <\/span>{ <span class="keywordflow">return<\/span> errorDesc.c_str (); }$/;"	a
l01460	docs/tinyxml_8h-source.html	/^<a name="l01460"><\/a>01460 $/;"	a
l01464	docs/tinyxml_8h-source.html	/^<a name="l01464"><\/a><a class="code" href="classTiXmlDocument.html#f96fc2f3f9ec6422782bfe916c9e778f">01464<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlDocument.html#f96fc2f3f9ec6422782bfe916c9e778f">ErrorId<\/a>()<span class="keyword">   const               <\/span>{ <span class="keywordflow">return<\/span> errorId; }$/;"	a
l01465	docs/tinyxml_8h-source.html	/^<a name="l01465"><\/a>01465 $/;"	a
l01473	docs/tinyxml_8h-source.html	/^<a name="l01473"><\/a><a class="code" href="classTiXmlDocument.html#f30efc75e804aa2e92fb8be3a8cb676e">01473<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlDocument.html#f30efc75e804aa2e92fb8be3a8cb676e">ErrorRow<\/a>()<span class="keyword"> const    <\/span>{ <span class="keywordflow">return<\/span> errorLocation.row+1; }$/;"	a
l01474	docs/tinyxml_8h-source.html	/^<a name="l01474"><\/a><a class="code" href="classTiXmlDocument.html#a90bc630ee5203c6109ca5fad3323649">01474<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlDocument.html#a90bc630ee5203c6109ca5fad3323649">ErrorCol<\/a>()<span class="keyword"> const    <\/span>{ <span class="keywordflow">return<\/span> errorLocation.col+1; } $/;"	a
l01475	docs/tinyxml_8h-source.html	/^<a name="l01475"><\/a>01475 $/;"	a
l01500	docs/tinyxml_8h-source.html	/^<a name="l01500"><\/a><a class="code" href="classTiXmlDocument.html#51dac56316f89b35bdb7d0d433ba988e">01500<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlDocument.html#51dac56316f89b35bdb7d0d433ba988e">SetTabSize<\/a>( <span class="keywordtype">int<\/span> _tabsize )     { tabsize = _tabsize; }$/;"	a
l01501	docs/tinyxml_8h-source.html	/^<a name="l01501"><\/a>01501 $/;"	a
l01502	docs/tinyxml_8h-source.html	/^<a name="l01502"><\/a>01502     <span class="keywordtype">int<\/span> TabSize()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> tabsize; }$/;"	a
l01503	docs/tinyxml_8h-source.html	/^<a name="l01503"><\/a>01503 $/;"	a
l01507	docs/tinyxml_8h-source.html	/^<a name="l01507"><\/a><a class="code" href="classTiXmlDocument.html#c66b8c28db86363315712a3574e87c35">01507<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlDocument.html#c66b8c28db86363315712a3574e87c35">ClearError<\/a>()                       {   error = <span class="keyword">false<\/span>; $/;"	a
l01508	docs/tinyxml_8h-source.html	/^<a name="l01508"><\/a>01508                                                 errorId = 0; $/;"	a
l01509	docs/tinyxml_8h-source.html	/^<a name="l01509"><\/a>01509                                                 errorDesc = <span class="stringliteral">""<\/span>; $/;"	a
l01510	docs/tinyxml_8h-source.html	/^<a name="l01510"><\/a>01510                                                 errorLocation.row = errorLocation.col = 0; $/;"	a
l01511	docs/tinyxml_8h-source.html	/^<a name="l01511"><\/a>01511                                                 <span class="comment">\/\/errorLocation.last = 0; <\/span>$/;"	a
l01512	docs/tinyxml_8h-source.html	/^<a name="l01512"><\/a>01512                                             }$/;"	a
l01513	docs/tinyxml_8h-source.html	/^<a name="l01513"><\/a>01513 $/;"	a
l01515	docs/tinyxml_8h-source.html	/^<a name="l01515"><\/a><a class="code" href="classTiXmlDocument.html#f08389ec70ee9b2de7f800e206a18510">01515<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlDocument.html#f08389ec70ee9b2de7f800e206a18510">Print<\/a>()<span class="keyword"> const                      <\/span>{ <a class="code" href="classTiXmlDocument.html#f08389ec70ee9b2de7f800e206a18510">Print<\/a>( stdout, 0 ); }$/;"	a
l01516	docs/tinyxml_8h-source.html	/^<a name="l01516"><\/a>01516 $/;"	a
l01517	docs/tinyxml_8h-source.html	/^<a name="l01517"><\/a>01517     <span class="comment">\/* Write the document to a string using formatted printing ("pretty print"). This<\/span>$/;"	a
l01518	docs/tinyxml_8h-source.html	/^<a name="l01518"><\/a>01518 <span class="comment">        will allocate a character array (new char[]) and return it as a pointer. The<\/span>$/;"	a
l01519	docs/tinyxml_8h-source.html	/^<a name="l01519"><\/a>01519 <span class="comment">        calling code pust call delete[] on the return char* to avoid a memory leak.<\/span>$/;"	a
l01520	docs/tinyxml_8h-source.html	/^<a name="l01520"><\/a>01520 <span class="comment">    *\/<\/span>$/;"	a
l01521	docs/tinyxml_8h-source.html	/^<a name="l01521"><\/a>01521     <span class="comment">\/\/char* PrintToMemory() const; <\/span>$/;"	a
l01522	docs/tinyxml_8h-source.html	/^<a name="l01522"><\/a>01522 $/;"	a
l01524	docs/tinyxml_8h-source.html	/^<a name="l01524"><\/a>01524     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlDocument.html#f08389ec70ee9b2de7f800e206a18510">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth = 0 ) <span class="keyword">const<\/span>;$/;"	a
l01525	docs/tinyxml_8h-source.html	/^<a name="l01525"><\/a>01525     <span class="comment">\/\/ [internal use]<\/span>$/;"	a
l01526	docs/tinyxml_8h-source.html	/^<a name="l01526"><\/a>01526     <span class="keywordtype">void<\/span> SetError( <span class="keywordtype">int<\/span> err, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* errorLocation, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	a
l01527	docs/tinyxml_8h-source.html	/^<a name="l01527"><\/a>01527 $/;"	a
l01528	docs/tinyxml_8h-source.html	/^<a name="l01528"><\/a><a class="code" href="classTiXmlDocument.html#1dc977bde3e4fe85a8eb9d88a35ef5a4">01528<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>*    <a class="code" href="classTiXmlDocument.html#1dc977bde3e4fe85a8eb9d88a35ef5a4">ToDocument<\/a>()<span class="keyword">    const <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01529	docs/tinyxml_8h-source.html	/^<a name="l01529"><\/a><a class="code" href="classTiXmlDocument.html#1025d942a1f328fd742d545e37efdd42">01529<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>*          <a class="code" href="classTiXmlDocument.html#1dc977bde3e4fe85a8eb9d88a35ef5a4">ToDocument<\/a>()          { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01530	docs/tinyxml_8h-source.html	/^<a name="l01530"><\/a>01530 $/;"	a
l01533	docs/tinyxml_8h-source.html	/^<a name="l01533"><\/a>01533     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a545aae325d9752ad64120bc4ecf939a">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>* content ) <span class="keyword">const<\/span>;$/;"	a
l01534	docs/tinyxml_8h-source.html	/^<a name="l01534"><\/a>01534 $/;"	a
l01535	docs/tinyxml_8h-source.html	/^<a name="l01535"><\/a>01535 <span class="keyword">protected<\/span> :$/;"	a
l01536	docs/tinyxml_8h-source.html	/^<a name="l01536"><\/a>01536     <span class="comment">\/\/ [internal use]<\/span>$/;"	a
l01537	docs/tinyxml_8h-source.html	/^<a name="l01537"><\/a>01537     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlDocument.html#4968661cab4a1f44a23329c6f8db1907">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01538	docs/tinyxml_8h-source.html	/^<a name="l01538"><\/a>01538 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01539	docs/tinyxml_8h-source.html	/^<a name="l01539"><\/a>01539 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01540	docs/tinyxml_8h-source.html	/^<a name="l01540"><\/a>01540 <span class="preprocessor">    #endif<\/span>$/;"	a
l01541	docs/tinyxml_8h-source.html	/^<a name="l01541"><\/a>01541 <span class="preprocessor"><\/span>$/;"	a
l01542	docs/tinyxml_8h-source.html	/^<a name="l01542"><\/a>01542 <span class="keyword">private<\/span>:$/;"	a
l01543	docs/tinyxml_8h-source.html	/^<a name="l01543"><\/a>01543     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01544	docs/tinyxml_8h-source.html	/^<a name="l01544"><\/a>01544 $/;"	a
l01545	docs/tinyxml_8h-source.html	/^<a name="l01545"><\/a>01545     <span class="keywordtype">bool<\/span> error;$/;"	a
l01546	docs/tinyxml_8h-source.html	/^<a name="l01546"><\/a>01546     <span class="keywordtype">int<\/span>  errorId;$/;"	a
l01547	docs/tinyxml_8h-source.html	/^<a name="l01547"><\/a>01547     TIXML_STRING errorDesc;$/;"	a
l01548	docs/tinyxml_8h-source.html	/^<a name="l01548"><\/a>01548     <span class="keywordtype">int<\/span> tabsize;$/;"	a
l01549	docs/tinyxml_8h-source.html	/^<a name="l01549"><\/a>01549     TiXmlCursor errorLocation;$/;"	a
l01550	docs/tinyxml_8h-source.html	/^<a name="l01550"><\/a>01550     <span class="keywordtype">bool<\/span> useMicrosoftBOM;       <span class="comment">\/\/ the UTF-8 BOM were found when read. Note this, and try to write.<\/span>$/;"	a
l01551	docs/tinyxml_8h-source.html	/^<a name="l01551"><\/a>01551 };$/;"	a
l01552	docs/tinyxml_8h-source.html	/^<a name="l01552"><\/a>01552 $/;"	a
l01553	docs/tinyxml_8h-source.html	/^<a name="l01553"><\/a>01553 $/;"	a
l01634	docs/tinyxml_8h-source.html	/^<a name="l01634"><\/a><a class="code" href="classTiXmlHandle.html">01634<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a>$/;"	a
l01635	docs/tinyxml_8h-source.html	/^<a name="l01635"><\/a>01635 {$/;"	a
l01636	docs/tinyxml_8h-source.html	/^<a name="l01636"><\/a>01636 <span class="keyword">public<\/span>:$/;"	a
l01638	docs/tinyxml_8h-source.html	/^<a name="l01638"><\/a><a class="code" href="classTiXmlHandle.html#ba18fd7bdefb942ecdea4bf4b8e29ec8">01638<\/a>     <a class="code" href="classTiXmlHandle.html#ba18fd7bdefb942ecdea4bf4b8e29ec8">TiXmlHandle<\/a>( <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* _node )                 { this-&gt;node = _node; }$/;"	a
l01640	docs/tinyxml_8h-source.html	/^<a name="l01640"><\/a><a class="code" href="classTiXmlHandle.html#236d7855e1e56ccc7b980630c48c7fd7">01640<\/a>     <a class="code" href="classTiXmlHandle.html#ba18fd7bdefb942ecdea4bf4b8e29ec8">TiXmlHandle<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a>&amp; ref )           { this-&gt;node = ref.<a class="code" href="classTiXmlHandle.html#c5429de14bb78b16288bac5bf33c6858">node<\/a>; }$/;"	a
l01641	docs/tinyxml_8h-source.html	/^<a name="l01641"><\/a>01641     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a>&amp; ref ) { this-&gt;node = ref.<a class="code" href="classTiXmlHandle.html#c5429de14bb78b16288bac5bf33c6858">node<\/a>; <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>; }$/;"	a
l01642	docs/tinyxml_8h-source.html	/^<a name="l01642"><\/a>01642 $/;"	a
l01644	docs/tinyxml_8h-source.html	/^<a name="l01644"><\/a>01644     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#cdb1faaf88a700b40ca2c8d9aee21139">FirstChild<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01646	docs/tinyxml_8h-source.html	/^<a name="l01646"><\/a>01646     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#cdb1faaf88a700b40ca2c8d9aee21139">FirstChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * value ) <span class="keyword">const<\/span>;$/;"	a
l01648	docs/tinyxml_8h-source.html	/^<a name="l01648"><\/a>01648     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#24d1112e995e937e4dddb202d4113d4a">FirstChildElement<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01650	docs/tinyxml_8h-source.html	/^<a name="l01650"><\/a>01650     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#24d1112e995e937e4dddb202d4113d4a">FirstChildElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * value ) <span class="keyword">const<\/span>;$/;"	a
l01651	docs/tinyxml_8h-source.html	/^<a name="l01651"><\/a>01651 $/;"	a
l01655	docs/tinyxml_8h-source.html	/^<a name="l01655"><\/a>01655     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#072492b4be1acdb0db2d03cd8f71ccc4">Child<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* value, <span class="keywordtype">int<\/span> index ) <span class="keyword">const<\/span>;$/;"	a
l01659	docs/tinyxml_8h-source.html	/^<a name="l01659"><\/a>01659     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#072492b4be1acdb0db2d03cd8f71ccc4">Child<\/a>( <span class="keywordtype">int<\/span> index ) <span class="keyword">const<\/span>;$/;"	a
l01664	docs/tinyxml_8h-source.html	/^<a name="l01664"><\/a>01664     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#979a3f850984a176ee884e394c7eed2d">ChildElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* value, <span class="keywordtype">int<\/span> index ) <span class="keyword">const<\/span>;$/;"	a
l01669	docs/tinyxml_8h-source.html	/^<a name="l01669"><\/a>01669     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#979a3f850984a176ee884e394c7eed2d">ChildElement<\/a>( <span class="keywordtype">int<\/span> index ) <span class="keyword">const<\/span>;$/;"	a
l01670	docs/tinyxml_8h-source.html	/^<a name="l01670"><\/a>01670 $/;"	a
l01671	docs/tinyxml_8h-source.html	/^<a name="l01671"><\/a>01671 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01672	docs/tinyxml_8h-source.html	/^<a name="l01672"><\/a>01672 <span class="preprocessor"><\/span>    <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#cdb1faaf88a700b40ca2c8d9aee21139">FirstChild<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const               <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#cdb1faaf88a700b40ca2c8d9aee21139">FirstChild<\/a>( _value.c_str() ); }$/;"	a
l01673	docs/tinyxml_8h-source.html	/^<a name="l01673"><\/a>01673     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#24d1112e995e937e4dddb202d4113d4a">FirstChildElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const        <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#24d1112e995e937e4dddb202d4113d4a">FirstChildElement<\/a>( _value.c_str() ); }$/;"	a
l01674	docs/tinyxml_8h-source.html	/^<a name="l01674"><\/a>01674 $/;"	a
l01675	docs/tinyxml_8h-source.html	/^<a name="l01675"><\/a>01675     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#072492b4be1acdb0db2d03cd8f71ccc4">Child<\/a>( <span class="keyword">const<\/span> std::string&amp; _value, <span class="keywordtype">int<\/span> index )<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#072492b4be1acdb0db2d03cd8f71ccc4">Child<\/a>( _value.c_str(), index ); }$/;"	a
l01676	docs/tinyxml_8h-source.html	/^<a name="l01676"><\/a>01676     <a class="code" href="classTiXmlHandle.html">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#979a3f850984a176ee884e394c7eed2d">ChildElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value, <span class="keywordtype">int<\/span> index )<span class="keyword"> const  <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#979a3f850984a176ee884e394c7eed2d">ChildElement<\/a>( _value.c_str(), index ); }$/;"	a
l01677	docs/tinyxml_8h-source.html	/^<a name="l01677"><\/a>01677 <span class="preprocessor">    #endif<\/span>$/;"	a
l01678	docs/tinyxml_8h-source.html	/^<a name="l01678"><\/a>01678 <span class="preprocessor"><\/span>$/;"	a
l01681	docs/tinyxml_8h-source.html	/^<a name="l01681"><\/a><a class="code" href="classTiXmlHandle.html#f678e5088e83be67baf76f699756f2c3">01681<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlHandle.html#f678e5088e83be67baf76f699756f2c3">ToNode<\/a>()<span class="keyword"> const           <\/span>{ <span class="keywordflow">return<\/span> node; } $/;"	a
l01684	docs/tinyxml_8h-source.html	/^<a name="l01684"><\/a><a class="code" href="classTiXmlHandle.html#bc6e7ed383a5fe1e52b0c0004b457b9e">01684<\/a>     <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlHandle.html#bc6e7ed383a5fe1e52b0c0004b457b9e">ToElement<\/a>()<span class="keyword"> const     <\/span>{ <span class="keywordflow">return<\/span> ( ( node &amp;&amp; node-&gt;<a class="code" href="classTiXmlNode.html#72abed96dc9667ab9e0a2a275301bb1c">ToElement<\/a>() ) ? node-&gt;<a class="code" href="classTiXmlNode.html#72abed96dc9667ab9e0a2a275301bb1c">ToElement<\/a>() : 0 ); }$/;"	a
l01687	docs/tinyxml_8h-source.html	/^<a name="l01687"><\/a><a class="code" href="classTiXmlHandle.html#4ac53a652296203a5b5e13854d923586">01687<\/a>     <a class="code" href="classTiXmlText.html">TiXmlText<\/a>* <a class="code" href="classTiXmlHandle.html#4ac53a652296203a5b5e13854d923586">ToText<\/a>()<span class="keyword"> const           <\/span>{ <span class="keywordflow">return<\/span> ( ( node &amp;&amp; node-&gt;<a class="code" href="classTiXmlNode.html#95a46a52c525992d6b4ee08beb14cd69">ToText<\/a>() ) ? node-&gt;<a class="code" href="classTiXmlNode.html#95a46a52c525992d6b4ee08beb14cd69">ToText<\/a>() : 0 ); }$/;"	a
l01690	docs/tinyxml_8h-source.html	/^<a name="l01690"><\/a><a class="code" href="classTiXmlHandle.html#1381c17507a130767b1e23afc93b3674">01690<\/a>     <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>* <a class="code" href="classTiXmlHandle.html#1381c17507a130767b1e23afc93b3674">ToUnknown<\/a>()<span class="keyword"> const     <\/span>{ <span class="keywordflow">return<\/span> ( ( node &amp;&amp; node-&gt;<a class="code" href="classTiXmlNode.html#fd7205cf31d7a376929f8a36930627a2">ToUnknown<\/a>() ) ? node-&gt;<a class="code" href="classTiXmlNode.html#fd7205cf31d7a376929f8a36930627a2">ToUnknown<\/a>() : 0 ); }$/;"	a
l01691	docs/tinyxml_8h-source.html	/^<a name="l01691"><\/a>01691 $/;"	a
l01695	docs/tinyxml_8h-source.html	/^<a name="l01695"><\/a><a class="code" href="classTiXmlHandle.html#b44b723a8dc9af72838a303c079d0376">01695<\/a>     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* <a class="code" href="classTiXmlHandle.html#b44b723a8dc9af72838a303c079d0376">Node<\/a>()<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#f678e5088e83be67baf76f699756f2c3">ToNode<\/a>(); } $/;"	a
l01699	docs/tinyxml_8h-source.html	/^<a name="l01699"><\/a><a class="code" href="classTiXmlHandle.html#cb5fe8388a526289ea65e817a51e05e7">01699<\/a>     <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>* <a class="code" href="classTiXmlHandle.html#cb5fe8388a526289ea65e817a51e05e7">Element<\/a>()<span class="keyword"> const   <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#bc6e7ed383a5fe1e52b0c0004b457b9e">ToElement<\/a>(); }$/;"	a
l01703	docs/tinyxml_8h-source.html	/^<a name="l01703"><\/a><a class="code" href="classTiXmlHandle.html#9fc739c8a18d160006f82572fc143d13">01703<\/a>     <a class="code" href="classTiXmlText.html">TiXmlText<\/a>* <a class="code" href="classTiXmlHandle.html#9fc739c8a18d160006f82572fc143d13">Text<\/a>()<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#4ac53a652296203a5b5e13854d923586">ToText<\/a>(); }$/;"	a
l01707	docs/tinyxml_8h-source.html	/^<a name="l01707"><\/a><a class="code" href="classTiXmlHandle.html#49675b74357ba2aae124657a9a1ef465">01707<\/a>     <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>* <a class="code" href="classTiXmlHandle.html#49675b74357ba2aae124657a9a1ef465">Unknown<\/a>()<span class="keyword"> const   <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#1381c17507a130767b1e23afc93b3674">ToUnknown<\/a>(); }$/;"	a
l01708	docs/tinyxml_8h-source.html	/^<a name="l01708"><\/a>01708 $/;"	a
l01709	docs/tinyxml_8h-source.html	/^<a name="l01709"><\/a>01709 <span class="keyword">private<\/span>:$/;"	a
l01710	docs/tinyxml_8h-source.html	/^<a name="l01710"><\/a>01710     <a class="code" href="classTiXmlNode.html">TiXmlNode<\/a>* node;$/;"	a
l01711	docs/tinyxml_8h-source.html	/^<a name="l01711"><\/a>01711 };$/;"	a
l01712	docs/tinyxml_8h-source.html	/^<a name="l01712"><\/a>01712 $/;"	a
l01713	docs/tinyxml_8h-source.html	/^<a name="l01713"><\/a>01713 $/;"	a
l01733	docs/tinyxml_8h-source.html	/^<a name="l01733"><\/a><a class="code" href="classTiXmlPrinter.html">01733<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlPrinter.html">TiXmlPrinter<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>$/;"	a
l01734	docs/tinyxml_8h-source.html	/^<a name="l01734"><\/a>01734 {$/;"	a
l01735	docs/tinyxml_8h-source.html	/^<a name="l01735"><\/a>01735 <span class="keyword">public<\/span>:$/;"	a
l01736	docs/tinyxml_8h-source.html	/^<a name="l01736"><\/a>01736     <a class="code" href="classTiXmlPrinter.html">TiXmlPrinter<\/a>() : depth( 0 ), simpleTextPrint( <span class="keyword">false<\/span> ),$/;"	a
l01737	docs/tinyxml_8h-source.html	/^<a name="l01737"><\/a>01737                      buffer(), indent( <span class="stringliteral">"    "<\/span> ), lineBreak( <span class="stringliteral">"\\n"<\/span> ) {}$/;"	a
l01738	docs/tinyxml_8h-source.html	/^<a name="l01738"><\/a>01738 $/;"	a
l01739	docs/tinyxml_8h-source.html	/^<a name="l01739"><\/a>01739     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#799f4f0388570cbb54c0d3c345fef7c1">VisitEnter<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>&amp; doc );$/;"	a
l01740	docs/tinyxml_8h-source.html	/^<a name="l01740"><\/a>01740     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#66b33edd76c538b462f789b797a4fdf2">VisitExit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html">TiXmlDocument<\/a>&amp; doc );$/;"	a
l01741	docs/tinyxml_8h-source.html	/^<a name="l01741"><\/a>01741 $/;"	a
l01742	docs/tinyxml_8h-source.html	/^<a name="l01742"><\/a>01742     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#799f4f0388570cbb54c0d3c345fef7c1">VisitEnter<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>&amp; element, <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>* firstAttribute );$/;"	a
l01743	docs/tinyxml_8h-source.html	/^<a name="l01743"><\/a>01743     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#66b33edd76c538b462f789b797a4fdf2">VisitExit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html">TiXmlElement<\/a>&amp; element );$/;"	a
l01744	docs/tinyxml_8h-source.html	/^<a name="l01744"><\/a>01744 $/;"	a
l01745	docs/tinyxml_8h-source.html	/^<a name="l01745"><\/a>01745     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#ce1b14d33eede2575c0743e2350f6a38">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>&amp; declaration );$/;"	a
l01746	docs/tinyxml_8h-source.html	/^<a name="l01746"><\/a>01746     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#ce1b14d33eede2575c0743e2350f6a38">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html">TiXmlText<\/a>&amp; text );$/;"	a
l01747	docs/tinyxml_8h-source.html	/^<a name="l01747"><\/a>01747     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#ce1b14d33eede2575c0743e2350f6a38">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html">TiXmlComment<\/a>&amp; comment );$/;"	a
l01748	docs/tinyxml_8h-source.html	/^<a name="l01748"><\/a>01748     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#ce1b14d33eede2575c0743e2350f6a38">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>&amp; unknown );$/;"	a
l01749	docs/tinyxml_8h-source.html	/^<a name="l01749"><\/a>01749 $/;"	a
l01753	docs/tinyxml_8h-source.html	/^<a name="l01753"><\/a><a class="code" href="classTiXmlPrinter.html#213377a4070c7e625bae59716b089e5e">01753<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#213377a4070c7e625bae59716b089e5e">SetIndent<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _indent )           { indent = _indent ? _indent : <span class="stringliteral">""<\/span> ; }$/;"	a
l01755	docs/tinyxml_8h-source.html	/^<a name="l01755"><\/a><a class="code" href="classTiXmlPrinter.html#bb33ec7d4bad6aaeb57f4304394b133d">01755<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#bb33ec7d4bad6aaeb57f4304394b133d">Indent<\/a>()                            { <span class="keywordflow">return<\/span> indent.c_str(); }$/;"	a
l01760	docs/tinyxml_8h-source.html	/^<a name="l01760"><\/a><a class="code" href="classTiXmlPrinter.html#4be1e37e69e3858c59635aa947174fe6">01760<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#4be1e37e69e3858c59635aa947174fe6">SetLineBreak<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _lineBreak )     { lineBreak = _lineBreak ? _lineBreak : <span class="stringliteral">""<\/span>; }$/;"	a
l01762	docs/tinyxml_8h-source.html	/^<a name="l01762"><\/a><a class="code" href="classTiXmlPrinter.html#11f1b4804a460b175ec244eb5724d96d">01762<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#11f1b4804a460b175ec244eb5724d96d">LineBreak<\/a>()                         { <span class="keywordflow">return<\/span> lineBreak.c_str(); }$/;"	a
l01763	docs/tinyxml_8h-source.html	/^<a name="l01763"><\/a>01763 $/;"	a
l01767	docs/tinyxml_8h-source.html	/^<a name="l01767"><\/a><a class="code" href="classTiXmlPrinter.html#b23a90629e374cb1cadca090468bbd19">01767<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#b23a90629e374cb1cadca090468bbd19">SetStreamPrinting<\/a>()                        { indent = <span class="stringliteral">""<\/span>;$/;"	a
l01768	docs/tinyxml_8h-source.html	/^<a name="l01768"><\/a>01768                                                       lineBreak = <span class="stringliteral">""<\/span>;$/;"	a
l01769	docs/tinyxml_8h-source.html	/^<a name="l01769"><\/a>01769                                                     }   $/;"	a
l01771	docs/tinyxml_8h-source.html	/^<a name="l01771"><\/a><a class="code" href="classTiXmlPrinter.html#859eede9597d3e0355b77757be48735e">01771<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#859eede9597d3e0355b77757be48735e">CStr<\/a>()                              { <span class="keywordflow">return<\/span> buffer.c_str(); }$/;"	a
l01773	docs/tinyxml_8h-source.html	/^<a name="l01773"><\/a><a class="code" href="classTiXmlPrinter.html#d01375ae9199bd2f48252eaddce3039d">01773<\/a>     size_t <a class="code" href="classTiXmlPrinter.html#d01375ae9199bd2f48252eaddce3039d">Size<\/a>()                                   { <span class="keywordflow">return<\/span> buffer.size(); }$/;"	a
l01774	docs/tinyxml_8h-source.html	/^<a name="l01774"><\/a>01774 $/;"	a
l01775	docs/tinyxml_8h-source.html	/^<a name="l01775"><\/a>01775 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01777	docs/tinyxml_8h-source.html	/^<a name="l01777"><\/a><a class="code" href="classTiXmlPrinter.html#3bd4daf44309b41f5813a833caa0d1c9">01777<\/a> <span class="preprocessor">    const std::string&amp; Str()                        { return buffer; }<\/span>$/;"	a
l01778	docs/tinyxml_8h-source.html	/^<a name="l01778"><\/a>01778 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l01779	docs/tinyxml_8h-source.html	/^<a name="l01779"><\/a>01779 <span class="preprocessor"><\/span>$/;"	a
l01780	docs/tinyxml_8h-source.html	/^<a name="l01780"><\/a>01780 <span class="keyword">private<\/span>:$/;"	a
l01781	docs/tinyxml_8h-source.html	/^<a name="l01781"><\/a>01781     <span class="keywordtype">void<\/span> DoIndent() {$/;"	a
l01782	docs/tinyxml_8h-source.html	/^<a name="l01782"><\/a>01782         <span class="keywordflow">for<\/span>( <span class="keywordtype">int<\/span> i=0; i&lt;depth; ++i )$/;"	a
l01783	docs/tinyxml_8h-source.html	/^<a name="l01783"><\/a>01783             buffer += indent;$/;"	a
l01784	docs/tinyxml_8h-source.html	/^<a name="l01784"><\/a>01784     }$/;"	a
l01785	docs/tinyxml_8h-source.html	/^<a name="l01785"><\/a>01785     <span class="keywordtype">void<\/span> DoLineBreak() {$/;"	a
l01786	docs/tinyxml_8h-source.html	/^<a name="l01786"><\/a>01786         buffer += lineBreak;$/;"	a
l01787	docs/tinyxml_8h-source.html	/^<a name="l01787"><\/a>01787     }$/;"	a
l01788	docs/tinyxml_8h-source.html	/^<a name="l01788"><\/a>01788 $/;"	a
l01789	docs/tinyxml_8h-source.html	/^<a name="l01789"><\/a>01789     <span class="keywordtype">int<\/span> depth;$/;"	a
l01790	docs/tinyxml_8h-source.html	/^<a name="l01790"><\/a>01790     <span class="keywordtype">bool<\/span> simpleTextPrint;$/;"	a
l01791	docs/tinyxml_8h-source.html	/^<a name="l01791"><\/a>01791     TIXML_STRING buffer;$/;"	a
l01792	docs/tinyxml_8h-source.html	/^<a name="l01792"><\/a>01792     TIXML_STRING indent;$/;"	a
l01793	docs/tinyxml_8h-source.html	/^<a name="l01793"><\/a>01793     TIXML_STRING lineBreak;$/;"	a
l01794	docs/tinyxml_8h-source.html	/^<a name="l01794"><\/a>01794 };$/;"	a
l01795	docs/tinyxml_8h-source.html	/^<a name="l01795"><\/a>01795 $/;"	a
l01796	docs/tinyxml_8h-source.html	/^<a name="l01796"><\/a>01796 $/;"	a
l01797	docs/tinyxml_8h-source.html	/^<a name="l01797"><\/a>01797 <span class="preprocessor">#ifdef _MSC_VER<\/span>$/;"	a
l01798	docs/tinyxml_8h-source.html	/^<a name="l01798"><\/a>01798 <span class="preprocessor"><\/span><span class="preprocessor">#pragma warning( pop )<\/span>$/;"	a
l01799	docs/tinyxml_8h-source.html	/^<a name="l01799"><\/a>01799 <span class="preprocessor"><\/span><span class="preprocessor">#endif<\/span>$/;"	a
l01800	docs/tinyxml_8h-source.html	/^<a name="l01800"><\/a>01800 <span class="preprocessor"><\/span>$/;"	a
l01801	docs/tinyxml_8h-source.html	/^<a name="l01801"><\/a>01801 <span class="preprocessor">#endif<\/span>$/;"	a
l01802	docs/tinyxml_8h-source.html	/^<a name="l01802"><\/a>01802 <span class="preprocessor"><\/span>$/;"	a
lastChild	tinyxml.h	/^	TiXmlNode*		lastChild;$/;"	m	class:TiXmlNode
length	tinystr.h	/^	size_type length () const { return rep_->size; }$/;"	f	class:TiXmlString
lineBreak	tinyxml.h	/^	TIXML_STRING lineBreak;$/;"	m	class:TiXmlPrinter
location	tinyxml.h	/^	TiXmlCursor location;$/;"	m	class:TiXmlBase
main	xmltest.cpp	/^int main()$/;"	f
name	tinyxml.h	/^	TIXML_STRING name;$/;"	m	class:TiXmlAttribute
next	tinyxml.h	/^	TiXmlAttribute*	next;$/;"	m	class:TiXmlAttribute
next	tinyxml.h	/^	TiXmlNode*		next;$/;"	m	class:TiXmlNode
node	tinyxml.h	/^	TiXmlNode* node;$/;"	m	class:TiXmlHandle
npos	tinystr.cpp	/^const TiXmlString::size_type TiXmlString::npos = static_cast< TiXmlString::size_type >(-1);$/;"	m	class:TiXmlString	file:
npos	tinystr.h	/^	static const size_type npos; \/\/ = -1;$/;"	m	class:TiXmlString
nullrep_	tinystr.cpp	/^TiXmlString::Rep TiXmlString::nullrep_ = { 0, 0, { '\\0' } };$/;"	m	class:TiXmlString	file:
nullrep_	tinystr.h	/^	static Rep nullrep_;$/;"	m	class:TiXmlString
operator !=	tinystr.h	/^inline bool operator != (const TiXmlString & a, const TiXmlString & b) { return !(a == b); }$/;"	f
operator !=	tinystr.h	/^inline bool operator != (const TiXmlString & a, const char* b) { return !(a == b); }$/;"	f
operator !=	tinystr.h	/^inline bool operator != (const char* a, const TiXmlString & b) { return !(b == a); }$/;"	f
operator +	tinystr.cpp	/^TiXmlString operator + (const TiXmlString & a, const TiXmlString & b)$/;"	f
operator +	tinystr.cpp	/^TiXmlString operator + (const TiXmlString & a, const char* b)$/;"	f
operator +	tinystr.cpp	/^TiXmlString operator + (const char* a, const TiXmlString & b)$/;"	f
operator +=	tinystr.h	/^	TiXmlString& operator += (char single)$/;"	f	class:TiXmlString
operator +=	tinystr.h	/^	TiXmlString& operator += (const TiXmlString & suffix)$/;"	f	class:TiXmlString
operator +=	tinystr.h	/^	TiXmlString& operator += (const char * suffix)$/;"	f	class:TiXmlString
operator <	tinystr.h	/^inline bool operator < (const TiXmlString & a, const TiXmlString & b)$/;"	f
operator <	tinyxml.h	/^	bool operator<( const TiXmlAttribute& rhs )	 const { return name < rhs.name; }$/;"	f	class:TiXmlAttribute
operator <<	tinystr.h	/^	TiXmlOutStream & operator << (const TiXmlString & in)$/;"	f	class:TiXmlOutStream
operator <<	tinystr.h	/^	TiXmlOutStream & operator << (const char * in)$/;"	f	class:TiXmlOutStream
operator <<	tinyxml.cpp	/^std::ostream& operator<< (std::ostream & out, const TiXmlNode & base)$/;"	f
operator <<	tinyxml.cpp	/^std::string& operator<< (std::string& out, const TiXmlNode& base )$/;"	f
operator <=	tinystr.h	/^inline bool operator <= (const TiXmlString & a, const TiXmlString & b) { return !(b < a); }$/;"	f
operator =	tinystr.h	/^	TiXmlString& operator = (const TiXmlString & copy)$/;"	f	class:TiXmlString
operator =	tinystr.h	/^	TiXmlString& operator = (const char * copy)$/;"	f	class:TiXmlString
operator =	tinyxml.cpp	/^void TiXmlComment::operator=( const TiXmlComment& base )$/;"	f	class:TiXmlComment
operator =	tinyxml.cpp	/^void TiXmlDeclaration::operator=( const TiXmlDeclaration& copy )$/;"	f	class:TiXmlDeclaration
operator =	tinyxml.cpp	/^void TiXmlDocument::operator=( const TiXmlDocument& copy )$/;"	f	class:TiXmlDocument
operator =	tinyxml.cpp	/^void TiXmlElement::operator=( const TiXmlElement& base )$/;"	f	class:TiXmlElement
operator =	tinyxml.h	/^	TiXmlHandle operator=( const TiXmlHandle& ref ) { this->node = ref.node; return *this; }$/;"	f	class:TiXmlHandle
operator =	tinyxml.h	/^	void operator=( const TiXmlText& base )							 	{ base.CopyTo( this ); }$/;"	f	class:TiXmlText
operator =	tinyxml.h	/^	void operator=( const TiXmlUnknown& copy )										{ copy.CopyTo( this ); }$/;"	f	class:TiXmlUnknown
operator ==	tinystr.h	/^inline bool operator == (const TiXmlString & a, const TiXmlString & b)$/;"	f
operator ==	tinystr.h	/^inline bool operator == (const TiXmlString & a, const char* b) { return strcmp(a.c_str(), b) == 0; }$/;"	f
operator ==	tinystr.h	/^inline bool operator == (const char* a, const TiXmlString & b) { return b == a; }$/;"	f
operator ==	tinyxml.h	/^	bool operator==( const TiXmlAttribute& rhs ) const { return rhs.name == name; }$/;"	f	class:TiXmlAttribute
operator >	tinystr.h	/^inline bool operator >  (const TiXmlString & a, const TiXmlString & b) { return b < a; }$/;"	f
operator >	tinyxml.h	/^	bool operator>( const TiXmlAttribute& rhs )  const { return name > rhs.name; }$/;"	f	class:TiXmlAttribute
operator >=	tinystr.h	/^inline bool operator >= (const TiXmlString & a, const TiXmlString & b) { return !(a < b); }$/;"	f
operator >>	tinyxml.cpp	/^std::istream& operator>> (std::istream & in, TiXmlNode & base)$/;"	f
operator []	tinystr.h	/^	char& operator [] (size_type index) const$/;"	f	class:TiXmlString
parent	tinyxml.h	/^	TiXmlNode*		parent;$/;"	m	class:TiXmlNode
prev	tinyxml.h	/^	TiXmlAttribute*	prev;$/;"	m	class:TiXmlAttribute
prev	tinyxml.h	/^	TiXmlNode*		prev;$/;"	m	class:TiXmlNode
quit	tinystr.h	/^	void quit()$/;"	f	class:TiXmlString
rep_	tinystr.h	/^	Rep * rep_;$/;"	m	class:TiXmlString
reserve	tinystr.cpp	/^void TiXmlString::reserve (size_type cap)$/;"	f	class:TiXmlString
row	tinyxml.h	/^	int row;	\/\/ 0 based.$/;"	m	struct:TiXmlCursor
sentinel	tinyxml.h	/^	TiXmlAttribute sentinel;$/;"	m	class:TiXmlAttributeSet
set_size	tinystr.h	/^	void set_size(size_type sz) { rep_->str[ rep_->size = sz ] = '\\0'; }$/;"	f	class:TiXmlString
simpleTextPrint	tinyxml.h	/^	bool simpleTextPrint;$/;"	m	class:TiXmlPrinter
size	tinystr.h	/^		size_type size, capacity;$/;"	m	struct:TiXmlString::Rep
size	tinystr.h	/^	size_type size () const { return rep_->size; }$/;"	f	class:TiXmlString
size_type	tinystr.h	/^  	typedef size_t size_type;$/;"	t	class:TiXmlString
stamp	tinyxmlparser.cpp	/^	const char*		stamp;$/;"	m	class:TiXmlParsingData	file:
standalone	tinyxml.h	/^	TIXML_STRING standalone;$/;"	m	class:TiXmlDeclaration
start	tinystr.h	/^	char* start() const { return rep_->str; }$/;"	f	class:TiXmlString
str	tinystr.h	/^		char str[1];$/;"	m	struct:TiXmlString::Rep
str	tinyxml.h	/^		const char*     str;$/;"	m	struct:TiXmlBase::Entity
strLength	tinyxml.h	/^		unsigned int	strLength;$/;"	m	struct:TiXmlBase::Entity
swap	tinystr.h	/^	void swap (TiXmlString& other)$/;"	f	class:TiXmlString
tabsize	tinyxml.h	/^	int tabsize;$/;"	m	class:TiXmlDocument
tabsize	tinyxmlparser.cpp	/^	int				tabsize;$/;"	m	class:TiXmlParsingData	file:
tutorial0	docs/tutorial0.html	/^<h1><a class="anchor" name="tutorial0">TinyXML Tutorial<\/a><\/h1><h1>What is this? <\/h1>$/;"	a
type	tinyxml.h	/^	NodeType		type;$/;"	m	class:TiXmlNode
useMicrosoftBOM	tinyxml.h	/^	bool useMicrosoftBOM;		\/\/ the UTF-8 BOM were found when read. Note this, and try to write.$/;"	m	class:TiXmlDocument
userData	tinyxml.h	/^	void*			userData;$/;"	m	class:TiXmlBase
utf8ByteTable	tinyxml.h	/^	static const int utf8ByteTable[256];$/;"	m	class:TiXmlBase
utf8ByteTable	tinyxmlparser.cpp	/^const int TiXmlBase::utf8ByteTable[256] = $/;"	m	class:TiXmlBase	file:
value	tinyxml.h	/^	TIXML_STRING	value;$/;"	m	class:TiXmlNode
value	tinyxml.h	/^	TIXML_STRING value;$/;"	m	class:TiXmlAttribute
version	tinyxml.h	/^	TIXML_STRING version;$/;"	m	class:TiXmlDeclaration
~TiXmlAttributeSet	tinyxml.cpp	/^TiXmlAttributeSet::~TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet
~TiXmlBase	tinyxml.h	/^	virtual ~TiXmlBase()			{}$/;"	f	class:TiXmlBase
~TiXmlComment	tinyxml.h	/^	virtual ~TiXmlComment()	{}$/;"	f	class:TiXmlComment
~TiXmlDeclaration	tinyxml.h	/^	virtual ~TiXmlDeclaration()	{}$/;"	f	class:TiXmlDeclaration
~TiXmlDocument	tinyxml.h	/^	virtual ~TiXmlDocument() {}$/;"	f	class:TiXmlDocument
~TiXmlElement	tinyxml.cpp	/^TiXmlElement::~TiXmlElement()$/;"	f	class:TiXmlElement
~TiXmlNode	tinyxml.cpp	/^TiXmlNode::~TiXmlNode()$/;"	f	class:TiXmlNode
~TiXmlString	tinystr.h	/^	~TiXmlString ()$/;"	f	class:TiXmlString
~TiXmlText	tinyxml.h	/^	virtual ~TiXmlText() {}$/;"	f	class:TiXmlText
~TiXmlUnknown	tinyxml.h	/^	virtual ~TiXmlUnknown() {}$/;"	f	class:TiXmlUnknown
~TiXmlVisitor	tinyxml.h	/^	virtual ~TiXmlVisitor() {}$/;"	f	class:TiXmlVisitor
