!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
ACCEPT	lemon.c	/^		ACCEPT,$/;"	e	enum:action::e_action	file:
AI_NUMERICSERV	mod_extforward.c	380;"	d	file:
APR1_ID	http_auth.c	534;"	d	file:
APR_MD5_DIGESTSIZE	http_auth.c	533;"	d	file:
ARRAY_H	array.h	2;"	d
AUTH_BACKEND_HTDIGEST	http_auth.h	/^	AUTH_BACKEND_HTDIGEST$/;"	e	enum:__anon76
AUTH_BACKEND_HTPASSWD	http_auth.h	/^	AUTH_BACKEND_HTPASSWD,$/;"	e	enum:__anon76
AUTH_BACKEND_LDAP	http_auth.h	/^	AUTH_BACKEND_LDAP,$/;"	e	enum:__anon76
AUTH_BACKEND_PLAIN	http_auth.h	/^	AUTH_BACKEND_PLAIN,$/;"	e	enum:__anon76
AUTH_BACKEND_UNSET	http_auth.h	/^	AUTH_BACKEND_UNSET,$/;"	e	enum:__anon76
Action_add	lemon.c	/^void Action_add(app, type, sp, arg)$/;"	f
Action_new	lemon.c	/^struct action *Action_new()$/;"	f
Action_sort	lemon.c	/^struct action *Action_sort(ap)$/;"	f
BINPATH	lighttpd-angel.c	22;"	d	file:
BITSET_BITS	bitset.c	12;"	d	file:
BITSET_MASK	bitset.c	19;"	d	file:
BITSET_USED	bitset.c	33;"	d	file:
BITSET_WORD	bitset.c	25;"	d	file:
BUFFER_APPEND_SLASH	buffer.h	136;"	d
BUFFER_APPEND_STRING_CONST	buffer.h	130;"	d
BUFFER_COPY_STRING_CONST	buffer.h	133;"	d
BUFFER_MAX_REUSE_SIZE	settings.h	15;"	d
BUFFER_PIECE_SIZE	buffer.c	85;"	d	file:
BV	settings.h	4;"	d
BZ_NO_STDIO	mod_compress.c	33;"	d	file:
Bo_FALSE	lemon.c	/^typedef enum { Bo_FALSE = 0, Bo_TRUE } Boolean;$/;"	e	enum:__anon197	file:
Bo_TRUE	lemon.c	/^typedef enum { Bo_FALSE = 0, Bo_TRUE } Boolean;$/;"	e	enum:__anon197	file:
Boolean	lemon.c	/^typedef enum { Bo_FALSE = 0, Bo_TRUE } Boolean;$/;"	t	typeref:enum:__anon197	file:
CLEAN	connections.c	795;"	d	file:
CLEAN	connections.c	823;"	d	file:
CLEAN	connections.c	864;"	d	file:
CLEAN	connections.c	891;"	d	file:
CLEAN	connections.c	935;"	d	file:
CLEAN	connections.c	962;"	d	file:
CLEAN	connections.c	964;"	d	file:
CLEAN	connections.c	967;"	d	file:
CLEAN	connections.c	969;"	d	file:
CLEAN	connections.c	975;"	d	file:
CLEAN	mod_fastcgi.c	421;"	d	file:
CLEAN	mod_fastcgi.c	432;"	d	file:
CLEAN	mod_fastcgi.c	434;"	d	file:
CLEAN	mod_fastcgi.c	441;"	d	file:
CLEAN	server.c	198;"	d	file:
CLEAN	server.c	220;"	d	file:
CLEAN	server.c	222;"	d	file:
CLEAN	server.c	228;"	d	file:
CLEAN	server.c	273;"	d	file:
CLEAN	server.c	297;"	d	file:
CLEAN	server.c	332;"	d	file:
CLEAN	server.c	339;"	d	file:
CMD_CAT	proc_open.c	487;"	d	file:
COMPLETE	lemon.c	/^		COMPLETE,				\/* The status is used during followset and *\/$/;"	e	enum:config::__anon199	file:
COMP_HTTP_COOKIE	array.h	/^	COMP_HTTP_COOKIE,$/;"	e	enum:__anon152
COMP_HTTP_HOST	array.h	/^	COMP_HTTP_HOST,$/;"	e	enum:__anon152
COMP_HTTP_QUERY_STRING	array.h	/^	COMP_HTTP_QUERY_STRING,$/;"	e	enum:__anon152
COMP_HTTP_REFERER	array.h	/^	COMP_HTTP_REFERER,$/;"	e	enum:__anon152
COMP_HTTP_REMOTE_IP	array.h	/^	COMP_HTTP_REMOTE_IP,$/;"	e	enum:__anon152
COMP_HTTP_REQUEST_METHOD	array.h	/^	COMP_HTTP_REQUEST_METHOD,$/;"	e	enum:__anon152
COMP_HTTP_SCHEME	array.h	/^	COMP_HTTP_SCHEME,$/;"	e	enum:__anon152
COMP_HTTP_URL	array.h	/^	COMP_HTTP_URL,$/;"	e	enum:__anon152
COMP_HTTP_USER_AGENT	array.h	/^	COMP_HTTP_USER_AGENT,$/;"	e	enum:__anon152
COMP_LAST_ELEMENT	array.h	/^	COMP_LAST_ELEMENT$/;"	e	enum:__anon152
COMP_SERVER_SOCKET	array.h	/^	COMP_SERVER_SOCKET,$/;"	e	enum:__anon152
COMP_UNSET	array.h	/^	COMP_UNSET,$/;"	e	enum:__anon152
COND_RESULT_FALSE	base.h	/^typedef enum { COND_RESULT_UNSET, COND_RESULT_FALSE,$/;"	e	enum:__anon33
COND_RESULT_TRUE	base.h	/^	COND_RESULT_TRUE$/;"	e	enum:__anon33
COND_RESULT_UNSET	base.h	/^typedef enum { COND_RESULT_UNSET, COND_RESULT_FALSE,$/;"	e	enum:__anon33
CONFIG_ACTIVATE	mod_dirlisting.c	275;"	d	file:
CONFIG_COND_EQ	array.h	/^	CONFIG_COND_EQ,		 \/** == *\/$/;"	e	enum:__anon151
CONFIG_COND_MATCH	array.h	/^	CONFIG_COND_MATCH,			 \/** =~ *\/$/;"	e	enum:__anon151
CONFIG_COND_NE	array.h	/^	CONFIG_COND_NE,		 \/** != *\/$/;"	e	enum:__anon151
CONFIG_COND_NOMATCH	array.h	/^	CONFIG_COND_NOMATCH			 \/** !~ *\/$/;"	e	enum:__anon151
CONFIG_COND_UNSET	array.h	/^	CONFIG_COND_UNSET,$/;"	e	enum:__anon151
CONFIG_DIR_LISTING	mod_dirlisting.c	283;"	d	file:
CONFIG_DOCUMENT_ROOT	server.h	/^typedef enum { CONFIG_UNSET, CONFIG_DOCUMENT_ROOT } config_var_t;$/;"	e	enum:__anon48
CONFIG_ENCODING	mod_dirlisting.c	278;"	d	file:
CONFIG_EXCLUDE	mod_dirlisting.c	274;"	d	file:
CONFIG_EXTERNAL_CSS	mod_dirlisting.c	277;"	d	file:
CONFIG_HIDE_DOTFILES	mod_dirlisting.c	276;"	d	file:
CONFIG_HIDE_HEADER_FILE	mod_dirlisting.c	282;"	d	file:
CONFIG_HIDE_README_FILE	mod_dirlisting.c	280;"	d	file:
CONFIG_SET_FOOTER	mod_dirlisting.c	284;"	d	file:
CONFIG_SHOW_HEADER	mod_dirlisting.c	281;"	d	file:
CONFIG_SHOW_README	mod_dirlisting.c	279;"	d	file:
CONFIG_UNSET	server.h	/^typedef enum { CONFIG_UNSET, CONFIG_DOCUMENT_ROOT } config_var_t;$/;"	e	enum:__anon48
CONFLICT	lemon.c	/^		CONFLICT,				\/* Was a reduce, but part of a conflict *\/$/;"	e	enum:action::e_action	file:
CONNECTION_DEAD	mod_fastcgi.c	/^	CONNECTION_DEAD				\/* disable for 60 seconds, take another backend $/;"	e	enum:__anon192	file:
CONNECTION_DELAYED	mod_fastcgi.c	/^	CONNECTION_DELAYED,			\/* retry after event, take same host *\/$/;"	e	enum:__anon192	file:
CONNECTION_FUNC	mod_extforward.c	/^CONNECTION_FUNC(mod_extforward_restore)$/;"	f
CONNECTION_FUNC	mod_mysql_vhost.c	/^CONNECTION_FUNC(mod_mysql_vhost_handle_connection_close)$/;"	f
CONNECTION_FUNC	mod_mysql_vhost.c	/^CONNECTION_FUNC(mod_mysql_vhost_handle_docroot)$/;"	f
CONNECTION_FUNC	plugin.h	10;"	d
CONNECTION_OK	mod_fastcgi.c	/^	CONNECTION_OK,$/;"	e	enum:__anon192	file:
CONNECTION_OVERLOADED	mod_fastcgi.c	/^	CONNECTION_OVERLOADED,		\/* disable for 1 second, take another backend *\/$/;"	e	enum:__anon192	file:
CONNECTION_UNSET	mod_fastcgi.c	/^	CONNECTION_UNSET,$/;"	e	enum:__anon192	file:
CONST_BUF_LEN	buffer.h	140;"	d
CONST_STRING	mod_ssi.c	261;"	d	file:
CONST_STR_LEN	buffer.h	139;"	d
CON_STATE_CLOSE	base.h	/^	CON_STATE_CLOSE$/;"	e	enum:__anon32
CON_STATE_CONNECT	base.h	/^	CON_STATE_CONNECT,$/;"	e	enum:__anon32
CON_STATE_ERROR	base.h	/^	CON_STATE_ERROR,$/;"	e	enum:__anon32
CON_STATE_HANDLE_REQUEST	base.h	/^	CON_STATE_HANDLE_REQUEST,$/;"	e	enum:__anon32
CON_STATE_READ	base.h	/^	CON_STATE_READ,$/;"	e	enum:__anon32
CON_STATE_READ_POST	base.h	/^	CON_STATE_READ_POST,$/;"	e	enum:__anon32
CON_STATE_REQUEST_END	base.h	/^	CON_STATE_REQUEST_END,$/;"	e	enum:__anon32
CON_STATE_REQUEST_START	base.h	/^	CON_STATE_REQUEST_START,$/;"	e	enum:__anon32
CON_STATE_RESPONSE_END	base.h	/^	CON_STATE_RESPONSE_END,$/;"	e	enum:__anon32
CON_STATE_RESPONSE_START	base.h	/^	CON_STATE_RESPONSE_START,$/;"	e	enum:__anon32
CON_STATE_WRITE	base.h	/^	CON_STATE_WRITE,$/;"	e	enum:__anon32
CRC32C	crc32.c	3;"	d	file:
CompressTables	lemon.c	/^void CompressTables(lemp)$/;"	f
ConfigPrint	lemon.c	/^void ConfigPrint(fp, cfp)$/;"	f
Configcmp	lemon.c	/^int Configcmp(a, b)$/;"	f
Configlist_add	lemon.c	/^struct config *Configlist_add(rp, dot)$/;"	f
Configlist_addbasis	lemon.c	/^struct config *Configlist_addbasis(rp, dot)$/;"	f
Configlist_basis	lemon.c	/^struct config *Configlist_basis()$/;"	f
Configlist_closure	lemon.c	/^void Configlist_closure(lemp)$/;"	f
Configlist_eat	lemon.c	/^void Configlist_eat(cfp)$/;"	f
Configlist_init	lemon.c	/^void Configlist_init()$/;"	f
Configlist_reset	lemon.c	/^void Configlist_reset()$/;"	f
Configlist_return	lemon.c	/^struct config *Configlist_return()$/;"	f
Configlist_sort	lemon.c	/^void Configlist_sort()$/;"	f
Configlist_sortbasis	lemon.c	/^void Configlist_sortbasis()$/;"	f
Configtable_clear	lemon.c	/^void Configtable_clear(f)$/;"	f
Configtable_find	lemon.c	/^struct config *Configtable_find(key)$/;"	f
Configtable_init	lemon.c	/^void Configtable_init()$/;"	f
Configtable_insert	lemon.c	/^int Configtable_insert(data)$/;"	f
CvtHex	http_auth_digest.c	/^void CvtHex(IN HASH Bin, OUT HASHHEX Hex)$/;"	f
DATA_IS_STRING	array.h	18;"	d
DATA_UNSET	array.h	/^	DATA_UNSET;$/;"	m	struct:__anon148
DATA_UNSET	array.h	/^	DATA_UNSET;$/;"	m	struct:__anon149
DATA_UNSET	array.h	/^	DATA_UNSET;$/;"	m	struct:__anon150
DATA_UNSET	array.h	/^	DATA_UNSET;$/;"	m	struct:__anon153
DATA_UNSET	array.h	/^	DATA_UNSET;$/;"	m	struct:__anon154
DATA_UNSET	array.h	/^	DATA_UNSET;$/;"	m	struct:_data_config
DATA_UNSET	array.h	/^	DATA_UNSET;$/;"	m	struct:data_unset
DATA_UNSET	array.h	47;"	d
DEBUG	mod_mysql_vhost.c	20;"	d	file:
DEBUG_ARRAY	array.c	332;"	d	file:
DIRECT	base.h	/^typedef enum { DIRECT, EXTERNAL } connection_type;$/;"	e	enum:__anon20
DIRLIST_BLOB_SIZE	mod_dirlisting.c	480;"	d	file:
DIRLIST_ENT_NAME	mod_dirlisting.c	479;"	d	file:
Decode	md5.c	/^static void Decode(output, input, len)$/;"	f	file:
EALREADY	sys-socket.h	10;"	d
ECONNABORTED	sys-socket.h	11;"	d
ECONNRESET	sys-socket.h	8;"	d
EINPROGRESS	sys-socket.h	9;"	d
ENCODING_HEX	buffer.h	/^	ENCODING_HEX,				\/* encode string as hex *\/$/;"	e	enum:__anon91
ENCODING_HTML	buffer.h	/^	ENCODING_HTML,				\/* & becomes &amp; and so on *\/$/;"	e	enum:__anon91
ENCODING_HTTP_HEADER	buffer.h	/^	ENCODING_HTTP_HEADER		\/* encode \\n with \\t\\n *\/$/;"	e	enum:__anon91
ENCODING_MINIMAL_XML	buffer.h	/^	ENCODING_MINIMAL_XML,		\/* minimal encoding for xml *\/$/;"	e	enum:__anon91
ENCODING_REL_URI	buffer.h	/^	ENCODING_REL_URI,			\/* for coding a rel-uri (\/with$/;"	e	enum:__anon91
ENCODING_REL_URI_PART	buffer.h	/^	ENCODING_REL_URI_PART,		\/* same as ENC_REL_URL plus coding \/ too as %2F $/;"	e	enum:__anon91
ENCODING_UNSET	buffer.h	/^	ENCODING_UNSET,$/;"	e	enum:__anon91
EOL_N	mod_cgi.c	/^enum { EOL_UNSET, EOL_N, EOL_RN };$/;"	e	enum:__anon109	file:
EOL_N	mod_scgi.c	/^enum { EOL_UNSET, EOL_N, EOL_RN };$/;"	e	enum:__anon169	file:
EOL_RN	mod_cgi.c	/^enum { EOL_UNSET, EOL_N, EOL_RN };$/;"	e	enum:__anon109	file:
EOL_RN	mod_scgi.c	/^enum { EOL_UNSET, EOL_N, EOL_RN };$/;"	e	enum:__anon169	file:
EOL_UNSET	mod_cgi.c	/^enum { EOL_UNSET, EOL_N, EOL_RN };$/;"	e	enum:__anon109	file:
EOL_UNSET	mod_scgi.c	/^enum { EOL_UNSET, EOL_N, EOL_RN };$/;"	e	enum:__anon169	file:
ERRMSGSIZE	lemon.c	1593;"	d	file:
ERROR	lemon.c	/^		ERROR,$/;"	e	enum:action::e_action	file:
ERRORLOG_FILE	base.h	/^	enum { ERRORLOG_STDERR, ERRORLOG_FILE, ERRORLOG_SYSLOG } errorlog_mode;$/;"	e	enum:server::__anon46
ERRORLOG_STDERR	base.h	/^	enum { ERRORLOG_STDERR, ERRORLOG_FILE, ERRORLOG_SYSLOG } errorlog_mode;$/;"	e	enum:server::__anon46
ERRORLOG_SYSLOG	base.h	/^	enum { ERRORLOG_STDERR, ERRORLOG_FILE, ERRORLOG_SYSLOG } errorlog_mode;$/;"	e	enum:server::__anon46
ERROR_OUT	proc_open.c	478;"	d	file:
ERROR_OUT	proc_open.c	528;"	d	file:
ETAG_H	etag.h	2;"	d
ETAG_USE_INODE	etag.h	/^	ETAG_USE_INODE = 1,  	\/\/包含文件的i节点号。$/;"	e	enum:__anon195
ETAG_USE_MTIME	etag.h	/^	ETAG_USE_MTIME = 2,  	\/\/包含文件最后一次修改的时间。$/;"	e	enum:__anon195
ETAG_USE_SIZE	etag.h	/^	ETAG_USE_SIZE = 4    	\/\/包含文件的byte数。$/;"	e	enum:__anon195
EXTERNAL	base.h	/^typedef enum { DIRECT, EXTERNAL } connection_type;$/;"	e	enum:__anon20
Encode	md5.c	/^static void Encode(output, input, len)$/;"	f	file:
ErrorMsg	lemon.c	/^void ErrorMsg(const char *filename, int lineno, const char *format, ...)$/;"	f
F	md5.c	81;"	d	file:
FALSE	settings.h	43;"	d
FCGI_ABORT_REQUEST	fastcgi.h	51;"	d
FCGI_AUTHORIZER	fastcgi.h	90;"	d
FCGI_BEGIN_REQUEST	fastcgi.h	50;"	d
FCGI_BeginRequestBody	fastcgi.h	/^} FCGI_BeginRequestBody;$/;"	t	typeref:struct:__anon117
FCGI_BeginRequestRecord	fastcgi.h	/^} FCGI_BeginRequestRecord;$/;"	t	typeref:struct:__anon118
FCGI_CANT_MPX_CONN	fastcgi.h	112;"	d
FCGI_DATA	fastcgi.h	57;"	d
FCGI_END_REQUEST	fastcgi.h	52;"	d
FCGI_ENV_ADD_CHECK	mod_fastcgi.c	52;"	d	file:
FCGI_EndRequestBody	fastcgi.h	/^} FCGI_EndRequestBody;$/;"	t	typeref:struct:__anon119
FCGI_EndRequestRecord	fastcgi.h	/^} FCGI_EndRequestRecord;$/;"	t	typeref:struct:__anon120
FCGI_FILTER	fastcgi.h	91;"	d
FCGI_GET_VALUES	fastcgi.h	58;"	d
FCGI_GET_VALUES_RESULT	fastcgi.h	59;"	d
FCGI_HEADER_LEN	fastcgi.h	40;"	d
FCGI_Header	fastcgi.h	/^} FCGI_Header;$/;"	t	typeref:struct:__anon116
FCGI_KEEP_CONN	fastcgi.h	84;"	d
FCGI_LISTENSOCK_FILENO	fastcgi.h	21;"	d
FCGI_LISTENSOCK_FILENO	spawn-fcgi.c	26;"	d	file:
FCGI_MAXTYPE	fastcgi.h	61;"	d
FCGI_MAX_CONNS	fastcgi.h	120;"	d
FCGI_MAX_LENGTH	fastcgi.h	34;"	d
FCGI_MAX_REQS	fastcgi.h	121;"	d
FCGI_MPXS_CONNS	fastcgi.h	122;"	d
FCGI_NULL_REQUEST_ID	fastcgi.h	66;"	d
FCGI_OVERLOADED	fastcgi.h	113;"	d
FCGI_PARAMS	fastcgi.h	53;"	d
FCGI_REQUEST_COMPLETE	fastcgi.h	111;"	d
FCGI_RESPONDER	fastcgi.h	89;"	d
FCGI_STATE_CONNECT	mod_scgi.c	/^typedef enum { FCGI_STATE_INIT, FCGI_STATE_CONNECT,$/;"	e	enum:__anon177	file:
FCGI_STATE_CONNECT_DELAYED	mod_fastcgi.c	/^	FCGI_STATE_CONNECT_DELAYED,$/;"	e	enum:__anon190	file:
FCGI_STATE_INIT	mod_fastcgi.c	/^	FCGI_STATE_INIT,$/;"	e	enum:__anon190	file:
FCGI_STATE_INIT	mod_scgi.c	/^typedef enum { FCGI_STATE_INIT, FCGI_STATE_CONNECT,$/;"	e	enum:__anon177	file:
FCGI_STATE_PREPARE_WRITE	mod_fastcgi.c	/^	FCGI_STATE_PREPARE_WRITE,$/;"	e	enum:__anon190	file:
FCGI_STATE_PREPARE_WRITE	mod_scgi.c	/^	FCGI_STATE_PREPARE_WRITE,$/;"	e	enum:__anon177	file:
FCGI_STATE_READ	mod_fastcgi.c	/^	FCGI_STATE_READ$/;"	e	enum:__anon190	file:
FCGI_STATE_READ	mod_scgi.c	/^	FCGI_STATE_WRITE, FCGI_STATE_READ$/;"	e	enum:__anon177	file:
FCGI_STATE_UNSET	mod_fastcgi.c	/^	FCGI_STATE_UNSET,$/;"	e	enum:__anon190	file:
FCGI_STATE_WRITE	mod_fastcgi.c	/^	FCGI_STATE_WRITE,$/;"	e	enum:__anon190	file:
FCGI_STATE_WRITE	mod_scgi.c	/^	FCGI_STATE_WRITE, FCGI_STATE_READ$/;"	e	enum:__anon177	file:
FCGI_STDERR	fastcgi.h	56;"	d
FCGI_STDIN	fastcgi.h	54;"	d
FCGI_STDOUT	fastcgi.h	55;"	d
FCGI_UNKNOWN_ROLE	fastcgi.h	114;"	d
FCGI_UNKNOWN_TYPE	fastcgi.h	60;"	d
FCGI_UnknownTypeBody	fastcgi.h	/^} FCGI_UnknownTypeBody;$/;"	t	typeref:struct:__anon121
FCGI_UnknownTypeRecord	fastcgi.h	/^} FCGI_UnknownTypeRecord;$/;"	t	typeref:struct:__anon122
FCGI_VERSION_1	fastcgi.h	45;"	d
FDEVENT_ERR	fdevent.h	70;"	d
FDEVENT_HANDLED_ERROR	mod_cgi.c	/^	FDEVENT_HANDLED_NOT_FINISHED, FDEVENT_HANDLED_ERROR$/;"	e	enum:__anon115	file:
FDEVENT_HANDLED_FINISHED	mod_cgi.c	/^enum { FDEVENT_HANDLED_UNSET, FDEVENT_HANDLED_FINISHED,$/;"	e	enum:__anon115	file:
FDEVENT_HANDLED_NOT_FINISHED	mod_cgi.c	/^	FDEVENT_HANDLED_NOT_FINISHED, FDEVENT_HANDLED_ERROR$/;"	e	enum:__anon115	file:
FDEVENT_HANDLED_UNSET	mod_cgi.c	/^enum { FDEVENT_HANDLED_UNSET, FDEVENT_HANDLED_FINISHED,$/;"	e	enum:__anon115	file:
FDEVENT_HANDLER_FREEBSD_KQUEUE	fdevent.h	/^	FDEVENT_HANDLER_FREEBSD_KQUEUE,$/;"	e	enum:__anon4
FDEVENT_HANDLER_LINUX_RTSIG	fdevent.h	/^	FDEVENT_HANDLER_LINUX_RTSIG,$/;"	e	enum:__anon4
FDEVENT_HANDLER_LINUX_SYSEPOLL	fdevent.h	/^	FDEVENT_HANDLER_LINUX_SYSEPOLL,$/;"	e	enum:__anon4
FDEVENT_HANDLER_POLL	fdevent.h	/^	FDEVENT_HANDLER_POLL,$/;"	e	enum:__anon4
FDEVENT_HANDLER_SELECT	fdevent.h	/^	FDEVENT_HANDLER_SELECT,$/;"	e	enum:__anon4
FDEVENT_HANDLER_SOLARIS_DEVPOLL	fdevent.h	/^	FDEVENT_HANDLER_SOLARIS_DEVPOLL,$/;"	e	enum:__anon4
FDEVENT_HANDLER_SOLARIS_PORT	fdevent.h	/^	FDEVENT_HANDLER_SOLARIS_PORT$/;"	e	enum:__anon4
FDEVENT_HANDLER_UNSET	fdevent.h	/^typedef enum { FDEVENT_HANDLER_UNSET,$/;"	e	enum:__anon4
FDEVENT_HUP	fdevent.h	71;"	d
FDEVENT_IN	fdevent.h	67;"	d
FDEVENT_NVAL	fdevent.h	72;"	d
FDEVENT_OUT	fdevent.h	69;"	d
FDEVENT_PRI	fdevent.h	68;"	d
FD_EVENT_TYPE_CGI_CONNECTION	fdevent.h	/^	FD_EVENT_TYPE_CGI_CONNECTION$/;"	e	enum:__anon3
FD_EVENT_TYPE_CONNECTION	fdevent.h	/^	FD_EVENT_TYPE_CONNECTION,$/;"	e	enum:__anon3
FD_EVENT_TYPE_DIRWATCH	fdevent.h	/^	FD_EVENT_TYPE_DIRWATCH,$/;"	e	enum:__anon3
FD_EVENT_TYPE_FCGI_CONNECTION	fdevent.h	/^	FD_EVENT_TYPE_FCGI_CONNECTION,$/;"	e	enum:__anon3
FD_EVENT_TYPE_UNSET	fdevent.h	/^typedef enum { FD_EVENT_TYPE_UNSET = -1,$/;"	e	enum:__anon3
FF	md5.c	95;"	d	file:
FIELD_FORMAT	mod_accesslog.c	/^	enum { FIELD_UNSET, FIELD_STRING, FIELD_FORMAT } type;$/;"	e	enum:__anon66::__anon67	file:
FIELD_STRING	mod_accesslog.c	/^	enum { FIELD_UNSET, FIELD_STRING, FIELD_FORMAT } type;$/;"	e	enum:__anon66::__anon67	file:
FIELD_UNSET	mod_accesslog.c	/^	enum { FIELD_UNSET, FIELD_STRING, FIELD_FORMAT } type;$/;"	e	enum:__anon66::__anon67	file:
FILE_CACHE_MAX	settings.h	7;"	d
FILE_CHUNK	chunk.h	/^	enum { UNUSED_CHUNK, MEM_CHUNK, FILE_CHUNK } type;$/;"	e	enum:chunk::__anon8
FOO	mod_mysql_vhost.c	294;"	d	file:
FOO	mod_mysql_vhost.c	305;"	d	file:
FORMAT_BYTES_IN	mod_accesslog.c	/^		FORMAT_BYTES_IN,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_BYTES_OUT	mod_accesslog.c	/^		FORMAT_BYTES_OUT,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_BYTES_OUT_NO_HEADER	mod_accesslog.c	/^		FORMAT_BYTES_OUT_NO_HEADER,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_CONNECTION_STATUS	mod_accesslog.c	/^		FORMAT_CONNECTION_STATUS,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_COOKIE	mod_accesslog.c	/^		FORMAT_COOKIE,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_ENV	mod_accesslog.c	/^		FORMAT_ENV,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_FILENAME	mod_accesslog.c	/^		FORMAT_FILENAME,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_HEADER	mod_accesslog.c	/^		FORMAT_HEADER,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_HTTP_HOST	mod_accesslog.c	/^		FORMAT_HTTP_HOST,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_LOCAL_ADDR	mod_accesslog.c	/^		FORMAT_LOCAL_ADDR,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_PERCENT	mod_accesslog.c	/^		FORMAT_PERCENT,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_QUERY_STRING	mod_accesslog.c	/^		FORMAT_QUERY_STRING,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_REMOTE_ADDR	mod_accesslog.c	/^		FORMAT_REMOTE_ADDR,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_REMOTE_HOST	mod_accesslog.c	/^		FORMAT_REMOTE_HOST,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_REMOTE_IDENT	mod_accesslog.c	/^		FORMAT_REMOTE_IDENT,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_REMOTE_USER	mod_accesslog.c	/^		FORMAT_REMOTE_USER,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_REQUEST_LINE	mod_accesslog.c	/^		FORMAT_REQUEST_LINE,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_REQUEST_METHOD	mod_accesslog.c	/^		FORMAT_REQUEST_METHOD,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_REQUEST_PROTOCOL	mod_accesslog.c	/^		FORMAT_REQUEST_PROTOCOL,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_RESPONSE_HEADER	mod_accesslog.c	/^		FORMAT_RESPONSE_HEADER$/;"	e	enum:__anon64::__anon65	file:
FORMAT_SERVER_NAME	mod_accesslog.c	/^		FORMAT_SERVER_NAME,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_SERVER_PORT	mod_accesslog.c	/^		FORMAT_SERVER_PORT,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_STATUS	mod_accesslog.c	/^		FORMAT_STATUS,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_TIMESTAMP	mod_accesslog.c	/^		FORMAT_TIMESTAMP,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_TIME_USED	mod_accesslog.c	/^		FORMAT_TIME_USED,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_TIME_USED_MS	mod_accesslog.c	/^		FORMAT_TIME_USED_MS,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_UNSET	mod_accesslog.c	/^		FORMAT_UNSET,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_UNSUPPORTED	mod_accesslog.c	/^		FORMAT_UNSUPPORTED,$/;"	e	enum:__anon64::__anon65	file:
FORMAT_URL	mod_accesslog.c	/^		FORMAT_URL,$/;"	e	enum:__anon64::__anon65	file:
FREE	proc_open.c	461;"	d	file:
FREE_FUNC	mod_access.c	/^FREE_FUNC(mod_access_free)$/;"	f
FREE_FUNC	mod_accesslog.c	/^FREE_FUNC(mod_accesslog_free)$/;"	f
FREE_FUNC	mod_alias.c	/^FREE_FUNC(mod_alias_free)$/;"	f
FREE_FUNC	mod_auth.c	/^FREE_FUNC(mod_auth_free)$/;"	f
FREE_FUNC	mod_cgi.c	/^FREE_FUNC(mod_cgi_free)$/;"	f
FREE_FUNC	mod_cml.c	/^FREE_FUNC(mod_cml_free)$/;"	f
FREE_FUNC	mod_compress.c	/^FREE_FUNC(mod_compress_free)$/;"	f
FREE_FUNC	mod_dirlisting.c	/^FREE_FUNC(mod_dirlisting_free)$/;"	f
FREE_FUNC	mod_evasive.c	/^FREE_FUNC(mod_evasive_free)$/;"	f
FREE_FUNC	mod_evhost.c	/^FREE_FUNC(mod_evhost_free)$/;"	f
FREE_FUNC	mod_expire.c	/^FREE_FUNC(mod_expire_free)$/;"	f
FREE_FUNC	mod_extforward.c	/^FREE_FUNC(mod_extforward_free)$/;"	f
FREE_FUNC	mod_fastcgi.c	/^FREE_FUNC(mod_fastcgi_free)$/;"	f
FREE_FUNC	mod_flv_streaming.c	/^FREE_FUNC(mod_flv_streaming_free)$/;"	f
FREE_FUNC	mod_indexfile.c	/^FREE_FUNC(mod_indexfile_free)$/;"	f
FREE_FUNC	mod_magnet.c	/^FREE_FUNC(mod_magnet_free)$/;"	f
FREE_FUNC	mod_proxy.c	/^FREE_FUNC(mod_proxy_free)$/;"	f
FREE_FUNC	mod_redirect.c	/^FREE_FUNC(mod_redirect_free)$/;"	f
FREE_FUNC	mod_rewrite.c	/^FREE_FUNC(mod_rewrite_free)$/;"	f
FREE_FUNC	mod_rrdtool.c	/^FREE_FUNC(mod_rrd_free)$/;"	f
FREE_FUNC	mod_scgi.c	/^FREE_FUNC(mod_scgi_free)$/;"	f
FREE_FUNC	mod_secure_download.c	/^FREE_FUNC(mod_secdownload_free)$/;"	f
FREE_FUNC	mod_setenv.c	/^FREE_FUNC(mod_setenv_free)$/;"	f
FREE_FUNC	mod_simple_vhost.c	/^FREE_FUNC(mod_simple_vhost_free)$/;"	f
FREE_FUNC	mod_skeleton.c	/^FREE_FUNC(mod_skeleton_free)$/;"	f
FREE_FUNC	mod_ssi.c	/^FREE_FUNC(mod_ssi_free)$/;"	f
FREE_FUNC	mod_staticfile.c	/^FREE_FUNC(mod_staticfile_free)$/;"	f
FREE_FUNC	mod_status.c	/^FREE_FUNC(mod_status_free)$/;"	f
FREE_FUNC	mod_trigger_b4_dl.c	/^FREE_FUNC(mod_trigger_b4_dl_free)$/;"	f
FREE_FUNC	mod_userdir.c	/^FREE_FUNC(mod_userdir_free)$/;"	f
FREE_FUNC	mod_usertrack.c	/^FREE_FUNC(mod_usertrack_free)$/;"	f
FREE_FUNC	mod_webdav.c	/^FREE_FUNC(mod_webdav_free)$/;"	f
FREE_FUNC	plugin.h	16;"	d
FindActions	lemon.c	/^void FindActions(lemp)$/;"	f
FindFirstSets	lemon.c	/^void FindFirstSets(lemp)$/;"	f
FindFollowSets	lemon.c	/^void FindFollowSets(lemp)$/;"	f
FindLinks	lemon.c	/^void FindLinks(lemp)$/;"	f
FindRulePrecedences	lemon.c	/^void FindRulePrecedences(xp)$/;"	f
FindStates	lemon.c	/^void FindStates(lemp)$/;"	f
G	md5.c	82;"	d	file:
GByte	network_writev.c	198;"	d	file:
GG	md5.c	100;"	d	file:
H	md5.c	83;"	d	file:
HANDLER_COMEBACK	settings.h	/^	HANDLER_COMEBACK,$/;"	e	enum:__anon1
HANDLER_ERROR	settings.h	/^	HANDLER_ERROR,$/;"	e	enum:__anon1
HANDLER_FINISHED	settings.h	/^	HANDLER_FINISHED,$/;"	e	enum:__anon1
HANDLER_GO_ON	settings.h	/^	HANDLER_GO_ON,$/;"	e	enum:__anon1
HANDLER_UNSET	settings.h	/^typedef enum { HANDLER_UNSET,$/;"	e	enum:__anon1
HANDLER_WAIT_FOR_EVENT	settings.h	/^	HANDLER_WAIT_FOR_EVENT,$/;"	e	enum:__anon1
HANDLER_WAIT_FOR_FD	settings.h	/^	HANDLER_WAIT_FOR_FD$/;"	e	enum:__anon1
HASH	http_auth_digest.h	/^typedef unsigned char HASH[HASHLEN];$/;"	t
HASH	mod_cml_funcs.c	/^typedef unsigned char HASH[HASHLEN];$/;"	t	file:
HASH	mod_cml_lua.c	/^typedef unsigned char HASH[HASHLEN];$/;"	t	file:
HASH	mod_secure_download.c	/^typedef unsigned char HASH[HASHLEN];$/;"	t	file:
HASHHEX	http_auth_digest.h	/^typedef char HASHHEX[HASHHEXLEN + 1];$/;"	t
HASHHEX	mod_cml_funcs.c	/^typedef char HASHHEX[HASHHEXLEN + 1];$/;"	t	file:
HASHHEX	mod_cml_lua.c	/^typedef char HASHHEX[HASHHEXLEN + 1];$/;"	t	file:
HASHHEX	mod_secure_download.c	/^typedef char HASHHEX[HASHHEXLEN + 1];$/;"	t	file:
HASHHEXLEN	http_auth_digest.h	10;"	d
HASHHEXLEN	mod_cml_funcs.c	28;"	d	file:
HASHHEXLEN	mod_cml_lua.c	21;"	d	file:
HASHHEXLEN	mod_secure_download.c	23;"	d	file:
HASHLEN	http_auth_digest.h	8;"	d
HASHLEN	mod_cml_funcs.c	26;"	d	file:
HASHLEN	mod_cml_lua.c	19;"	d	file:
HASHLEN	mod_secure_download.c	21;"	d	file:
HAVE_CRYPT	http_auth.c	15;"	d	file:
HAVE_POSIX_FADVISE	network_linux_sendfile.c	29;"	d	file:
HH	md5.c	105;"	d	file:
HTTP_ACCEPT_ENCODING_BZIP2	mod_compress.c	46;"	d	file:
HTTP_ACCEPT_ENCODING_COMPRESS	mod_compress.c	45;"	d	file:
HTTP_ACCEPT_ENCODING_DEFLATE	mod_compress.c	44;"	d	file:
HTTP_ACCEPT_ENCODING_GZIP	mod_compress.c	43;"	d	file:
HTTP_ACCEPT_ENCODING_IDENTITY	mod_compress.c	42;"	d	file:
HTTP_AUTH_BASIC	keyvalue.h	/^typedef enum { HTTP_AUTH_BASIC, HTTP_AUTH_DIGEST } httpauth_type;$/;"	e	enum:__anon162
HTTP_AUTH_DIGEST	keyvalue.h	/^typedef enum { HTTP_AUTH_BASIC, HTTP_AUTH_DIGEST } httpauth_type;$/;"	e	enum:__anon162
HTTP_CONNECTION	base.h	143;"	d
HTTP_CONTENT_LENGTH	base.h	144;"	d
HTTP_DATE	base.h	145;"	d
HTTP_LOCATION	base.h	146;"	d
HTTP_METHOD_CHECKIN	keyvalue.h	/^	HTTP_METHOD_CHECKIN,$/;"	e	enum:__anon157
HTTP_METHOD_CHECKOUT	keyvalue.h	/^	HTTP_METHOD_CHECKOUT,$/;"	e	enum:__anon157
HTTP_METHOD_CONNECT	keyvalue.h	/^	HTTP_METHOD_CONNECT$/;"	e	enum:__anon157
HTTP_METHOD_COPY	keyvalue.h	/^	HTTP_METHOD_COPY,$/;"	e	enum:__anon157
HTTP_METHOD_DELETE	keyvalue.h	/^	HTTP_METHOD_DELETE,$/;"	e	enum:__anon157
HTTP_METHOD_GET	keyvalue.h	/^	HTTP_METHOD_GET,$/;"	e	enum:__anon157
HTTP_METHOD_HEAD	keyvalue.h	/^	HTTP_METHOD_HEAD,$/;"	e	enum:__anon157
HTTP_METHOD_LABEL	keyvalue.h	/^	HTTP_METHOD_LABEL,$/;"	e	enum:__anon157
HTTP_METHOD_LOCK	keyvalue.h	/^	HTTP_METHOD_LOCK,$/;"	e	enum:__anon157
HTTP_METHOD_MERGE	keyvalue.h	/^	HTTP_METHOD_MERGE,$/;"	e	enum:__anon157
HTTP_METHOD_MKACTIVITY	keyvalue.h	/^	HTTP_METHOD_MKACTIVITY,$/;"	e	enum:__anon157
HTTP_METHOD_MKCOL	keyvalue.h	/^	HTTP_METHOD_MKCOL,$/;"	e	enum:__anon157
HTTP_METHOD_MOVE	keyvalue.h	/^	HTTP_METHOD_MOVE,$/;"	e	enum:__anon157
HTTP_METHOD_OPTIONS	keyvalue.h	/^	HTTP_METHOD_OPTIONS,$/;"	e	enum:__anon157
HTTP_METHOD_POST	keyvalue.h	/^	HTTP_METHOD_POST,$/;"	e	enum:__anon157
HTTP_METHOD_PROPFIND	keyvalue.h	/^	HTTP_METHOD_PROPFIND,		\/* WebDAV *\/$/;"	e	enum:__anon157
HTTP_METHOD_PROPPATCH	keyvalue.h	/^	HTTP_METHOD_PROPPATCH,$/;"	e	enum:__anon157
HTTP_METHOD_PUT	keyvalue.h	/^	HTTP_METHOD_PUT,$/;"	e	enum:__anon157
HTTP_METHOD_REPORT	keyvalue.h	/^	HTTP_METHOD_REPORT,			\/* DeltaV *\/$/;"	e	enum:__anon157
HTTP_METHOD_UNCHECKOUT	keyvalue.h	/^	HTTP_METHOD_UNCHECKOUT,$/;"	e	enum:__anon157
HTTP_METHOD_UNLOCK	keyvalue.h	/^	HTTP_METHOD_UNLOCK,$/;"	e	enum:__anon157
HTTP_METHOD_UNSET	keyvalue.h	/^	HTTP_METHOD_UNSET = -1,$/;"	e	enum:__anon157
HTTP_METHOD_VERSION_CONTROL	keyvalue.h	/^	HTTP_METHOD_VERSION_CONTROL,$/;"	e	enum:__anon157
HTTP_STATUS	base.h	142;"	d
HTTP_TRANSFER_ENCODING_CHUNKED	base.h	/^		HTTP_TRANSFER_ENCODING_IDENTITY, HTTP_TRANSFER_ENCODING_CHUNKED$/;"	e	enum:__anon25::__anon26
HTTP_TRANSFER_ENCODING_IDENTITY	base.h	/^		HTTP_TRANSFER_ENCODING_IDENTITY, HTTP_TRANSFER_ENCODING_CHUNKED$/;"	e	enum:__anon25::__anon26
HTTP_VERSION_1_0	keyvalue.h	/^typedef enum { HTTP_VERSION_UNSET = -1, HTTP_VERSION_1_0, HTTP_VERSION_1_1$/;"	e	enum:__anon158
HTTP_VERSION_1_1	keyvalue.h	/^typedef enum { HTTP_VERSION_UNSET = -1, HTTP_VERSION_1_0, HTTP_VERSION_1_1$/;"	e	enum:__anon158
HTTP_VERSION_UNSET	keyvalue.h	/^typedef enum { HTTP_VERSION_UNSET = -1, HTTP_VERSION_1_0, HTTP_VERSION_1_1$/;"	e	enum:__anon158
I	md5.c	84;"	d	file:
II	md5.c	110;"	d	file:
IN	http_auth_digest.h	13;"	d
IN	http_auth_digest.h	15;"	d
IN	mod_cml_funcs.c	31;"	d	file:
IN	mod_cml_funcs.c	33;"	d	file:
IN	mod_cml_lua.c	24;"	d	file:
IN	mod_cml_lua.c	26;"	d	file:
IN	mod_secure_download.c	26;"	d	file:
IN	mod_secure_download.c	28;"	d	file:
INCOMPLETE	lemon.c	/^		INCOMPLETE				\/* shift computations *\/$/;"	e	enum:config::__anon199	file:
INET_NTOP_CACHE_MAX	settings.h	6;"	d
INITIALIZE	lemon.c	/^		INITIALIZE,$/;"	e	enum:pstate::e_state	file:
INIT_FUNC	mod_access.c	/^INIT_FUNC(mod_access_init)$/;"	f
INIT_FUNC	mod_accesslog.c	/^INIT_FUNC(mod_accesslog_init)$/;"	f
INIT_FUNC	mod_alias.c	/^INIT_FUNC(mod_alias_init)$/;"	f
INIT_FUNC	mod_auth.c	/^INIT_FUNC(mod_auth_init)$/;"	f
INIT_FUNC	mod_cgi.c	/^INIT_FUNC(mod_cgi_init)$/;"	f
INIT_FUNC	mod_cml.c	/^INIT_FUNC(mod_cml_init)$/;"	f
INIT_FUNC	mod_compress.c	/^INIT_FUNC(mod_compress_init)$/;"	f
INIT_FUNC	mod_dirlisting.c	/^INIT_FUNC(mod_dirlisting_init)$/;"	f
INIT_FUNC	mod_evasive.c	/^INIT_FUNC(mod_evasive_init)$/;"	f
INIT_FUNC	mod_evhost.c	/^INIT_FUNC(mod_evhost_init)$/;"	f
INIT_FUNC	mod_expire.c	/^INIT_FUNC(mod_expire_init)$/;"	f
INIT_FUNC	mod_extforward.c	/^INIT_FUNC(mod_extforward_init)$/;"	f
INIT_FUNC	mod_fastcgi.c	/^INIT_FUNC(mod_fastcgi_init)$/;"	f
INIT_FUNC	mod_flv_streaming.c	/^INIT_FUNC(mod_flv_streaming_init)$/;"	f
INIT_FUNC	mod_indexfile.c	/^INIT_FUNC(mod_indexfile_init)$/;"	f
INIT_FUNC	mod_magnet.c	/^INIT_FUNC(mod_magnet_init)$/;"	f
INIT_FUNC	mod_mysql_vhost.c	/^INIT_FUNC(mod_mysql_vhost_init)$/;"	f
INIT_FUNC	mod_proxy.c	/^INIT_FUNC(mod_proxy_init)$/;"	f
INIT_FUNC	mod_redirect.c	/^INIT_FUNC(mod_redirect_init)$/;"	f
INIT_FUNC	mod_rewrite.c	/^INIT_FUNC(mod_rewrite_init)$/;"	f
INIT_FUNC	mod_rrdtool.c	/^INIT_FUNC(mod_rrd_init)$/;"	f
INIT_FUNC	mod_scgi.c	/^INIT_FUNC(mod_scgi_init)$/;"	f
INIT_FUNC	mod_secure_download.c	/^INIT_FUNC(mod_secdownload_init)$/;"	f
INIT_FUNC	mod_setenv.c	/^INIT_FUNC(mod_setenv_init)$/;"	f
INIT_FUNC	mod_simple_vhost.c	/^INIT_FUNC(mod_simple_vhost_init)$/;"	f
INIT_FUNC	mod_skeleton.c	/^INIT_FUNC(mod_skeleton_init)$/;"	f
INIT_FUNC	mod_ssi.c	/^INIT_FUNC(mod_ssi_init)$/;"	f
INIT_FUNC	mod_staticfile.c	/^INIT_FUNC(mod_staticfile_init)$/;"	f
INIT_FUNC	mod_status.c	/^INIT_FUNC(mod_status_init)$/;"	f
INIT_FUNC	mod_trigger_b4_dl.c	/^INIT_FUNC(mod_trigger_b4_dl_init)$/;"	f
INIT_FUNC	mod_userdir.c	/^INIT_FUNC(mod_userdir_init)$/;"	f
INIT_FUNC	mod_usertrack.c	/^INIT_FUNC(mod_usertrack_init)$/;"	f
INIT_FUNC	mod_webdav.c	/^INIT_FUNC(mod_webdav_init)$/;"	f
INIT_FUNC	plugin.h	13;"	d
INTERFACE	configparser.c	155;"	d	file:
INTERFACE	lempar.c	27;"	d	file:
INTERFACE	mod_ssi_exprparser.c	36;"	d	file:
IN_RHS	lemon.c	/^		IN_RHS,$/;"	e	enum:pstate::e_state	file:
IP_TRUSTED	mod_extforward.c	319;"	d	file:
IP_UNTRUSTED	mod_extforward.c	320;"	d	file:
ISOPT	lemon.c	1993;"	d	file:
JOBLIST_FUNC	mod_fastcgi.c	/^JOBLIST_FUNC(mod_fastcgi_handle_joblist)$/;"	f
JOBLIST_FUNC	mod_scgi.c	/^JOBLIST_FUNC(mod_scgi_handle_joblist)$/;"	f
JOBLIST_FUNC	plugin.h	22;"	d
KByte	network_writev.c	196;"	d	file:
KVB	keyvalue.h	71;"	d
L	mod_magnet_cache.h	/^	lua_State *L;$/;"	m	struct:__anon155
LEFT	lemon.c	/^		LEFT,$/;"	e	enum:symbol::e_assoc	file:
LHS_ALIAS_1	lemon.c	/^		LHS_ALIAS_1,$/;"	e	enum:pstate::e_state	file:
LHS_ALIAS_2	lemon.c	/^		LHS_ALIAS_2,$/;"	e	enum:pstate::e_state	file:
LHS_ALIAS_3	lemon.c	/^		LHS_ALIAS_3,$/;"	e	enum:pstate::e_state	file:
LINESIZE	lemon.c	3492;"	d	file:
LINEWIDTH	lemon.c	1595;"	d	file:
LISTSIZE	lemon.c	1956;"	d	file:
LI_ltostr	buffer.c	/^int LI_ltostr(char *buf, long val) $/;"	f
LOCAL_SEND_BUFSIZE	network_openssl.c	47;"	d	file:
MAGNET_CONFIG_PHYSICAL_PATH	mod_magnet.c	24;"	d	file:
MAGNET_CONFIG_RAW_URL	mod_magnet.c	23;"	d	file:
MAGNET_ENV_PHYICAL_DOC_ROOT	mod_magnet.c	/^		MAGNET_ENV_PHYICAL_DOC_ROOT,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_PHYICAL_PATH	mod_magnet.c	/^		MAGNET_ENV_PHYICAL_PATH,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_PHYICAL_REL_PATH	mod_magnet.c	/^		MAGNET_ENV_PHYICAL_REL_PATH,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_REQUEST_METHOD	mod_magnet.c	/^		MAGNET_ENV_REQUEST_METHOD,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_REQUEST_ORIG_URI	mod_magnet.c	/^		MAGNET_ENV_REQUEST_ORIG_URI,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_REQUEST_PROTOCOL	mod_magnet.c	/^		MAGNET_ENV_REQUEST_PROTOCOL$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_REQUEST_URI	mod_magnet.c	/^		MAGNET_ENV_REQUEST_URI,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_UNSET	mod_magnet.c	/^		MAGNET_ENV_UNSET,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_URI_AUTHORITY	mod_magnet.c	/^		MAGNET_ENV_URI_AUTHORITY,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_URI_PATH	mod_magnet.c	/^		MAGNET_ENV_URI_PATH,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_URI_PATH_RAW	mod_magnet.c	/^		MAGNET_ENV_URI_PATH_RAW,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_URI_QUERY	mod_magnet.c	/^		MAGNET_ENV_URI_QUERY,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_ENV_URI_SCHEME	mod_magnet.c	/^		MAGNET_ENV_URI_SCHEME,$/;"	e	enum:__anon141::__anon142	file:
MAGNET_RESTART_REQUEST	mod_magnet.c	25;"	d	file:
MAP_FAILED	network_backends.h	42;"	d
MAP_FAILED	stat_cache.c	33;"	d	file:
MAP_FAILED	sys-mmap.h	20;"	d
MAP_FAILED	sys-mmap.h	6;"	d
MAP_SHARED	sys-mmap.h	8;"	d
MAXRHS	lemon.c	47;"	d	file:
MAXRHS	lemon.c	49;"	d	file:
MAX_HTTP_REQUEST_HEADER	settings.h	23;"	d
MByte	network_writev.c	197;"	d	file:
MD5Transform	md5.c	/^static void MD5Transform(state, block)$/;"	f	file:
MD5_CTX	md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon135
MD5_Final	md5.c	/^void MD5_Final(digest, context)$/;"	f
MD5_Init	md5.c	/^void MD5_Init(context)$/;"	f
MD5_Update	md5.c	/^void MD5_Update(context, _input, inputLen)$/;"	f
MD5_memcpy	md5.c	/^static void MD5_memcpy(output, input, len)$/;"	f	file:
MD5_memcpy	md5.c	62;"	d	file:
MD5_memset	md5.c	/^static void MD5_memset(output, value, len)$/;"	f	file:
MD5_memset	md5.c	67;"	d	file:
MEM_CHUNK	chunk.h	/^	enum { UNUSED_CHUNK, MEM_CHUNK, FILE_CHUNK } type;$/;"	e	enum:chunk::__anon8
MemoryCheck	lemon.c	322;"	d	file:
N	mod_dirlisting.c	812;"	d	file:
N	mod_redirect.c	241;"	d	file:
N	mod_redirect.c	349;"	d	file:
N	mod_rewrite.c	446;"	d	file:
N	mod_rewrite.c	559;"	d	file:
N	mod_ssi.c	1197;"	d	file:
N	mod_trigger_b4_dl.c	411;"	d	file:
NETWORK_BACKEND_FREEBSD_SENDFILE	network.c	/^	NETWORK_BACKEND_FREEBSD_SENDFILE,$/;"	e	enum:__anon179	file:
NETWORK_BACKEND_LINUX_SENDFILE	network.c	/^	NETWORK_BACKEND_LINUX_SENDFILE,$/;"	e	enum:__anon179	file:
NETWORK_BACKEND_SOLARIS_SENDFILEV	network.c	/^	NETWORK_BACKEND_SOLARIS_SENDFILEV$/;"	e	enum:__anon179	file:
NETWORK_BACKEND_UNSET	network.c	/^	NETWORK_BACKEND_UNSET,$/;"	e	enum:__anon179	file:
NETWORK_BACKEND_WRITE	network.c	/^	NETWORK_BACKEND_WRITE,$/;"	e	enum:__anon179	file:
NETWORK_BACKEND_WRITEV	network.c	/^	NETWORK_BACKEND_WRITEV,$/;"	e	enum:__anon179	file:
NEXT	lemon.c	1878;"	d	file:
NONE	lemon.c	/^		NONE,$/;"	e	enum:symbol::e_assoc	file:
NONTERMINAL	lemon.c	/^		NONTERMINAL$/;"	e	enum:symbol::__anon198	file:
NOT_USED	lemon.c	/^		NOT_USED				\/* Deleted by compression *\/$/;"	e	enum:action::e_action	file:
NO_OFFSET	lemon.c	255;"	d	file:
OPT_DBL	lemon.c	/^	enum { OPT_FLAG = 1, OPT_INT, OPT_DBL, OPT_STR,$/;"	e	enum:s_options::__anon196	file:
OPT_FDBL	lemon.c	/^		OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR$/;"	e	enum:s_options::__anon196	file:
OPT_FFLAG	lemon.c	/^		OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR$/;"	e	enum:s_options::__anon196	file:
OPT_FINT	lemon.c	/^		OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR$/;"	e	enum:s_options::__anon196	file:
OPT_FLAG	lemon.c	/^	enum { OPT_FLAG = 1, OPT_INT, OPT_DBL, OPT_STR,$/;"	e	enum:s_options::__anon196	file:
OPT_FSTR	lemon.c	/^		OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR$/;"	e	enum:s_options::__anon196	file:
OPT_INT	lemon.c	/^	enum { OPT_FLAG = 1, OPT_INT, OPT_DBL, OPT_STR,$/;"	e	enum:s_options::__anon196	file:
OPT_STR	lemon.c	/^	enum { OPT_FLAG = 1, OPT_INT, OPT_DBL, OPT_STR,$/;"	e	enum:s_options::__anon196	file:
OUT	http_auth_digest.h	17;"	d
OUT	mod_cml_funcs.c	35;"	d	file:
OUT	mod_cml_lua.c	28;"	d	file:
OUT	mod_secure_download.c	30;"	d	file:
O_BINARY	base.h	41;"	d
O_BINARY	stream.c	15;"	d	file:
O_LARGEFILE	base.h	45;"	d
O_LARGEFILE	log.c	31;"	d	file:
O_LARGEFILE	stat_cache.c	37;"	d	file:
OptArg	lemon.c	/^char *OptArg(n)$/;"	f
OptErr	lemon.c	/^void OptErr(n)$/;"	f
OptInit	lemon.c	/^int OptInit(a, o, err)$/;"	f
OptNArgs	lemon.c	/^int OptNArgs()$/;"	f
OptPrint	lemon.c	/^void OptPrint()$/;"	f
PADDING	md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PATCH	configfile.c	341;"	d	file:
PATCH	configfile.c	559;"	d	file:
PATCH	mod_access.c	139;"	d	file:
PATCH	mod_access.c	97;"	d	file:
PATCH	mod_accesslog.c	752;"	d	file:
PATCH	mod_accesslog.c	817;"	d	file:
PATCH	mod_alias.c	150;"	d	file:
PATCH	mod_alias.c	191;"	d	file:
PATCH	mod_auth.c	103;"	d	file:
PATCH	mod_auth.c	230;"	d	file:
PATCH	mod_cgi.c	1489;"	d	file:
PATCH	mod_cgi.c	1530;"	d	file:
PATCH	mod_cml.c	167;"	d	file:
PATCH	mod_cml.c	227;"	d	file:
PATCH	mod_compress.c	725;"	d	file:
PATCH	mod_compress.c	777;"	d	file:
PATCH	mod_dirlisting.c	376;"	d	file:
PATCH	mod_dirlisting.c	465;"	d	file:
PATCH	mod_evasive.c	113;"	d	file:
PATCH	mod_evasive.c	155;"	d	file:
PATCH	mod_evhost.c	278;"	d	file:
PATCH	mod_evhost.c	322;"	d	file:
PATCH	mod_expire.c	312;"	d	file:
PATCH	mod_expire.c	353;"	d	file:
PATCH	mod_extforward.c	211;"	d	file:
PATCH	mod_extforward.c	253;"	d	file:
PATCH	mod_fastcgi.c	4364;"	d	file:
PATCH	mod_fastcgi.c	4416;"	d	file:
PATCH	mod_flv_streaming.c	135;"	d	file:
PATCH	mod_flv_streaming.c	178;"	d	file:
PATCH	mod_indexfile.c	132;"	d	file:
PATCH	mod_indexfile.c	178;"	d	file:
PATCH	mod_magnet.c	154;"	d	file:
PATCH	mod_magnet.c	201;"	d	file:
PATCH	mod_mysql_vhost.c	328;"	d	file:
PATCH	mod_mysql_vhost.c	381;"	d	file:
PATCH	mod_proxy.c	1075;"	d	file:
PATCH	mod_proxy.c	1126;"	d	file:
PATCH	mod_rrdtool.c	315;"	d	file:
PATCH	mod_rrdtool.c	369;"	d	file:
PATCH	mod_scgi.c	3215;"	d	file:
PATCH	mod_scgi.c	3261;"	d	file:
PATCH	mod_secure_download.c	192;"	d	file:
PATCH	mod_secure_download.c	250;"	d	file:
PATCH	mod_setenv.c	153;"	d	file:
PATCH	mod_setenv.c	205;"	d	file:
PATCH	mod_simple_vhost.c	214;"	d	file:
PATCH	mod_simple_vhost.c	280;"	d	file:
PATCH	mod_skeleton.c	160;"	d	file:
PATCH	mod_skeleton.c	202;"	d	file:
PATCH	mod_ssi.c	1369;"	d	file:
PATCH	mod_ssi.c	1410;"	d	file:
PATCH	mod_staticfile.c	139;"	d	file:
PATCH	mod_staticfile.c	186;"	d	file:
PATCH	mod_status.c	904;"	d	file:
PATCH	mod_trigger_b4_dl.c	298;"	d	file:
PATCH	mod_trigger_b4_dl.c	401;"	d	file:
PATCH	mod_userdir.c	155;"	d	file:
PATCH	mod_userdir.c	216;"	d	file:
PATCH	mod_usertrack.c	175;"	d	file:
PATCH	mod_usertrack.c	227;"	d	file:
PATCH_OPTION	mod_webdav.c	498;"	d	file:
PHYSICALPATH_FUNC	mod_alias.c	/^PHYSICALPATH_FUNC(mod_alias_physical_handler)$/;"	f
PHYSICALPATH_FUNC	mod_compress.c	/^PHYSICALPATH_FUNC(mod_compress_physical)$/;"	f
PHYSICALPATH_FUNC	plugin.h	23;"	d
PLUGIN_DATA	connections.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon136	file:
PLUGIN_DATA	http_auth.h	/^	PLUGIN_DATA;$/;"	m	struct:__anon78
PLUGIN_DATA	mod_access.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon132	file:
PLUGIN_DATA	mod_accesslog.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon70	file:
PLUGIN_DATA	mod_alias.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon56	file:
PLUGIN_DATA	mod_cgi.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon113	file:
PLUGIN_DATA	mod_cml.h	/^	PLUGIN_DATA;$/;"	m	struct:__anon61
PLUGIN_DATA	mod_compress.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon93	file:
PLUGIN_DATA	mod_dirlisting.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon85	file:
PLUGIN_DATA	mod_evasive.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon59	file:
PLUGIN_DATA	mod_evhost.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon138	file:
PLUGIN_DATA	mod_expire.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon81	file:
PLUGIN_DATA	mod_extforward.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon215	file:
PLUGIN_DATA	mod_fastcgi.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon189	file:
PLUGIN_DATA	mod_flv_streaming.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon130	file:
PLUGIN_DATA	mod_indexfile.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon206	file:
PLUGIN_DATA	mod_magnet.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon140	file:
PLUGIN_DATA	mod_mysql_vhost.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon165	file:
PLUGIN_DATA	mod_proxy.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon102	file:
PLUGIN_DATA	mod_redirect.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon99	file:
PLUGIN_DATA	mod_rewrite.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon128	file:
PLUGIN_DATA	mod_rrdtool.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon218	file:
PLUGIN_DATA	mod_scgi.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon176	file:
PLUGIN_DATA	mod_secure_download.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon16	file:
PLUGIN_DATA	mod_setenv.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon73	file:
PLUGIN_DATA	mod_simple_vhost.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon50	file:
PLUGIN_DATA	mod_skeleton.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon13	file:
PLUGIN_DATA	mod_ssi.h	/^	PLUGIN_DATA;$/;"	m	struct:__anon168
PLUGIN_DATA	mod_staticfile.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon108	file:
PLUGIN_DATA	mod_status.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon75	file:
PLUGIN_DATA	mod_trigger_b4_dl.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon63	file:
PLUGIN_DATA	mod_userdir.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon208	file:
PLUGIN_DATA	mod_usertrack.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon181	file:
PLUGIN_DATA	mod_webdav.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon52	file:
PLUGIN_DATA	plugin.c	/^	PLUGIN_DATA;$/;"	m	struct:__anon209	file:
PLUGIN_DATA	plugin.h	27;"	d
PLUGIN_FUNC_CLEANUP	plugin.c	/^	PLUGIN_FUNC_CLEANUP,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_CONNECTION_RESET	plugin.c	/^	PLUGIN_FUNC_CONNECTION_RESET,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_CONNECTION_CLOSE	plugin.c	/^	PLUGIN_FUNC_HANDLE_CONNECTION_CLOSE,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_DOCROOT	plugin.c	/^	PLUGIN_FUNC_HANDLE_DOCROOT,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_JOBLIST	plugin.c	/^	PLUGIN_FUNC_HANDLE_JOBLIST,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_PHYSICAL	plugin.c	/^	PLUGIN_FUNC_HANDLE_PHYSICAL,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_REQUEST_DONE	plugin.c	/^	PLUGIN_FUNC_HANDLE_REQUEST_DONE,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_SIGHUP	plugin.c	/^	PLUGIN_FUNC_HANDLE_SIGHUP,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_SUBREQUEST	plugin.c	/^	PLUGIN_FUNC_HANDLE_SUBREQUEST,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_SUBREQUEST_START	plugin.c	/^	PLUGIN_FUNC_HANDLE_SUBREQUEST_START,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_TRIGGER	plugin.c	/^	PLUGIN_FUNC_HANDLE_TRIGGER,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_URI_CLEAN	plugin.c	/^	PLUGIN_FUNC_HANDLE_URI_CLEAN,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_HANDLE_URI_RAW	plugin.c	/^	PLUGIN_FUNC_HANDLE_URI_RAW,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_INIT	plugin.c	/^	PLUGIN_FUNC_INIT,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_SET_DEFAULTS	plugin.c	/^	PLUGIN_FUNC_SET_DEFAULTS,$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_SIZEOF	plugin.c	/^	PLUGIN_FUNC_SIZEOF$/;"	e	enum:__anon210	file:
PLUGIN_FUNC_UNSET	plugin.c	/^	PLUGIN_FUNC_UNSET,$/;"	e	enum:__anon210	file:
PLUGIN_INIT	plugin.c	119;"	d	file:
PLUGIN_TO_SLOT	plugin.c	/^PLUGIN_TO_SLOT(PLUGIN_FUNC_HANDLE_URI_CLEAN, handle_uri_clean)$/;"	f
PLUGIN_TO_SLOT	plugin.c	243;"	d	file:
PLUGIN_TO_SLOT	plugin.c	288;"	d	file:
PLUGIN_TO_SLOT	plugin.c	289;"	d	file:
PLUGIN_TO_SLOT	plugin.c	325;"	d	file:
PLUGIN_TO_SLOT	plugin.c	394;"	d	file:
PLUGIN_TO_SLOT	plugin.c	425;"	d	file:
POINTER	md5.h	36;"	d
PRECEDENCE_MARK_1	lemon.c	/^		PRECEDENCE_MARK_1,$/;"	e	enum:pstate::e_state	file:
PRECEDENCE_MARK_2	lemon.c	/^		PRECEDENCE_MARK_2,$/;"	e	enum:pstate::e_state	file:
PREFIXLIMIT	lemon.c	1596;"	d	file:
PRIVATE	lemon.c	44;"	d	file:
PROC_STATE_DIED	mod_fastcgi.c	/^		PROC_STATE_DIED,		\/* marked as dead, should be restarted *\/$/;"	e	enum:fcgi_proc::__anon182	file:
PROC_STATE_DIED	mod_scgi.c	/^		PROC_STATE_DIED,		\/* marked as dead, should be restarted *\/$/;"	e	enum:scgi_proc::__anon170	file:
PROC_STATE_DIED_WAIT_FOR_PID	mod_fastcgi.c	/^		PROC_STATE_DIED_WAIT_FOR_PID,	\/* *\/$/;"	e	enum:fcgi_proc::__anon182	file:
PROC_STATE_DIED_WAIT_FOR_PID	mod_scgi.c	/^		PROC_STATE_DIED_WAIT_FOR_PID,$/;"	e	enum:scgi_proc::__anon170	file:
PROC_STATE_DISABLED	mod_scgi.c	/^		PROC_STATE_DISABLED		\/* proc disabled as it resulted in an error *\/$/;"	e	enum:scgi_proc::__anon170	file:
PROC_STATE_KILLED	mod_fastcgi.c	/^		PROC_STATE_KILLED		\/* was killed as we don't have the load anymore $/;"	e	enum:fcgi_proc::__anon182	file:
PROC_STATE_KILLED	mod_scgi.c	/^		PROC_STATE_KILLED,		\/* was killed as we don't have the load anymore $/;"	e	enum:scgi_proc::__anon170	file:
PROC_STATE_OVERLOADED	mod_fastcgi.c	/^		PROC_STATE_OVERLOADED,	\/* listen-queue is full, don't send anything to $/;"	e	enum:fcgi_proc::__anon182	file:
PROC_STATE_RUNNING	mod_fastcgi.c	/^		PROC_STATE_RUNNING,		\/* alive *\/$/;"	e	enum:fcgi_proc::__anon182	file:
PROC_STATE_RUNNING	mod_scgi.c	/^		PROC_STATE_RUNNING,		\/* alive *\/$/;"	e	enum:scgi_proc::__anon170	file:
PROC_STATE_UNSET	mod_fastcgi.c	/^		PROC_STATE_UNSET,		\/* init-phase *\/$/;"	e	enum:fcgi_proc::__anon182	file:
PROC_STATE_UNSET	mod_scgi.c	/^	enum { PROC_STATE_UNSET,	\/* init-phase *\/$/;"	e	enum:scgi_proc::__anon170	file:
PROT_READ	sys-mmap.h	9;"	d
PROT_SHARED	sys-mmap.h	7;"	d
PROXY_BALANCE_FAIR	mod_proxy.c	/^	PROXY_BALANCE_FAIR,$/;"	e	enum:__anon100	file:
PROXY_BALANCE_HASH	mod_proxy.c	/^	PROXY_BALANCE_HASH,$/;"	e	enum:__anon100	file:
PROXY_BALANCE_RR	mod_proxy.c	/^	PROXY_BALANCE_RR$/;"	e	enum:__anon100	file:
PROXY_BALANCE_UNSET	mod_proxy.c	/^	PROXY_BALANCE_UNSET,$/;"	e	enum:__anon100	file:
PROXY_END_REQUEST	mod_proxy.c	/^enum { PROXY_STDOUT, PROXY_END_REQUEST };$/;"	e	enum:__anon104	file:
PROXY_RETRY_TIMEOUT	mod_proxy.c	38;"	d	file:
PROXY_STATE_CONNECT	mod_proxy.c	/^	PROXY_STATE_CONNECT,$/;"	e	enum:__anon103	file:
PROXY_STATE_ERROR	mod_proxy.c	/^	PROXY_STATE_ERROR$/;"	e	enum:__anon103	file:
PROXY_STATE_INIT	mod_proxy.c	/^	PROXY_STATE_INIT,$/;"	e	enum:__anon103	file:
PROXY_STATE_PREPARE_WRITE	mod_proxy.c	/^	PROXY_STATE_PREPARE_WRITE,$/;"	e	enum:__anon103	file:
PROXY_STATE_READ	mod_proxy.c	/^	PROXY_STATE_READ,$/;"	e	enum:__anon103	file:
PROXY_STATE_WRITE	mod_proxy.c	/^	PROXY_STATE_WRITE,$/;"	e	enum:__anon103	file:
PROXY_STDOUT	mod_proxy.c	/^enum { PROXY_STDOUT, PROXY_END_REQUEST };$/;"	e	enum:__anon104	file:
Parse	lemon.c	/^void Parse(gp)$/;"	f
Parse	lempar.c	/^void Parse(void *yyp,			\/* The parser *\/$/;"	f
ParseAlloc	lempar.c	/^void *ParseAlloc(void *(*mallocProc) (size_t))$/;"	f
ParseFree	lempar.c	/^void ParseFree(void *p,			\/* The parser to be deleted *\/$/;"	f
ParseTokenName	lempar.c	/^const char *ParseTokenName(int tokenType)$/;"	f
ParseTrace	lempar.c	/^void ParseTrace(FILE * TraceFILE, char *zTracePrompt)$/;"	f
PlinkPrint	lemon.c	/^PRIVATE void PlinkPrint(out, plp, tag)$/;"	f
Plink_add	lemon.c	/^void Plink_add(plpp, cfp)$/;"	f
Plink_copy	lemon.c	/^void Plink_copy(to, from)$/;"	f
Plink_delete	lemon.c	/^void Plink_delete(plp)$/;"	f
Plink_new	lemon.c	/^struct plink *Plink_new()$/;"	f
PrintAction	lemon.c	/^int PrintAction(struct action *ap, FILE * fp, int indent)$/;"	f
RD_RESOLVED	lemon.c	/^		RD_RESOLVED,			\/* Was reduce.  Precedence resolved conflict *\/$/;"	e	enum:action::e_action	file:
REDUCE	lemon.c	/^		REDUCE,$/;"	e	enum:action::e_action	file:
REQUESTDONE_FUNC	mod_accesslog.c	/^REQUESTDONE_FUNC(log_access_write)$/;"	f
REQUESTDONE_FUNC	mod_rrdtool.c	/^REQUESTDONE_FUNC(mod_rrd_account)$/;"	f
REQUESTDONE_FUNC	mod_setenv.c	/^REQUESTDONE_FUNC(mod_setenv_reset)$/;"	f
REQUESTDONE_FUNC	mod_status.c	/^REQUESTDONE_FUNC(mod_status_account)$/;"	f
REQUESTDONE_FUNC	plugin.h	24;"	d
RESET	proc_open.c	467;"	d	file:
RESET	proc_open.c	527;"	d	file:
RESYNC_AFTER_DECL_ERROR	lemon.c	/^		RESYNC_AFTER_DECL_ERROR,$/;"	e	enum:pstate::e_state	file:
RESYNC_AFTER_RULE_ERROR	lemon.c	/^		RESYNC_AFTER_RULE_ERROR,$/;"	e	enum:pstate::e_state	file:
REWRITE_STATE_FINISHED	mod_rewrite.c	/^	enum { REWRITE_STATE_UNSET, REWRITE_STATE_FINISHED } state;$/;"	e	enum:__anon126::__anon127	file:
REWRITE_STATE_UNSET	mod_rewrite.c	/^	enum { REWRITE_STATE_UNSET, REWRITE_STATE_FINISHED } state;$/;"	e	enum:__anon126::__anon127	file:
RHS_ALIAS_1	lemon.c	/^		RHS_ALIAS_1,$/;"	e	enum:pstate::e_state	file:
RHS_ALIAS_2	lemon.c	/^		RHS_ALIAS_2,$/;"	e	enum:pstate::e_state	file:
RIGHT	lemon.c	/^		RIGHT,$/;"	e	enum:symbol::e_assoc	file:
ROTATE_LEFT	md5.c	89;"	d	file:
ReportHeader	lemon.c	/^void ReportHeader(lemp)$/;"	f
ReportOutput	lemon.c	/^void ReportOutput(lemp)$/;"	f
ReportTable	lemon.c	/^void ReportTable(lemp, mhflag)$/;"	f
Reprint	lemon.c	/^void Reprint(lemp)$/;"	f
S	http_auth.c	1200;"	d	file:
S	http_auth.c	1215;"	d	file:
S11	md5.c	40;"	d	file:
S12	md5.c	41;"	d	file:
S13	md5.c	42;"	d	file:
S14	md5.c	43;"	d	file:
S21	md5.c	44;"	d	file:
S22	md5.c	45;"	d	file:
S23	md5.c	46;"	d	file:
S24	md5.c	47;"	d	file:
S31	md5.c	48;"	d	file:
S32	md5.c	49;"	d	file:
S33	md5.c	50;"	d	file:
S34	md5.c	51;"	d	file:
S41	md5.c	52;"	d	file:
S42	md5.c	53;"	d	file:
S43	md5.c	54;"	d	file:
S44	md5.c	55;"	d	file:
SA_LEN	http-header-glue.c	43;"	d	file:
SA_LEN	http-header-glue.c	67;"	d	file:
SA_LEN	http-header-glue.c	69;"	d	file:
SECURITY_CC	proc_open.c	22;"	d	file:
SECURITY_CC	proc_open.c	59;"	d	file:
SECURITY_DC	proc_open.c	21;"	d	file:
SECURITY_DC	proc_open.c	58;"	d	file:
SEGFAULT	buffer.h	143;"	d
SERVER_FUNC	mod_mysql_vhost.c	/^SERVER_FUNC(mod_mysql_vhost_cleanup)$/;"	f
SERVER_FUNC	mod_mysql_vhost.c	/^SERVER_FUNC(mod_mysql_vhost_set_defaults)$/;"	f
SERVER_FUNC	plugin.h	7;"	d
SET	fdevent_freebsd_kqueue.c	181;"	d	file:
SET	fdevent_linux_rtsig.c	286;"	d	file:
SET	fdevent_linux_sysepoll.c	141;"	d	file:
SET	fdevent_poll.c	207;"	d	file:
SET	fdevent_select.c	132;"	d	file:
SET	fdevent_solaris_devpoll.c	140;"	d	file:
SETDEFAULTS_FUNC	mod_access.c	/^SETDEFAULTS_FUNC(mod_access_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_accesslog.c	/^SETDEFAULTS_FUNC(log_access_open)$/;"	f
SETDEFAULTS_FUNC	mod_alias.c	/^SETDEFAULTS_FUNC(mod_alias_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_auth.c	/^SETDEFAULTS_FUNC(mod_auth_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_cgi.c	/^SETDEFAULTS_FUNC(mod_fastcgi_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_cml.c	/^SETDEFAULTS_FUNC(mod_cml_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_compress.c	/^SETDEFAULTS_FUNC(mod_compress_setdefaults)$/;"	f
SETDEFAULTS_FUNC	mod_dirlisting.c	/^SETDEFAULTS_FUNC(mod_dirlisting_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_evasive.c	/^SETDEFAULTS_FUNC(mod_evasive_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_evhost.c	/^SETDEFAULTS_FUNC(mod_evhost_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_expire.c	/^SETDEFAULTS_FUNC(mod_expire_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_extforward.c	/^SETDEFAULTS_FUNC(mod_extforward_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_fastcgi.c	/^SETDEFAULTS_FUNC(mod_fastcgi_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_flv_streaming.c	/^SETDEFAULTS_FUNC(mod_flv_streaming_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_indexfile.c	/^SETDEFAULTS_FUNC(mod_indexfile_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_magnet.c	/^SETDEFAULTS_FUNC(mod_magnet_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_proxy.c	/^SETDEFAULTS_FUNC(mod_proxy_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_redirect.c	/^SETDEFAULTS_FUNC(mod_redirect_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_rewrite.c	/^SETDEFAULTS_FUNC(mod_rewrite_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_rrdtool.c	/^SETDEFAULTS_FUNC(mod_rrd_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_scgi.c	/^SETDEFAULTS_FUNC(mod_scgi_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_secure_download.c	/^SETDEFAULTS_FUNC(mod_secdownload_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_setenv.c	/^SETDEFAULTS_FUNC(mod_setenv_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_simple_vhost.c	/^SETDEFAULTS_FUNC(mod_simple_vhost_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_skeleton.c	/^SETDEFAULTS_FUNC(mod_skeleton_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_ssi.c	/^SETDEFAULTS_FUNC(mod_ssi_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_staticfile.c	/^SETDEFAULTS_FUNC(mod_staticfile_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_status.c	/^SETDEFAULTS_FUNC(mod_status_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_trigger_b4_dl.c	/^SETDEFAULTS_FUNC(mod_trigger_b4_dl_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_userdir.c	/^SETDEFAULTS_FUNC(mod_userdir_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_usertrack.c	/^SETDEFAULTS_FUNC(mod_usertrack_set_defaults)$/;"	f
SETDEFAULTS_FUNC	mod_webdav.c	/^SETDEFAULTS_FUNC(mod_webdav_set_defaults)$/;"	f
SETDEFAULTS_FUNC	plugin.h	18;"	d
SHELLENV	proc_open.c	20;"	d	file:
SHELLENV	proc_open.c	57;"	d	file:
SHIFT	lemon.c	/^		SHIFT,$/;"	e	enum:action::e_action	file:
SHUT_WR	base.h	83;"	d
SH_RESOLVED	lemon.c	/^		SH_RESOLVED,			\/* Was a shift.  Precedence resolved conflict *\/$/;"	e	enum:action::e_action	file:
SIGHUP_FUNC	mod_accesslog.c	/^SIGHUP_FUNC(log_access_cycle)$/;"	f
SIGHUP_FUNC	plugin.h	19;"	d
SIZE_MAX	base.h	50;"	d
SIZE_MAX	base.h	52;"	d
SSIZE_MAX	base.h	57;"	d
SSI_COND_EQ	mod_ssi_expr.h	/^	{ SSI_COND_UNSET, SSI_COND_LE, SSI_COND_GE, SSI_COND_EQ, SSI_COND_NE,$/;"	e	enum:__anon97
SSI_COND_GE	mod_ssi_expr.h	/^	{ SSI_COND_UNSET, SSI_COND_LE, SSI_COND_GE, SSI_COND_EQ, SSI_COND_NE,$/;"	e	enum:__anon97
SSI_COND_GT	mod_ssi_expr.h	/^	SSI_COND_LT, SSI_COND_GT$/;"	e	enum:__anon97
SSI_COND_LE	mod_ssi_expr.h	/^	{ SSI_COND_UNSET, SSI_COND_LE, SSI_COND_GE, SSI_COND_EQ, SSI_COND_NE,$/;"	e	enum:__anon97
SSI_COND_LT	mod_ssi_expr.h	/^	SSI_COND_LT, SSI_COND_GT$/;"	e	enum:__anon97
SSI_COND_NE	mod_ssi_expr.h	/^	{ SSI_COND_UNSET, SSI_COND_LE, SSI_COND_GE, SSI_COND_EQ, SSI_COND_NE,$/;"	e	enum:__anon97
SSI_COND_UNSET	mod_ssi_expr.h	/^	{ SSI_COND_UNSET, SSI_COND_LE, SSI_COND_GE, SSI_COND_EQ, SSI_COND_NE,$/;"	e	enum:__anon97
SSI_TYPE_BOOL	mod_ssi_expr.h	/^	enum { SSI_TYPE_UNSET, SSI_TYPE_BOOL, SSI_TYPE_STRING } type;$/;"	e	enum:__anon94::__anon95
SSI_TYPE_STRING	mod_ssi_expr.h	/^	enum { SSI_TYPE_UNSET, SSI_TYPE_BOOL, SSI_TYPE_STRING } type;$/;"	e	enum:__anon94::__anon95
SSI_TYPE_UNSET	mod_ssi_expr.h	/^	enum { SSI_TYPE_UNSET, SSI_TYPE_BOOL, SSI_TYPE_STRING } type;$/;"	e	enum:__anon94::__anon95
STAT_CACHE_ENGINE_FAM	base.h	/^		STAT_CACHE_ENGINE_FAM$/;"	e	enum:__anon42::__anon43
STAT_CACHE_ENGINE_NONE	base.h	/^		STAT_CACHE_ENGINE_NONE,$/;"	e	enum:__anon42::__anon43
STAT_CACHE_ENGINE_SIMPLE	base.h	/^		STAT_CACHE_ENGINE_SIMPLE,$/;"	e	enum:__anon42::__anon43
STAT_CACHE_ENGINE_UNSET	base.h	/^	enum { STAT_CACHE_ENGINE_UNSET,$/;"	e	enum:__anon42::__anon43
SUBREQUEST_FUNC	mod_cgi.c	/^SUBREQUEST_FUNC(mod_cgi_handle_subrequest)$/;"	f
SUBREQUEST_FUNC	mod_fastcgi.c	/^SUBREQUEST_FUNC(mod_fastcgi_handle_subrequest)$/;"	f
SUBREQUEST_FUNC	mod_proxy.c	/^SUBREQUEST_FUNC(mod_proxy_handle_subrequest)$/;"	f
SUBREQUEST_FUNC	mod_scgi.c	/^SUBREQUEST_FUNC(mod_scgi_handle_subrequest)$/;"	f
SUBREQUEST_FUNC	plugin.h	21;"	d
SetAdd	lemon.c	/^int SetAdd(s, e)$/;"	f
SetFind	lemon.c	131;"	d	file:
SetFree	lemon.c	/^void SetFree(s)$/;"	f
SetNew	lemon.c	/^char *SetNew()$/;"	f
SetPrint	lemon.c	/^PRIVATE void SetPrint(out, set, lemp)$/;"	f
SetSize	lemon.c	/^void SetSize(n)$/;"	f
SetUnion	lemon.c	/^int SetUnion(s1, s2)$/;"	f
State_arrayof	lemon.c	/^struct state **State_arrayof()$/;"	f
State_find	lemon.c	/^struct state *State_find(key)$/;"	f
State_init	lemon.c	/^void State_init()$/;"	f
State_insert	lemon.c	/^int State_insert(data, key)$/;"	f
State_new	lemon.c	/^struct state *State_new()$/;"	f
Strsafe	lemon.c	/^char *Strsafe(y)$/;"	f
Strsafe_find	lemon.c	/^char *Strsafe_find(key)$/;"	f
Strsafe_init	lemon.c	/^void Strsafe_init()$/;"	f
Strsafe_insert	lemon.c	/^int Strsafe_insert(data)$/;"	f
Symbol_Nth	lemon.c	/^struct symbol *Symbol_Nth(n)$/;"	f
Symbol_arrayof	lemon.c	/^struct symbol **Symbol_arrayof()$/;"	f
Symbol_count	lemon.c	/^int Symbol_count()$/;"	f
Symbol_find	lemon.c	/^struct symbol *Symbol_find(key)$/;"	f
Symbol_init	lemon.c	/^void Symbol_init()$/;"	f
Symbol_insert	lemon.c	/^int Symbol_insert(data, key)$/;"	f
Symbol_new	lemon.c	/^struct symbol *Symbol_new(x)$/;"	f
Symbolcmpp	lemon.c	/^int Symbolcmpp(struct symbol **a, struct symbol **b)$/;"	f
TERMINAL	lemon.c	/^		TERMINAL,$/;"	e	enum:symbol::__anon198	file:
TEXT_IPV6	server.c	523;"	d	file:
TEXT_SSL	server.c	368;"	d	file:
TEXT_SSL	server.c	376;"	d	file:
TEXT_SSL	server.c	507;"	d	file:
TEXT_SSL	server.c	522;"	d	file:
TK_AND	mod_ssi_exprparser.h	1;"	d
TK_APPEND	configparser.h	3;"	d
TK_ARRAY_ASSIGN	configparser.h	11;"	d
TK_ASSIGN	configparser.h	2;"	d
TK_COMMA	configparser.h	10;"	d
TK_DOLLAR	configparser.h	16;"	d
TK_ELSE	configparser.h	15;"	d
TK_EOL	configparser.h	1;"	d
TK_EQ	configparser.h	20;"	d
TK_EQ	mod_ssi_exprparser.h	3;"	d
TK_GE	mod_ssi_exprparser.h	6;"	d
TK_GLOBAL	configparser.h	12;"	d
TK_GT	mod_ssi_exprparser.h	5;"	d
TK_INCLUDE	configparser.h	24;"	d
TK_INCLUDE_SHELL	configparser.h	25;"	d
TK_INTEGER	configparser.h	7;"	d
TK_LBRACKET	configparser.h	18;"	d
TK_LCURLY	configparser.h	13;"	d
TK_LE	mod_ssi_exprparser.h	8;"	d
TK_LKEY	configparser.h	4;"	d
TK_LPARAN	configparser.h	8;"	d
TK_LPARAN	mod_ssi_exprparser.h	10;"	d
TK_LT	mod_ssi_exprparser.h	7;"	d
TK_MATCH	configparser.h	21;"	d
TK_NE	configparser.h	22;"	d
TK_NE	mod_ssi_exprparser.h	4;"	d
TK_NOMATCH	configparser.h	23;"	d
TK_NOT	mod_ssi_exprparser.h	9;"	d
TK_OR	mod_ssi_exprparser.h	2;"	d
TK_PLUS	configparser.h	5;"	d
TK_RBRACKET	configparser.h	19;"	d
TK_RCURLY	configparser.h	14;"	d
TK_RPARAN	configparser.h	9;"	d
TK_RPARAN	mod_ssi_exprparser.h	11;"	d
TK_SRVVARNAME	configparser.h	17;"	d
TK_STRING	configparser.h	6;"	d
TK_VALUE	mod_ssi_exprparser.h	12;"	d
TOKEN	configparser.c	1853;"	d	file:
TOKEN	lempar.c	538;"	d	file:
TOKEN	mod_ssi_exprparser.c	931;"	d	file:
TRIGGER_FUNC	mod_cgi.c	/^TRIGGER_FUNC(cgi_trigger)$/;"	f
TRIGGER_FUNC	mod_fastcgi.c	/^TRIGGER_FUNC(mod_fastcgi_handle_trigger)$/;"	f
TRIGGER_FUNC	mod_proxy.c	/^TRIGGER_FUNC(mod_proxy_trigger)$/;"	f
TRIGGER_FUNC	mod_rrdtool.c	/^TRIGGER_FUNC(mod_rrd_trigger)$/;"	f
TRIGGER_FUNC	mod_scgi.c	/^TRIGGER_FUNC(mod_scgi_handle_trigger)$/;"	f
TRIGGER_FUNC	mod_status.c	/^TRIGGER_FUNC(mod_status_trigger)$/;"	f
TRIGGER_FUNC	mod_trigger_b4_dl.c	/^TRIGGER_FUNC(mod_trigger_b4_dl_handle_trigger)$/;"	f
TRIGGER_FUNC	plugin.h	17;"	d
TRUE	settings.h	39;"	d
TYPE_ARRAY	array.h	/^	TYPE_ARRAY, 	\/* 数组类型 *\/$/;"	e	enum:__anon146
TYPE_CONFIG	array.h	/^	TYPE_CONFIG 	\/* CONFIG类型 *\/$/;"	e	enum:__anon146
TYPE_COUNT	array.h	/^	TYPE_COUNT, 	\/* COUNT类型 *\/$/;"	e	enum:__anon146
TYPE_FASTCGI	array.h	/^	TYPE_FASTCGI, 	\/* FASTCGI类型 *\/$/;"	e	enum:__anon146
TYPE_INTEGER	array.h	/^	TYPE_INTEGER, 	\/* 整数类型 *\/$/;"	e	enum:__anon146
TYPE_STRING	array.h	/^	TYPE_STRING, 	\/* 字符串类型 *\/$/;"	e	enum:__anon146
TYPE_UNSET	array.h	/^	TYPE_UNSET, 	\/* 数据的类型未设置，$/;"	e	enum:__anon146
T_CONFIG_ARRAY	base.h	/^	T_CONFIG_ARRAY,$/;"	e	enum:__anon17
T_CONFIG_BOOLEAN	base.h	/^	T_CONFIG_BOOLEAN,$/;"	e	enum:__anon17
T_CONFIG_DEPRECATED	base.h	/^	T_CONFIG_DEPRECATED,$/;"	e	enum:__anon17
T_CONFIG_LOCAL	base.h	/^	T_CONFIG_LOCAL,$/;"	e	enum:__anon17
T_CONFIG_SCOPE_CONNECTION	base.h	/^	T_CONFIG_SCOPE_CONNECTION$/;"	e	enum:__anon18
T_CONFIG_SCOPE_SERVER	base.h	/^	T_CONFIG_SCOPE_SERVER,$/;"	e	enum:__anon18
T_CONFIG_SCOPE_UNSET	base.h	/^typedef enum { T_CONFIG_SCOPE_UNSET,$/;"	e	enum:__anon18
T_CONFIG_SHORT	base.h	/^	T_CONFIG_SHORT,$/;"	e	enum:__anon17
T_CONFIG_STRING	base.h	/^	T_CONFIG_STRING,$/;"	e	enum:__anon17
T_CONFIG_UNSET	base.h	/^typedef enum { T_CONFIG_UNSET,$/;"	e	enum:__anon17
T_CONFIG_UNSUPPORTED	base.h	/^	T_CONFIG_UNSUPPORTED$/;"	e	enum:__anon17
UINT2	md5.h	35;"	d
UINT4	md5.h	34;"	d
UIO_MAXIOV	network_freebsd_sendfile.c	32;"	d	file:
UIO_MAXIOV	network_solaris_sendfilev.c	28;"	d	file:
UNK	lemon.c	/^		UNK$/;"	e	enum:symbol::e_assoc	file:
UNUSED	buffer.h	144;"	d
UNUSED	lemon.c	26;"	d	file:
UNUSED	lighttpd-angel.c	31;"	d	file:
UNUSED_CHUNK	chunk.h	/^	enum { UNUSED_CHUNK, MEM_CHUNK, FILE_CHUNK } type;$/;"	e	enum:chunk::__anon8
URIHANDLER_FUNC	mod_access.c	/^URIHANDLER_FUNC(mod_access_uri_handler)$/;"	f
URIHANDLER_FUNC	mod_cgi.c	/^URIHANDLER_FUNC(cgi_is_handled)$/;"	f
URIHANDLER_FUNC	mod_cml.c	/^URIHANDLER_FUNC(mod_cml_is_handled)$/;"	f
URIHANDLER_FUNC	mod_cml.c	/^URIHANDLER_FUNC(mod_cml_power_magnet)$/;"	f
URIHANDLER_FUNC	mod_dirlisting.c	/^URIHANDLER_FUNC(mod_dirlisting_subrequest)$/;"	f
URIHANDLER_FUNC	mod_evasive.c	/^URIHANDLER_FUNC(mod_evasive_uri_handler)$/;"	f
URIHANDLER_FUNC	mod_expire.c	/^URIHANDLER_FUNC(mod_expire_path_handler)$/;"	f
URIHANDLER_FUNC	mod_extforward.c	/^URIHANDLER_FUNC(mod_extforward_uri_handler)$/;"	f
URIHANDLER_FUNC	mod_flv_streaming.c	/^URIHANDLER_FUNC(mod_flv_streaming_path_handler)$/;"	f
URIHANDLER_FUNC	mod_indexfile.c	/^URIHANDLER_FUNC(mod_indexfile_subrequest)$/;"	f
URIHANDLER_FUNC	mod_magnet.c	/^URIHANDLER_FUNC(mod_magnet_physical)$/;"	f
URIHANDLER_FUNC	mod_magnet.c	/^URIHANDLER_FUNC(mod_magnet_uri_handler)$/;"	f
URIHANDLER_FUNC	mod_rewrite.c	/^URIHANDLER_FUNC(mod_rewrite_con_reset)$/;"	f
URIHANDLER_FUNC	mod_rewrite.c	/^URIHANDLER_FUNC(mod_rewrite_uri_handler)$/;"	f
URIHANDLER_FUNC	mod_secure_download.c	/^URIHANDLER_FUNC(mod_secdownload_uri_handler)$/;"	f
URIHANDLER_FUNC	mod_setenv.c	/^URIHANDLER_FUNC(mod_setenv_uri_handler)$/;"	f
URIHANDLER_FUNC	mod_skeleton.c	/^URIHANDLER_FUNC(mod_skeleton_uri_handler)$/;"	f
URIHANDLER_FUNC	mod_ssi.c	/^URIHANDLER_FUNC(mod_ssi_physical_path)$/;"	f
URIHANDLER_FUNC	mod_staticfile.c	/^URIHANDLER_FUNC(mod_staticfile_subrequest)$/;"	f
URIHANDLER_FUNC	mod_trigger_b4_dl.c	/^URIHANDLER_FUNC(mod_trigger_b4_dl_uri_handler)$/;"	f
URIHANDLER_FUNC	mod_userdir.c	/^URIHANDLER_FUNC(mod_userdir_docroot_handler)$/;"	f
URIHANDLER_FUNC	mod_usertrack.c	/^URIHANDLER_FUNC(mod_usertrack_uri_handler)$/;"	f
URIHANDLER_FUNC	mod_webdav.c	/^URIHANDLER_FUNC(mod_webdav_subrequest_handler)$/;"	f
URIHANDLER_FUNC	mod_webdav.c	/^URIHANDLER_FUNC(mod_webdav_uri_handler)$/;"	f
URIHANDLER_FUNC	plugin.h	25;"	d
USE_AIX_SENDFILE	network_backends.h	47;"	d
USE_BZ2LIB	mod_compress.c	29;"	d	file:
USE_FREEBSD_KQUEUE	fdevent.h	55;"	d
USE_FREEBSD_SENDFILE	network_backends.h	20;"	d
USE_LDAP	http_auth.h	8;"	d
USE_LINUX_EPOLL	fdevent.h	18;"	d
USE_LINUX_SENDFILE	network_backends.h	14;"	d
USE_LINUX_SIGIO	fdevent.h	34;"	d
USE_LOCKS	mod_webdav.c	27;"	d	file:
USE_MMAP	network_backends.h	36;"	d
USE_OPENSSL	base.h	32;"	d
USE_POLL	fdevent.h	27;"	d
USE_PROPPATCH	mod_webdav.c	19;"	d	file:
USE_SELECT	fdevent.h	43;"	d
USE_SOLARIS_DEVPOLL	fdevent.h	50;"	d
USE_SOLARIS_PORT	fdevent.h	60;"	d
USE_SOLARIS_SENDFILEV	network_backends.h	25;"	d
USE_WRITEV	network_backends.h	31;"	d
USE_ZLIB	mod_compress.c	24;"	d	file:
WAITING_FOR_ARROW	lemon.c	/^		WAITING_FOR_ARROW,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_DATATYPE_SYMBOL	lemon.c	/^		WAITING_FOR_DATATYPE_SYMBOL,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_DECL_ARG	lemon.c	/^		WAITING_FOR_DECL_ARG,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_DECL_KEYWORD	lemon.c	/^		WAITING_FOR_DECL_KEYWORD,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_DECL_OR_RULE	lemon.c	/^		WAITING_FOR_DECL_OR_RULE,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_DESTRUCTOR_SYMBOL	lemon.c	/^		WAITING_FOR_DESTRUCTOR_SYMBOL,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_FALLBACK_ID	lemon.c	/^		WAITING_FOR_FALLBACK_ID$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_PRECEDENCE_SYMBOL	lemon.c	/^		WAITING_FOR_PRECEDENCE_SYMBOL,$/;"	e	enum:pstate::e_state	file:
WEBDAV_DIR_MODE	mod_webdav.c	52;"	d	file:
WEBDAV_FILE_MODE	mod_webdav.c	51;"	d	file:
WIN32_MMAP_H	sys-mmap.h	2;"	d
WIN32_SOCKET_H	sys-socket.h	2;"	d
WP	log.h	12;"	d
YYACTIONTYPE	configparser.c	188;"	d	file:
YYACTIONTYPE	mod_ssi_exprparser.c	69;"	d	file:
YYCODETYPE	configparser.c	186;"	d	file:
YYCODETYPE	mod_ssi_exprparser.c	67;"	d	file:
YYERRORSYMBOL	configparser.c	206;"	d	file:
YYERRORSYMBOL	mod_ssi_exprparser.c	85;"	d	file:
YYERRSYMDT	configparser.c	207;"	d	file:
YYERRSYMDT	mod_ssi_exprparser.c	86;"	d	file:
YYMINORTYPE	configparser.c	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon144	file:
YYMINORTYPE	mod_ssi_exprparser.c	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon202	file:
YYNOCODE	configparser.c	187;"	d	file:
YYNOCODE	mod_ssi_exprparser.c	68;"	d	file:
YYNRULE	configparser.c	205;"	d	file:
YYNRULE	mod_ssi_exprparser.c	84;"	d	file:
YYNSTATE	configparser.c	204;"	d	file:
YYNSTATE	mod_ssi_exprparser.c	83;"	d	file:
YYSTACKDEPTH	configparser.c	199;"	d	file:
YYSTACKDEPTH	mod_ssi_exprparser.c	78;"	d	file:
YY_ACCEPT_ACTION	configparser.c	209;"	d	file:
YY_ACCEPT_ACTION	lempar.c	57;"	d	file:
YY_ACCEPT_ACTION	mod_ssi_exprparser.c	88;"	d	file:
YY_ERROR_ACTION	configparser.c	210;"	d	file:
YY_ERROR_ACTION	lempar.c	58;"	d	file:
YY_ERROR_ACTION	mod_ssi_exprparser.c	89;"	d	file:
YY_NO_ACTION	configparser.c	208;"	d	file:
YY_NO_ACTION	lempar.c	56;"	d	file:
YY_NO_ACTION	mod_ssi_exprparser.c	87;"	d	file:
YY_REDUCE_USE_DFLT	configparser.c	349;"	d	file:
YY_REDUCE_USE_DFLT	mod_ssi_exprparser.c	162;"	d	file:
YY_SHIFT_USE_DFLT	configparser.c	324;"	d	file:
YY_SHIFT_USE_DFLT	mod_ssi_exprparser.c	149;"	d	file:
YY_SZ_ACTTAB	configparser.c	397;"	d	file:
YY_SZ_ACTTAB	lempar.c	91;"	d	file:
YY_SZ_ACTTAB	mod_ssi_exprparser.c	186;"	d	file:
_BASE_H_	base.h	2;"	d
_BITSET_H_	bitset.h	2;"	d
_BUFFER_H_	buffer.h	2;"	d
_CHUNK_H_	chunk.h	2;"	d
_CONFIG_PARSER_H_	configfile.h	2;"	d
_CONNECTIONS_H_	connections.h	2;"	d
_DIGCALC_H_	http_auth_digest.h	2;"	d
_FASTCGI_H	fastcgi.h	16;"	d
_FDEVENT_H_	fdevent.h	2;"	d
_FILE_CACHE_H_	stat_cache.h	2;"	d
_GNU_SOURCE	http-header-glue.c	1;"	d	file:
_GNU_SOURCE	log.c	1;"	d	file:
_GNU_SOURCE	mod_accesslog.c	1;"	d	file:
_GNU_SOURCE	mod_rrdtool.c	1;"	d	file:
_GNU_SOURCE	mod_status.c	1;"	d	file:
_GNU_SOURCE	stat_cache.c	1;"	d	file:
_HTTP_AUTH_H_	http_auth.h	2;"	d
_HTTP_CHUNK_H_	http_chunk.h	2;"	d
_INET_NTOP_CACHE_H_	inet_ntop_cache.h	2;"	d
_JOB_LIST_H_	joblist.h	2;"	d
_KEY_VALUE_H_	keyvalue.h	2;"	d
_LIGHTTPD_SETTINGS_H_	settings.h	2;"	d
_LOG_H_	log.h	2;"	d
_MOD_CACHE_H_	mod_cml.h	2;"	d
_MOD_CML_FUNCS_H_	mod_cml_funcs.h	2;"	d
_MOD_MAGNET_CACHE_H_	mod_magnet_cache.h	2;"	d
_MOD_SSI_EXPR_H_	mod_ssi_expr.h	2;"	d
_MOD_SSI_H_	mod_ssi.h	2;"	d
_NETWORK_BACKENDS_H_	network_backends.h	2;"	d
_NETWORK_H_	network.h	2;"	d
_PLUGIN_H_	plugin.h	2;"	d
_REQUEST_H_	request.h	2;"	d
_RESPONSE_H_	response.h	2;"	d
_SERVER_H_	server.h	2;"	d
_SPLAY_TREE_H_	splaytree.h	2;"	d
_STATUS_COUNTER_H_	status_counter.h	2;"	d
_STREAM_H_	stream.h	2;"	d
_XOPEN_SOURCE	http_auth.c	11;"	d	file:
__USE_GNU	fdevent_linux_rtsig.c	11;"	d	file:
__WIN32__	lemon.c	37;"	d	file:
__crc32cr_table_h__	crc32.h	2;"	d
_data_config	array.h	/^struct _data_config {$/;"	s
_fdnode	fdevent.h	/^typedef struct _fdnode {$/;"	s
aAction	lemon.c	/^	} *aAction,					\/* The yy_action[] table under construction *\/$/;"	m	struct:acttab	typeref:struct:acttab::__anon201	file:
aLookahead	lemon.c	/^	*aLookahead;				\/* A single new transaction set *\/$/;"	m	struct:acttab	typeref:struct:acttab::__anon201	file:
abs_requests	mod_status.c	/^	double abs_requests;$/;"	m	struct:__anon75	file:
abs_traffic_out	mod_status.c	/^	double abs_traffic_out;$/;"	m	struct:__anon75	file:
accept	lemon.c	/^	char *accept;				\/* Code to execute when the parser excepts *\/$/;"	m	struct:lemon	file:
accept_encoding	base.h	/^	int accept_encoding;$/;"	m	struct:__anon24
acceptln	lemon.c	/^	int acceptln;				\/* Line number for the start of accept code *\/$/;"	m	struct:lemon	file:
access_deny	mod_access.c	/^	array *access_deny;$/;"	m	struct:__anon131	file:
access_logbuffer	mod_accesslog.c	/^	buffer *access_logbuffer;$/;"	m	struct:__anon69	file:
access_logfile	mod_accesslog.c	/^	buffer *access_logfile;$/;"	m	struct:__anon69	file:
accesslog_parse_format	mod_accesslog.c	/^accesslog_parse_format(server * srv, format_fields * fields, buffer * format)$/;"	f
action	lemon.c	/^		int action;				\/* Action to take on the given lookahead *\/$/;"	m	struct:acttab::__anon201	file:
action	lemon.c	/^struct action {$/;"	s	file:
actioncmp	lemon.c	/^static int actioncmp(ap1, ap2)$/;"	f	file:
active_procs	mod_fastcgi.c	/^	size_t active_procs;		\/* how many of them are really running *\/$/;"	m	struct:__anon183	file:
active_procs	mod_scgi.c	/^	size_t active_procs;		\/* how many of them are really running *\/$/;"	m	struct:__anon171	file:
acttab	lemon.c	/^struct acttab {$/;"	s	file:
acttab	lemon.c	/^typedef struct acttab acttab;$/;"	t	typeref:struct:acttab	file:
acttab_action	lemon.c	/^void acttab_action(acttab * p, int lookahead, int action)$/;"	f
acttab_alloc	lemon.c	/^acttab *acttab_alloc(void)$/;"	f
acttab_free	lemon.c	/^void acttab_free(acttab * p)$/;"	f
acttab_insert	lemon.c	/^int acttab_insert(acttab * p)$/;"	f
acttab_size	lemon.c	496;"	d	file:
acttab_yyaction	lemon.c	501;"	d	file:
acttab_yylookahead	lemon.c	506;"	d	file:
addr	base.h	/^	sock_addr addr;$/;"	m	struct:__anon44
addr	base.h	/^	} addr;$/;"	m	struct:__anon37	typeref:union:__anon37::__anon38
alias	lemon.c	/^	char *alias[MAXRHS];		\/* Aliases for each RHS symbol (or NULL) *\/$/;"	m	struct:pstate	file:
alias	mod_alias.c	/^	array *alias;$/;"	m	struct:__anon55	file:
all_configs	configfile.h	/^	array *all_configs;$/;"	m	struct:__anon194
allow_http11	base.h	/^	unsigned short allow_http11;$/;"	m	struct:__anon31
allow_xsendfile	mod_fastcgi.c	/^	unsigned short allow_xsendfile;$/;"	m	struct:__anon183	file:
ap	lemon.c	/^	struct action *ap;			\/* Array of actions for this state *\/$/;"	m	struct:state	typeref:struct:state::action	file:
appStatusB0	fastcgi.h	/^	unsigned char appStatusB0;$/;"	m	struct:__anon119
appStatusB1	fastcgi.h	/^	unsigned char appStatusB1;$/;"	m	struct:__anon119
appStatusB2	fastcgi.h	/^	unsigned char appStatusB2;$/;"	m	struct:__anon119
appStatusB3	fastcgi.h	/^	unsigned char appStatusB3;$/;"	m	struct:__anon119
apr_cpystrn	http_auth.c	726;"	d	file:
apr_md5_encode	http_auth.c	/^apr_md5_encode(const char *pw, const char *salt, char *result, size_t nbytes)$/;"	f	file:
arg	lemon.c	/^	char *arg;					\/* Declaration of the 3th argument to parser *\/$/;"	m	struct:lemon	file:
arg	lemon.c	/^	char *arg;$/;"	m	struct:s_options	file:
argindex	lemon.c	/^static int argindex(n)$/;"	f	file:
argv	lemon.c	/^static char **argv;$/;"	v	file:
argv0	lemon.c	/^	char *argv0;				\/* Name of the program *\/$/;"	m	struct:lemon	file:
array	array.h	/^} array;$/;"	t	typeref:struct:__anon147
array_free	array.c	/^void array_free(array *a) {$/;"	f
array_get_element	array.c	/^data_unset *array_get_element(array *a, const char *key) {$/;"	f
array_get_index	array.c	/^static int array_get_index(array *a, const char *key, size_t keylen, int *rndx) {$/;"	f	file:
array_get_max_key_length	array.c	/^size_t array_get_max_key_length(array *a) {$/;"	f
array_get_unused_element	array.c	/^data_unset *array_get_unused_element(array *a, data_type_t t) {$/;"	f
array_init	array.c	/^array *array_init(void) {$/;"	f
array_init_array	array.c	/^array *array_init_array(array *src) {$/;"	f
array_insert_unique	array.c	/^int array_insert_unique(array *a, data_unset *str) {$/;"	f
array_pop	array.c	/^data_unset *array_pop(array *a) {$/;"	f
array_print	array.c	/^int array_print(array *a, int depth) {$/;"	f
array_print_indent	array.c	/^void array_print_indent(int depth) {$/;"	f
array_replace	array.c	/^data_unset *array_replace(array *a, data_unset *du) {$/;"	f
array_reset	array.c	/^void array_reset(array *a) {$/;"	f
assert	lemon.c	63;"	d	file:
assert	lemon.c	65;"	d	file:
assoc	lemon.c	/^	} assoc;					\/* Associativity if predecence is defined *\/$/;"	m	struct:symbol	typeref:enum:symbol::e_assoc	file:
auth_backend	http_auth.h	/^	auth_backend_t auth_backend;$/;"	m	struct:__anon77
auth_backend_conf	http_auth.h	/^	buffer *auth_backend_conf;$/;"	m	struct:__anon77
auth_backend_t	http_auth.h	/^} auth_backend_t;$/;"	t	typeref:enum:__anon76
auth_debug	http_auth.h	/^	unsigned short auth_debug;$/;"	m	struct:__anon77
auth_htdigest_userfile	http_auth.h	/^	buffer *auth_htdigest_userfile;$/;"	m	struct:__anon77
auth_htpasswd_userfile	http_auth.h	/^	buffer *auth_htpasswd_userfile;$/;"	m	struct:__anon77
auth_ldap_allow_empty_pw	http_auth.h	/^	unsigned short auth_ldap_allow_empty_pw;$/;"	m	struct:__anon77
auth_ldap_basedn	http_auth.h	/^	buffer *auth_ldap_basedn;$/;"	m	struct:__anon77
auth_ldap_binddn	http_auth.h	/^	buffer *auth_ldap_binddn;$/;"	m	struct:__anon77
auth_ldap_bindpw	http_auth.h	/^	buffer *auth_ldap_bindpw;$/;"	m	struct:__anon77
auth_ldap_cafile	http_auth.h	/^	buffer *auth_ldap_cafile;$/;"	m	struct:__anon77
auth_ldap_filter	http_auth.h	/^	buffer *auth_ldap_filter;$/;"	m	struct:__anon77
auth_ldap_hostname	http_auth.h	/^	buffer *auth_ldap_hostname;$/;"	m	struct:__anon77
auth_ldap_init	mod_auth.c	/^handler_t auth_ldap_init(server * srv, mod_auth_plugin_config * s)$/;"	f
auth_ldap_starttls	http_auth.h	/^	unsigned short auth_ldap_starttls;$/;"	m	struct:__anon77
auth_plain_groupfile	http_auth.h	/^	buffer *auth_plain_groupfile;$/;"	m	struct:__anon77
auth_plain_userfile	http_auth.h	/^	buffer *auth_plain_userfile;$/;"	m	struct:__anon77
auth_require	http_auth.h	/^	array *auth_require;$/;"	m	struct:__anon77
auth_user	http_auth.h	/^	buffer *auth_user;$/;"	m	struct:__anon78
authed_user	base.h	/^	buffer *authed_user;$/;"	m	struct:__anon35
authority	base.h	/^	buffer *authority;$/;"	m	struct:__anon27
axset	lemon.c	/^struct axset {$/;"	s	file:
axset_compare	lemon.c	/^static int axset_compare(const void *a, const void *b)$/;"	f	file:
b	mod_compress.c	/^	buffer *b;$/;"	m	struct:__anon93	file:
b	mod_fastcgi.c	/^	buffer *b;$/;"	m	struct:__anon193	file:
b2	base.h	/^	char b2[INET6_ADDRSTRLEN + 1];$/;"	m	struct:__anon37
balance	array.h	/^	size_t balance;$/;"	m	struct:__anon154
balance	mod_proxy.c	/^	proxy_balance_t balance;$/;"	m	struct:__anon101	file:
balance_buf	mod_proxy.c	/^	buffer *balance_buf;$/;"	m	struct:__anon102	file:
bar	configfile.c	/^	int bar;$/;"	m	struct:__anon204	file:
base64_decode	http_auth.c	/^static unsigned char *base64_decode(buffer * out, const char *in)$/;"	f	file:
base64_pad	http_auth.c	/^static const char base64_pad = '=';$/;"	v	file:
base64_reverse_table	http_auth.c	/^static const short base64_reverse_table[256] = {$/;"	v	file:
basedir	base.h	/^	buffer *basedir;			\/* path = "(basedir)(.*)" *\/$/;"	m	struct:__anon28
basedir	configfile.h	/^	buffer *basedir;$/;"	m	struct:__anon194
basedir	mod_cml.h	/^	buffer *basedir;$/;"	m	struct:__anon61
basepath	mod_userdir.c	/^	buffer *basepath;$/;"	m	struct:__anon207	file:
baseurl	mod_cml.h	/^	buffer *baseurl;$/;"	m	struct:__anon61
basis	lemon.c	/^static struct config *basis = 0;	\/* Top of list of basis configs *\/$/;"	v	typeref:struct:config	file:
basisend	lemon.c	/^static struct config **basisend = 0;	\/* End of list of basis configs *\/$/;"	v	typeref:struct:config	file:
basisflag	lemon.c	/^	int basisflag;				\/* Print only basis configurations *\/$/;"	m	struct:lemon	file:
bin_env	mod_fastcgi.c	/^	array *bin_env;$/;"	m	struct:__anon183	file:
bin_env	mod_scgi.c	/^	array *bin_env;$/;"	m	struct:__anon171	file:
bin_env_copy	mod_fastcgi.c	/^	array *bin_env_copy;$/;"	m	struct:__anon183	file:
bin_env_copy	mod_scgi.c	/^	array *bin_env_copy;$/;"	m	struct:__anon171	file:
bin_path	mod_fastcgi.c	/^	buffer *bin_path;$/;"	m	struct:__anon183	file:
bin_path	mod_scgi.c	/^	buffer *bin_path;$/;"	m	struct:__anon171	file:
bindhost	base.h	/^	buffer *bindhost;$/;"	m	struct:__anon42
bits	bitset.h	/^	size_t *bits;$/;"	m	struct:__anon57
bitset	bitset.h	/^} bitset;$/;"	t	typeref:struct:__anon57
bitset_clear_bit	bitset.c	/^void bitset_clear_bit(bitset * set, size_t pos)$/;"	f
bitset_free	bitset.c	/^void bitset_free(bitset * set)$/;"	f
bitset_init	bitset.c	/^bitset *bitset_init(size_t nbits)$/;"	f
bitset_reset	bitset.c	/^void bitset_reset(bitset * set)$/;"	f
bitset_set_bit	bitset.c	/^void bitset_set_bit(bitset * set, size_t pos)$/;"	f
bitset_test_bit	bitset.c	/^int bitset_test_bit(bitset * set, size_t pos)$/;"	f
bo	mod_ssi_expr.h	/^	int bo;$/;"	m	struct:__anon94
body	fastcgi.h	/^	FCGI_BeginRequestBody body;$/;"	m	struct:__anon118
body	fastcgi.h	/^	FCGI_EndRequestBody body;$/;"	m	struct:__anon120
body	fastcgi.h	/^	FCGI_UnknownTypeBody body;$/;"	m	struct:__anon122
bp	lemon.c	/^	struct config *bp;			\/* The basis configurations for this state *\/$/;"	m	struct:state	typeref:struct:state::config	file:
bp	lemon.c	/^	struct config *bp;			\/* The next basis configuration *\/$/;"	m	struct:config	typeref:struct:config::config	file:
bplp	lemon.c	/^	struct plink *bplp;			\/* Follow-set backwards propagation links *\/$/;"	m	struct:config	typeref:struct:config::plink	file:
break_scriptfilename_for_php	mod_fastcgi.c	/^	unsigned short break_scriptfilename_for_php;$/;"	m	struct:__anon183	file:
buffer	buffer.h	/^} buffer;$/;"	t	typeref:struct:__anon88
buffer	md5.h	/^	unsigned char buffer[64];	\/* input buffer *\/$/;"	m	struct:__anon135
buffer_append_long	buffer.c	/^int buffer_append_long(buffer *b, long val) $/;"	f
buffer_append_long_hex	buffer.c	/^int buffer_append_long_hex(buffer *b, unsigned long value) $/;"	f
buffer_append_memory	buffer.c	/^int buffer_append_memory(buffer *b, const char *s, size_t s_len) $/;"	f
buffer_append_off_t	buffer.c	/^int buffer_append_off_t(buffer *b, off_t val) $/;"	f
buffer_append_off_t	buffer.h	81;"	d
buffer_append_string	buffer.c	/^int buffer_append_string(buffer *b, const char *s)$/;"	f
buffer_append_string_buffer	buffer.c	/^int buffer_append_string_buffer(buffer *b, const buffer *src) $/;"	f
buffer_append_string_encoded	buffer.c	/^int buffer_append_string_encoded(buffer *b, const char *s, size_t s_len, buffer_encoding_t encoding) $/;"	f
buffer_append_string_len	buffer.c	/^int buffer_append_string_len(buffer *b, const char *s, size_t s_len) $/;"	f
buffer_append_string_rfill	buffer.c	/^int buffer_append_string_rfill(buffer *b, const char *s, size_t maxlen) $/;"	f
buffer_array	buffer.h	/^} buffer_array;$/;"	t	typeref:struct:__anon89
buffer_array_append_get_buffer	buffer.c	/^buffer *buffer_array_append_get_buffer(buffer_array *b) $/;"	f
buffer_array_free	buffer.c	/^void buffer_array_free(buffer_array *b) $/;"	f
buffer_array_init	buffer.c	/^buffer_array* buffer_array_init(void) $/;"	f
buffer_array_reset	buffer.c	/^void buffer_array_reset(buffer_array *b) $/;"	f
buffer_caseless_compare	buffer.c	/^int buffer_caseless_compare(const char *a, size_t a_len, const char *b, size_t b_len) $/;"	f
buffer_copy_dirname	stat_cache.c	/^static int buffer_copy_dirname(buffer * dst, buffer * file)$/;"	f	file:
buffer_copy_long	buffer.c	/^int buffer_copy_long(buffer *b, long val) $/;"	f
buffer_copy_memory	buffer.c	/^int buffer_copy_memory(buffer *b, const char *s, size_t s_len) $/;"	f
buffer_copy_off_t	buffer.c	/^int buffer_copy_off_t(buffer *b, off_t val) {$/;"	f
buffer_copy_off_t	buffer.h	80;"	d
buffer_copy_string	buffer.c	/^int buffer_copy_string(buffer *b, const char *s) {$/;"	f
buffer_copy_string_buffer	buffer.c	/^int buffer_copy_string_buffer(buffer *b, const buffer *src) $/;"	f
buffer_copy_string_hex	buffer.c	/^int buffer_copy_string_hex(buffer *b, const char *in, size_t in_len) $/;"	f
buffer_copy_string_len	buffer.c	/^int buffer_copy_string_len(buffer *b, const char *s, size_t s_len) {$/;"	f
buffer_encoding_t	buffer.h	/^} buffer_encoding_t;$/;"	t	typeref:enum:__anon91
buffer_free	buffer.c	/^void buffer_free(buffer *b) $/;"	f
buffer_init	buffer.c	/^buffer* buffer_init(void) $/;"	f
buffer_init_buffer	buffer.c	/^buffer *buffer_init_buffer(buffer *src) $/;"	f
buffer_init_string	buffer.c	/^buffer *buffer_init_string(const char *str) $/;"	f
buffer_int	fdevent.h	/^} buffer_int;$/;"	t	typeref:struct:__anon7
buffer_is_empty	buffer.c	/^int buffer_is_empty(buffer *b) $/;"	f
buffer_is_equal	buffer.c	/^int buffer_is_equal(buffer *a, buffer *b) $/;"	f
buffer_is_equal_right_len	buffer.c	/^int buffer_is_equal_right_len(buffer *b1, buffer *b2, size_t len) $/;"	f
buffer_is_equal_string	buffer.c	/^int buffer_is_equal_string(buffer *a, const char *s, size_t b_len) $/;"	f
buffer_path_simplify	buffer.c	/^int buffer_path_simplify(buffer *dest, buffer *src)$/;"	f
buffer_pid_t	mod_cgi.c	/^} buffer_pid_t;$/;"	t	typeref:struct:__anon111	file:
buffer_plugin	base.h	/^} buffer_plugin;$/;"	t	typeref:struct:__anon41
buffer_prepare_append	buffer.c	/^int buffer_prepare_append(buffer *b, size_t size) $/;"	f
buffer_prepare_copy	buffer.c	/^int buffer_prepare_copy(buffer *b, size_t size) $/;"	f
buffer_reset	buffer.c	/^void buffer_reset(buffer *b) $/;"	f
buffer_search_string_len	buffer.c	/^char * buffer_search_string_len(buffer *b, const char *needle, size_t len) $/;"	f
buffer_to_lower	buffer.c	/^int buffer_to_lower(buffer *b) {$/;"	f
buffer_to_upper	buffer.c	/^int buffer_to_upper(buffer *b) {$/;"	f
buffer_uint	mod_fastcgi.c	/^} buffer_uint;$/;"	t	typeref:struct:__anon187	file:
buffer_urldecode_internal	buffer.c	/^static int buffer_urldecode_internal(buffer *url, int is_query) $/;"	f	file:
buffer_urldecode_path	buffer.c	/^int buffer_urldecode_path(buffer *url) $/;"	f
buffer_urldecode_query	buffer.c	/^int buffer_urldecode_query(buffer *url) $/;"	f
build_doc_root	mod_simple_vhost.c	/^build_doc_root(server * srv, connection * con, plugin_data * p,$/;"	f	file:
build_ssi_cgi_vars	mod_ssi.c	/^static int build_ssi_cgi_vars(server * srv, connection * con, plugin_data * p)$/;"	f	file:
buildshifts	lemon.c	/^PRIVATE void buildshifts(lemp, stp)$/;"	f
bytes_header	base.h	/^	off_t bytes_header;$/;"	m	struct:__anon35
bytes_in	chunk.h	/^	off_t bytes_in, bytes_out;$/;"	m	struct:__anon11
bytes_out	chunk.h	/^	off_t bytes_in, bytes_out;$/;"	m	struct:__anon11
bytes_read	base.h	/^	off_t bytes_read;			\/* used by mod_accesslog, mod_rrd *\/$/;"	m	struct:__anon35
bytes_read	mod_rrdtool.c	/^	double bytes_read, *bytes_read_ptr;$/;"	m	struct:__anon217	file:
bytes_read_ptr	mod_rrdtool.c	/^	double bytes_read, *bytes_read_ptr;$/;"	m	struct:__anon217	file:
bytes_written	base.h	/^	off_t bytes_written;		\/* used by mod_accesslog, mod_rrd *\/$/;"	m	struct:__anon35
bytes_written	mod_rrdtool.c	/^	double bytes_written, *bytes_written_ptr;$/;"	m	struct:__anon217	file:
bytes_written	mod_status.c	/^	double bytes_written;$/;"	m	struct:__anon75	file:
bytes_written_cur_second	base.h	/^	off_t bytes_written_cur_second;	\/* used by mod_accesslog,$/;"	m	struct:__anon35
bytes_written_ptr	mod_rrdtool.c	/^	double bytes_written, *bytes_written_ptr;$/;"	m	struct:__anon217	file:
c_to_lua_push	mod_cml_lua.c	/^c_to_lua_push(lua_State * L, int tbl, const char *key, size_t key_len,$/;"	f	file:
cache	mod_magnet.c	/^	script_cache *cache;$/;"	m	struct:__anon140	file:
cache_call_lua	mod_cml.c	/^cache_call_lua(server * srv, connection * con, plugin_data * p,$/;"	f
cache_export_get_params	mod_cml_lua.c	/^int cache_export_get_params(lua_State * L, int tbl, buffer * qrystr)$/;"	f
cache_parse_lua	mod_cml_lua.c	/^cache_parse_lua(server * srv, connection * con, plugin_data * p, buffer * fn)$/;"	f
canReduce	lemon.c	/^	Boolean canReduce;			\/* True if this rule is ever reduced *\/$/;"	m	struct:rule	file:
cfp	lemon.c	/^	struct config *cfp;			\/* All configurations in this set *\/$/;"	m	struct:state	typeref:struct:state::config	file:
cfp	lemon.c	/^	struct config *cfp;			\/* The configuration to which linked *\/$/;"	m	struct:plink	typeref:struct:plink::config	file:
cgi	mod_cgi.c	/^	array *cgi;$/;"	m	struct:__anon112	file:
cgi_connection_close	mod_cgi.c	/^static handler_t cgi_connection_close(server * srv, handler_ctx * hctx)$/;"	f	file:
cgi_connection_close_callback	mod_cgi.c	/^cgi_connection_close_callback(server * srv, connection * con, void *p_d)$/;"	f	file:
cgi_create_env	mod_cgi.c	/^cgi_create_env(server * srv, connection * con, plugin_data * p,$/;"	f	file:
cgi_demux_response	mod_cgi.c	/^static int cgi_demux_response(server * srv, handler_ctx * hctx)$/;"	f	file:
cgi_env_add	mod_cgi.c	/^cgi_env_add(char_array * env, const char *key, size_t key_len,$/;"	f	file:
cgi_handle_fdevent	mod_cgi.c	/^static handler_t cgi_handle_fdevent(void *s, void *ctx, int revents)$/;"	f	file:
cgi_handler_ctx_free	mod_cgi.c	/^static void cgi_handler_ctx_free(handler_ctx * hctx)$/;"	f	file:
cgi_handler_ctx_init	mod_cgi.c	/^static handler_ctx *cgi_handler_ctx_init()$/;"	f	file:
cgi_pid	mod_cgi.c	/^	buffer_pid_t cgi_pid;$/;"	m	struct:__anon113	file:
cgi_pid_add	mod_cgi.c	/^static int cgi_pid_add(server * srv, plugin_data * p, pid_t pid)$/;"	f	file:
cgi_pid_del	mod_cgi.c	/^static int cgi_pid_del(server * srv, plugin_data * p, pid_t pid)$/;"	f	file:
cgi_response_parse	mod_cgi.c	/^cgi_response_parse(server * srv, connection * con, plugin_data * p, buffer * in)$/;"	f	file:
changeroot	base.h	/^	buffer *changeroot;$/;"	m	struct:__anon42
char_array	mod_cgi.c	/^} char_array;$/;"	t	typeref:struct:__anon110	file:
char_array	mod_fastcgi.c	/^} char_array;$/;"	t	typeref:struct:__anon188	file:
char_array	mod_scgi.c	/^} char_array;$/;"	t	typeref:struct:__anon175	file:
check_local	mod_fastcgi.c	/^	unsigned short check_local;$/;"	m	struct:__anon183	file:
check_local	mod_scgi.c	/^	unsigned short check_local;$/;"	m	struct:__anon171	file:
child	proc_open.h	/^	descriptor_t parent, child;$/;"	m	struct:__anon212
child	proc_open.h	/^	proc_pid_t child;$/;"	m	struct:__anon213
childs	array.h	/^	array *childs;$/;"	m	struct:_data_config
chunk	chunk.h	/^typedef struct chunk $/;"	s
chunk	chunk.h	/^} chunk;$/;"	t	typeref:struct:chunk
chunk_free	chunk.c	/^static void chunk_free(chunk * c)$/;"	f	file:
chunk_init	chunk.c	/^static chunk *chunk_init(void)$/;"	f	file:
chunk_reset	chunk.c	/^static void chunk_reset(chunk * c)$/;"	f	file:
chunkqueue	chunk.h	/^} chunkqueue;$/;"	t	typeref:struct:__anon11
chunkqueue_append_buffer	chunk.c	/^int chunkqueue_append_buffer(chunkqueue * cq, buffer * mem)$/;"	f
chunkqueue_append_buffer_weak	chunk.c	/^int chunkqueue_append_buffer_weak(chunkqueue * cq, buffer * mem)$/;"	f
chunkqueue_append_chunk	chunk.c	/^static int chunkqueue_append_chunk(chunkqueue * cq, chunk * c)$/;"	f	file:
chunkqueue_append_file	chunk.c	/^chunkqueue_append_file(chunkqueue * cq, buffer * fn, off_t offset, off_t len)$/;"	f
chunkqueue_append_mem	chunk.c	/^int chunkqueue_append_mem(chunkqueue * cq, const char *mem, size_t len)$/;"	f
chunkqueue_free	chunk.c	/^void chunkqueue_free(chunkqueue * cq)$/;"	f
chunkqueue_get_append_buffer	chunk.c	/^buffer *chunkqueue_get_append_buffer(chunkqueue * cq)$/;"	f
chunkqueue_get_append_tempfile	chunk.c	/^chunk *chunkqueue_get_append_tempfile(chunkqueue * cq)$/;"	f
chunkqueue_get_prepend_buffer	chunk.c	/^buffer *chunkqueue_get_prepend_buffer(chunkqueue * cq)$/;"	f
chunkqueue_get_unused_chunk	chunk.c	/^static chunk *chunkqueue_get_unused_chunk(chunkqueue * cq)$/;"	f	file:
chunkqueue_init	chunk.c	/^chunkqueue *chunkqueue_init(void)$/;"	f
chunkqueue_is_empty	chunk.c	/^int chunkqueue_is_empty(chunkqueue * cq)$/;"	f
chunkqueue_length	chunk.c	/^off_t chunkqueue_length(chunkqueue * cq)$/;"	f
chunkqueue_prepend_buffer	chunk.c	/^int chunkqueue_prepend_buffer(chunkqueue * cq, buffer * mem)$/;"	f
chunkqueue_prepend_chunk	chunk.c	/^static int chunkqueue_prepend_chunk(chunkqueue * cq, chunk * c)$/;"	f	file:
chunkqueue_remove_finished_chunks	chunk.c	/^int chunkqueue_remove_finished_chunks(chunkqueue * cq)$/;"	f
chunkqueue_reset	chunk.c	/^void chunkqueue_reset(chunkqueue * cq)$/;"	f
chunkqueue_set_tempdirs	chunk.c	/^int chunkqueue_set_tempdirs(chunkqueue * cq, array * tempdirs)$/;"	f
chunkqueue_written	chunk.c	/^off_t chunkqueue_written(chunkqueue * cq)$/;"	f
clean_cond_cache	mod_extforward.c	/^static void clean_cond_cache(server * srv, connection * con)$/;"	f	file:
cleanup	plugin.h	/^	 handler_t(*cleanup) (server * srv, void *p_d);$/;"	m	struct:__anon79
close_descriptor	proc_open.c	35;"	d	file:
close_descriptor	proc_open.c	60;"	d	file:
close_timeout_ts	base.h	/^	time_t close_timeout_ts;$/;"	m	struct:__anon35
cmd	mod_rrdtool.c	/^	buffer *cmd;$/;"	m	struct:__anon218	file:
code	lemon.c	/^	char *code;					\/* The code executed when this rule is reduced *\/$/;"	m	struct:rule	file:
collide	lemon.c	/^	struct action *collide;		\/* Next action with the same hash *\/$/;"	m	struct:action	typeref:struct:action::action	file:
comp	array.h	/^	comp_key_t comp;$/;"	m	struct:_data_config
comp_key	array.h	/^	buffer *comp_key;$/;"	m	struct:_data_config
comp_key_t	array.h	/^} comp_key_t;$/;"	t	typeref:enum:__anon152
comp_type	base.h	/^	comp_key_t comp_type;$/;"	m	struct:__anon34
comp_value	base.h	/^	buffer *comp_value;			\/* just a pointer *\/$/;"	m	struct:__anon34
compare	splaytree.c	70;"	d	file:
compress	mod_compress.c	/^	array *compress;$/;"	m	struct:__anon92	file:
compress_cache_dir	mod_compress.c	/^	buffer *compress_cache_dir;$/;"	m	struct:__anon92	file:
compress_max_filesize	mod_compress.c	/^	off_t compress_max_filesize;$/;"	m	struct:__anon92	file:
compute_action	lemon.c	/^PRIVATE int compute_action(lemp, ap)$/;"	f
con_closed	base.h	/^	int con_closed;$/;"	m	struct:server
con_opened	base.h	/^	int con_opened;$/;"	m	struct:server
con_read	base.h	/^	int con_read;$/;"	m	struct:server
con_written	base.h	/^	int con_written;$/;"	m	struct:server
cond	array.h	/^	config_cond_t cond;$/;"	m	struct:_data_config
cond_cache	base.h	/^	cond_cache_t *cond_cache;$/;"	m	struct:__anon35
cond_cache_t	base.h	/^} cond_cache_t;$/;"	t	typeref:struct:__anon34
cond_check_buf	base.h	/^	buffer *cond_check_buf;$/;"	m	struct:server
cond_result_t	base.h	/^} cond_result_t;$/;"	t	typeref:enum:__anon33
conditional_is_valid	base.h	/^	int conditional_is_valid[COMP_LAST_ELEMENT];$/;"	m	struct:__anon35
conf	base.h	/^	specific_config conf;		\/* global connection specific config *\/$/;"	m	struct:__anon35
conf	http_auth.h	/^	mod_auth_plugin_config conf;	\/* this is only used as long as no$/;"	m	struct:__anon78
conf	mod_access.c	/^	plugin_config conf;$/;"	m	struct:__anon132	file:
conf	mod_accesslog.c	/^	plugin_config conf;$/;"	m	struct:__anon70	file:
conf	mod_alias.c	/^	plugin_config conf;$/;"	m	struct:__anon56	file:
conf	mod_cgi.c	/^	plugin_config conf;$/;"	m	struct:__anon113	file:
conf	mod_cml.h	/^	plugin_config conf;$/;"	m	struct:__anon61
conf	mod_compress.c	/^	plugin_config conf;$/;"	m	struct:__anon93	file:
conf	mod_dirlisting.c	/^	plugin_config conf;$/;"	m	struct:__anon85	file:
conf	mod_evasive.c	/^	plugin_config conf;$/;"	m	struct:__anon59	file:
conf	mod_evhost.c	/^	plugin_config conf;$/;"	m	struct:__anon138	file:
conf	mod_expire.c	/^	plugin_config conf;$/;"	m	struct:__anon81	file:
conf	mod_extforward.c	/^	plugin_config conf;$/;"	m	struct:__anon215	file:
conf	mod_fastcgi.c	/^	plugin_config conf;			\/* this is only used as long as no handler_ctx$/;"	m	struct:__anon189	file:
conf	mod_fastcgi.c	/^	plugin_config conf;$/;"	m	struct:__anon191	file:
conf	mod_flv_streaming.c	/^	plugin_config conf;$/;"	m	struct:__anon130	file:
conf	mod_indexfile.c	/^	plugin_config conf;$/;"	m	struct:__anon206	file:
conf	mod_magnet.c	/^	plugin_config conf;$/;"	m	struct:__anon140	file:
conf	mod_mysql_vhost.c	/^	plugin_config conf;$/;"	m	struct:__anon165	file:
conf	mod_proxy.c	/^	plugin_config conf;$/;"	m	struct:__anon102	file:
conf	mod_redirect.c	/^	plugin_config conf;$/;"	m	struct:__anon99	file:
conf	mod_rewrite.c	/^	plugin_config conf;$/;"	m	struct:__anon128	file:
conf	mod_rrdtool.c	/^	plugin_config conf;$/;"	m	struct:__anon218	file:
conf	mod_scgi.c	/^	plugin_config conf;			\/* this is only used as long as no handler_ctx$/;"	m	struct:__anon176	file:
conf	mod_scgi.c	/^	plugin_config conf;$/;"	m	struct:__anon178	file:
conf	mod_secure_download.c	/^	plugin_config conf;$/;"	m	struct:__anon16	file:
conf	mod_setenv.c	/^	plugin_config conf;$/;"	m	struct:__anon73	file:
conf	mod_simple_vhost.c	/^	plugin_config conf;$/;"	m	struct:__anon50	file:
conf	mod_skeleton.c	/^	plugin_config conf;$/;"	m	struct:__anon13	file:
conf	mod_ssi.h	/^	plugin_config conf;$/;"	m	struct:__anon168
conf	mod_staticfile.c	/^	plugin_config conf;$/;"	m	struct:__anon108	file:
conf	mod_status.c	/^	plugin_config conf;$/;"	m	struct:__anon75	file:
conf	mod_trigger_b4_dl.c	/^	plugin_config conf;$/;"	m	struct:__anon63	file:
conf	mod_userdir.c	/^	plugin_config conf;$/;"	m	struct:__anon208	file:
conf	mod_usertrack.c	/^	plugin_config conf;$/;"	m	struct:__anon181	file:
conf	mod_webdav.c	/^	plugin_config conf;$/;"	m	struct:__anon52	file:
config	base.h	/^	array *config;$/;"	m	struct:server
config	lemon.c	/^struct config {$/;"	s	file:
config_append_cond_match_buffer	configfile-glue.c	/^config_append_cond_match_buffer(connection * con, data_config * dc,$/;"	f
config_check_cond	configfile-glue.c	/^int config_check_cond(server * srv, connection * con, data_config * dc)$/;"	f
config_check_cond_cached	configfile-glue.c	/^config_check_cond_cached(server * srv, connection * con, data_config * dc)$/;"	f	file:
config_check_cond_nocache	configfile-glue.c	/^config_check_cond_nocache(server * srv, connection * con, data_config * dc)$/;"	f	file:
config_cond_cache_reset	configfile-glue.c	/^void config_cond_cache_reset(server * srv, connection * con)$/;"	f
config_cond_cache_reset_all_items	configfile.h	28;"	d
config_cond_cache_reset_item	configfile-glue.c	/^config_cond_cache_reset_item(server * srv, connection * con, comp_key_t item)$/;"	f
config_cond_t	array.h	/^} config_cond_t;$/;"	t	typeref:enum:__anon151
config_context	base.h	/^	array *config_context;$/;"	m	struct:server
config_deprecated	base.h	/^	short int config_deprecated;$/;"	m	struct:server
config_insert	configfile.c	/^static int config_insert(server * srv)$/;"	f	file:
config_insert_values_global	configfile-glue.c	/^config_insert_values_global(server * srv, array * ca,$/;"	f
config_insert_values_internal	configfile-glue.c	/^config_insert_values_internal(server * srv, array * ca,$/;"	f
config_parse	configfile.c	/^static int config_parse(server * srv, config_t * context, tokenizer_t * t)$/;"	f	file:
config_parse_cmd	configfile.c	/^int config_parse_cmd(server * srv, config_t * context, const char *cmd)$/;"	f
config_parse_file	configfile.c	/^int config_parse_file(server * srv, config_t * context, const char *fn)$/;"	f
config_patch_connection	configfile.c	/^int config_patch_connection(server * srv, connection * con, comp_key_t comp)$/;"	f
config_read	configfile.c	/^int config_read(server * srv, const char *fn)$/;"	f
config_scope_type_t	base.h	/^} config_scope_type_t;$/;"	t	typeref:enum:__anon18
config_set_defaults	configfile.c	/^int config_set_defaults(server * srv)$/;"	f
config_setup_connection	configfile.c	/^int config_setup_connection(server * srv, connection * con)$/;"	f
config_skip_comment	configfile.c	/^static int config_skip_comment(tokenizer_t * t)$/;"	f	file:
config_skip_newline	configfile.c	/^static int config_skip_newline(tokenizer_t * t)$/;"	f	file:
config_storage	base.h	/^	specific_config **config_storage;$/;"	m	struct:server
config_storage	http_auth.h	/^	mod_auth_plugin_config **config_storage;$/;"	m	struct:__anon78
config_storage	mod_access.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon132	file:
config_storage	mod_accesslog.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon70	file:
config_storage	mod_alias.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon56	file:
config_storage	mod_cgi.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon113	file:
config_storage	mod_cml.h	/^	plugin_config **config_storage;$/;"	m	struct:__anon61
config_storage	mod_compress.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon93	file:
config_storage	mod_dirlisting.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon85	file:
config_storage	mod_evasive.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon59	file:
config_storage	mod_evhost.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon138	file:
config_storage	mod_expire.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon81	file:
config_storage	mod_extforward.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon215	file:
config_storage	mod_fastcgi.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon189	file:
config_storage	mod_flv_streaming.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon130	file:
config_storage	mod_indexfile.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon206	file:
config_storage	mod_magnet.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon140	file:
config_storage	mod_mysql_vhost.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon165	file:
config_storage	mod_proxy.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon102	file:
config_storage	mod_redirect.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon99	file:
config_storage	mod_rewrite.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon128	file:
config_storage	mod_rrdtool.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon218	file:
config_storage	mod_scgi.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon176	file:
config_storage	mod_secure_download.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon16	file:
config_storage	mod_setenv.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon73	file:
config_storage	mod_simple_vhost.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon50	file:
config_storage	mod_skeleton.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon13	file:
config_storage	mod_ssi.h	/^	plugin_config **config_storage;$/;"	m	struct:__anon168
config_storage	mod_staticfile.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon108	file:
config_storage	mod_status.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon75	file:
config_storage	mod_trigger_b4_dl.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon63	file:
config_storage	mod_userdir.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon208	file:
config_storage	mod_usertrack.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon181	file:
config_storage	mod_webdav.c	/^	plugin_config **config_storage;$/;"	m	struct:__anon52	file:
config_t	configfile.h	/^} config_t;$/;"	t	typeref:struct:__anon194
config_tokenizer	configfile.c	/^config_tokenizer(server * srv, tokenizer_t * t, int *token_id, buffer * token)$/;"	f	file:
config_touched	base.h	/^	array *config_touched;$/;"	m	struct:server
config_unsupported	base.h	/^	short int config_unsupported;$/;"	m	struct:server
config_url	mod_status.c	/^	buffer *config_url;$/;"	m	struct:__anon74	file:
config_values_t	base.h	/^} config_values_t;$/;"	t	typeref:struct:__anon19
config_values_type_t	base.h	/^} config_values_type_t;$/;"	t	typeref:enum:__anon17
config_var_t	server.h	/^typedef enum { CONFIG_UNSET, CONFIG_DOCUMENT_ROOT } config_var_t;$/;"	t	typeref:enum:__anon48
confighash	lemon.c	/^PRIVATE int confighash(a)$/;"	f
configparser	configparser.c	/^void configparser(void *yyp,	\/* The parser *\/$/;"	f
configparserARG_FETCH	configparser.c	202;"	d	file:
configparserARG_PDECL	configparser.c	201;"	d	file:
configparserARG_SDECL	configparser.c	200;"	d	file:
configparserARG_STORE	configparser.c	203;"	d	file:
configparserAlloc	configparser.c	/^void *configparserAlloc(void *(*mallocProc) (size_t))$/;"	f
configparserFree	configparser.c	/^void configparserFree(void *p,	\/* The parser to be deleted *\/$/;"	f
configparserTOKENTYPE	configparser.c	189;"	d	file:
configparserTokenName	configparser.c	/^const char *configparserTokenName(int tokenType)$/;"	f
configparserTrace	configparser.c	/^void configparserTrace(FILE * TraceFILE, char *zTracePrompt)$/;"	f
configparser_get_variable	configparser.c	/^static data_unset *configparser_get_variable(config_t * ctx, const buffer * key)$/;"	f	file:
configparser_merge_data	configparser.c	/^data_unset *configparser_merge_data(data_unset * op1, const data_unset * op2)$/;"	f
configparser_pop	configparser.c	/^static data_config *configparser_pop(config_t * ctx)$/;"	f	file:
configparser_push	configparser.c	/^static void configparser_push(config_t * ctx, data_config * dc, int isnew)$/;"	f	file:
configs_stack	configfile.h	/^	array *configs_stack;		\/* to parse nested block *\/$/;"	m	struct:__anon194
conn	fdevent.h	/^	void *conn;				 \/**< a reference the corresponding data-structure *\/$/;"	m	struct:__anon5
connection	base.h	/^} connection;$/;"	t	typeref:struct:__anon35
connection_accept	connections.c	/^connection *connection_accept(server * srv, server_socket * srv_socket)$/;"	f
connection_close	connections.c	/^int connection_close(server * srv, connection * con)$/;"	f
connection_del	connections.c	/^static int connection_del(server * srv, connection * con)$/;"	f	file:
connection_get_short_state	connections-glue.c	/^const char *connection_get_short_state(connection_state_t state)$/;"	f
connection_get_state	connections-glue.c	/^const char *connection_get_state(connection_state_t state)$/;"	f
connection_handle_fdevent	connections.c	/^handler_t connection_handle_fdevent(void *s, void *context, int revents)$/;"	f
connection_handle_read	connections.c	/^static int connection_handle_read(server * srv, connection * con)$/;"	f	file:
connection_handle_read_ssl	connections.c	/^static int connection_handle_read_ssl(server * srv, connection * con)$/;"	f	file:
connection_handle_read_state	connections.c	/^int connection_handle_read_state(server * srv, connection * con)$/;"	f
connection_handle_write	connections.c	/^static int connection_handle_write(server * srv, connection * con)$/;"	f	file:
connection_handle_write_prepare	connections.c	/^static int connection_handle_write_prepare(server * srv, connection * con)$/;"	f	file:
connection_init	connections.c	/^connection *connection_init(server * srv)$/;"	f
connection_name	mod_fastcgi.c	/^	buffer *connection_name;	\/* either tcp:<host>:<port> or$/;"	m	struct:fcgi_proc	file:
connection_reset	connections.c	/^int connection_reset(server * srv, connection * con)$/;"	f
connection_reset	plugin.h	/^	 handler_t(*connection_reset) (server * srv, connection * con, void *p_d);	\/* *\/$/;"	m	struct:__anon79
connection_result_t	mod_fastcgi.c	/^} connection_result_t;$/;"	t	typeref:enum:__anon192	file:
connection_set_state	connections-glue.c	/^connection_set_state(server * srv, connection * con, connection_state_t state)$/;"	f
connection_start	base.h	/^	time_t connection_start;$/;"	m	struct:__anon35
connection_state_machine	connections.c	/^int connection_state_machine(server * srv, connection * con)$/;"	f
connection_state_t	base.h	/^} connection_state_t;$/;"	t	typeref:enum:__anon32
connection_type	base.h	/^typedef enum { DIRECT, EXTERNAL } connection_type;$/;"	t	typeref:enum:__anon20
connections	base.h	/^} connections;$/;"	t	typeref:struct:__anon36
connections_free	connections.c	/^void connections_free(server * srv)$/;"	f
connections_get_new_connection	connections.c	/^static connection *connections_get_new_connection(server * srv)$/;"	f	file:
conns	base.h	/^	connections *conns;$/;"	m	struct:server
contentLengthB0	fastcgi.h	/^	unsigned char contentLengthB0;$/;"	m	struct:__anon116
contentLengthB1	fastcgi.h	/^	unsigned char contentLengthB1;$/;"	m	struct:__anon116
content_charset	mod_dirlisting.c	/^	buffer *content_charset;$/;"	m	struct:__anon85	file:
content_length	base.h	/^	off_t content_length;$/;"	m	struct:__anon25
content_length	base.h	/^	size_t content_length;		\/* returned by strtoul() *\/$/;"	m	struct:__anon24
content_type	base.h	/^	buffer *content_type; 	\/\/文件类型$/;"	m	struct:__anon29
context	configparser.y	/^context:: = DOLLAR SRVVARNAME(B)$/;"	l
context	mod_redirect.c	/^	data_config *context;		\/* to which apply me *\/$/;"	m	struct:__anon98	file:
context	mod_rewrite.c	/^	data_config *context;		\/* to which apply me *\/$/;"	m	struct:__anon125	file:
context_free	configfile.c	/^static void context_free(config_t * context)$/;"	f	file:
context_init	configfile.c	/^static void context_init(server * srv, config_t * context)$/;"	f	file:
context_ndx	array.h	/^	int context_ndx;			\/* more or less like an id *\/$/;"	m	struct:_data_config
cookie_domain	mod_usertrack.c	/^	buffer *cookie_domain;$/;"	m	struct:__anon180	file:
cookie_max_age	mod_usertrack.c	/^	unsigned short cookie_max_age;$/;"	m	struct:__anon180	file:
cookie_name	mod_usertrack.c	/^	buffer *cookie_name;$/;"	m	struct:__anon180	file:
count	array.h	/^	int count;$/;"	m	struct:__anon148
count	lemon.c	/^	int count;					\/* Number of currently slots filled *\/$/;"	m	struct:s_x1	file:
count	lemon.c	/^	int count;					\/* Number of currently slots filled *\/$/;"	m	struct:s_x2	file:
count	lemon.c	/^	int count;					\/* Number of currently slots filled *\/$/;"	m	struct:s_x3	file:
count	lemon.c	/^	int count;					\/* Number of currently slots filled *\/$/;"	m	struct:s_x4	file:
count	md5.h	/^	UINT4 count[2];				\/* number of bits, modulo 2^64 (lsb first) *\/$/;"	m	struct:__anon135
crc_c	crc32.c	/^static const unsigned int crc_c[256] = {$/;"	v	file:
ctrl	stat_cache.c	/^static fake_keys ctrl;$/;"	v	file:
ctx	fdevent.h	/^	void *ctx;$/;"	m	struct:_fdnode
cur_fds	base.h	/^	int cur_fds;				\/* currently used fds *\/$/;"	m	struct:server
cur_ts	base.h	/^	time_t cur_ts;$/;"	m	struct:server
current	configfile.h	/^	data_config *current;		\/* current started with { *\/$/;"	m	struct:__anon194
current	lemon.c	/^static struct config *current = 0;	\/* Top of list of configurations *\/$/;"	v	typeref:struct:config	file:
currentend	lemon.c	/^static struct config **currentend = 0;	\/* Last on list of configs *\/$/;"	v	typeref:struct:config	file:
daemonize	server.c	/^static void daemonize(void)$/;"	f	file:
data	array.h	/^	data_unset **data;$/;"	m	struct:__anon147
data	lemon.c	/^	char *data;					\/* The data *\/$/;"	m	struct:s_x1node	file:
data	lemon.c	/^	struct config *data;		\/* The data *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::config	file:
data	lemon.c	/^	struct state *data;			\/* The data *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::state	file:
data	lemon.c	/^	struct symbol *data;		\/* The data *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::symbol	file:
data	plugin.h	/^	void *data;$/;"	m	struct:__anon79
data	splaytree.h	/^	void *data; 	\/\/节点存储的数据。$/;"	m	struct:tree_node
data_array	array.h	/^} data_array;$/;"	t	typeref:struct:__anon150
data_array_copy	data_array.c	/^static data_unset *data_array_copy(const data_unset * s)$/;"	f	file:
data_array_free	data_array.c	/^static void data_array_free(data_unset * d)$/;"	f	file:
data_array_init	data_array.c	/^data_array *data_array_init(void)$/;"	f
data_array_insert_dup	data_array.c	/^static int data_array_insert_dup(data_unset * dst, data_unset * src)$/;"	f	file:
data_array_print	data_array.c	/^static void data_array_print(const data_unset * d, int depth)$/;"	f	file:
data_array_reset	data_array.c	/^static void data_array_reset(data_unset * d)$/;"	f	file:
data_config	array.h	/^typedef struct _data_config data_config;$/;"	t	typeref:struct:_data_config
data_config_copy	data_config.c	/^static data_unset *data_config_copy(const data_unset * s)$/;"	f	file:
data_config_free	data_config.c	/^static void data_config_free(data_unset * d)$/;"	f	file:
data_config_init	data_config.c	/^data_config *data_config_init(void)$/;"	f
data_config_insert_dup	data_config.c	/^static int data_config_insert_dup(data_unset * dst, data_unset * src)$/;"	f	file:
data_config_print	data_config.c	/^static void data_config_print(const data_unset * d, int depth)$/;"	f	file:
data_config_reset	data_config.c	/^static void data_config_reset(data_unset * d)$/;"	f	file:
data_count	array.h	/^} data_count;$/;"	t	typeref:struct:__anon148
data_count_copy	data_count.c	/^static data_unset *data_count_copy(const data_unset * s)$/;"	f	file:
data_count_free	data_count.c	/^static void data_count_free(data_unset * d)$/;"	f	file:
data_count_init	data_count.c	/^data_count *data_count_init(void)$/;"	f
data_count_insert_dup	data_count.c	/^static int data_count_insert_dup(data_unset * dst, data_unset * src)$/;"	f	file:
data_count_print	data_count.c	/^static void data_count_print(const data_unset * d, int depth)$/;"	f	file:
data_count_reset	data_count.c	/^static void data_count_reset(data_unset * d)$/;"	f	file:
data_fastcgi	array.h	/^} data_fastcgi;$/;"	t	typeref:struct:__anon154
data_fastcgi_copy	data_fastcgi.c	/^static data_unset *data_fastcgi_copy(const data_unset * s)$/;"	f	file:
data_fastcgi_free	data_fastcgi.c	/^static void data_fastcgi_free(data_unset * d)$/;"	f	file:
data_fastcgi_init	data_fastcgi.c	/^data_fastcgi *data_fastcgi_init(void)$/;"	f
data_fastcgi_insert_dup	data_fastcgi.c	/^static int data_fastcgi_insert_dup(data_unset * dst, data_unset * src)$/;"	f	file:
data_fastcgi_print	data_fastcgi.c	/^static void data_fastcgi_print(const data_unset * d, int depth)$/;"	f	file:
data_fastcgi_reset	data_fastcgi.c	/^static void data_fastcgi_reset(data_unset * d)$/;"	f	file:
data_integer	array.h	/^} data_integer;$/;"	t	typeref:struct:__anon153
data_integer_copy	data_integer.c	/^static data_unset *data_integer_copy(const data_unset * s)$/;"	f	file:
data_integer_free	data_integer.c	/^static void data_integer_free(data_unset * d)$/;"	f	file:
data_integer_init	data_integer.c	/^data_integer *data_integer_init(void)$/;"	f
data_integer_insert_dup	data_integer.c	/^static int data_integer_insert_dup(data_unset * dst, data_unset * src)$/;"	f	file:
data_integer_print	data_integer.c	/^static void data_integer_print(const data_unset * d, int depth)$/;"	f	file:
data_integer_reset	data_integer.c	/^static void data_integer_reset(data_unset * d)$/;"	f	file:
data_proxy	mod_proxy.c	35;"	d	file:
data_proxy_init	mod_proxy.c	36;"	d	file:
data_response_init	data_string.c	/^data_string *data_response_init(void)$/;"	f
data_response_insert_dup	data_string.c	/^static int data_response_insert_dup(data_unset * dst, data_unset * src)$/;"	f	file:
data_string	array.h	/^} data_string;$/;"	t	typeref:struct:__anon149
data_string_copy	data_string.c	/^static data_unset *data_string_copy(const data_unset * s)$/;"	f	file:
data_string_free	data_string.c	/^static void data_string_free(data_unset * d)$/;"	f	file:
data_string_init	data_string.c	/^data_string *data_string_init(void)$/;"	f
data_string_insert_dup	data_string.c	/^static int data_string_insert_dup(data_unset * dst, data_unset * src)$/;"	f	file:
data_string_print	data_string.c	/^static void data_string_print(const data_unset * d, int depth)$/;"	f	file:
data_string_reset	data_string.c	/^static void data_string_reset(data_unset * d)$/;"	f	file:
data_type_t	array.h	/^} data_type_t;$/;"	t	typeref:enum:__anon146
data_unset	array.h	/^typedef struct data_unset {$/;"	s
data_unset	array.h	/^} data_unset;$/;"	t	typeref:struct:data_unset
datatype	lemon.c	/^	char *datatype;				\/* The data type of information held by this *$/;"	m	struct:symbol	file:
db	mod_trigger_b4_dl.c	/^	GDBM_FILE db;$/;"	m	struct:__anon62	file:
db_filename	mod_trigger_b4_dl.c	/^	buffer *db_filename;$/;"	m	struct:__anon62	file:
debug	mod_fastcgi.c	/^	int debug;$/;"	m	struct:__anon186	file:
debug	mod_proxy.c	/^	unsigned short debug;$/;"	m	struct:__anon101	file:
debug	mod_scgi.c	/^	int debug;$/;"	m	struct:__anon174	file:
debug	mod_simple_vhost.c	/^	unsigned short debug;$/;"	m	struct:__anon49	file:
debug	mod_trigger_b4_dl.c	/^	unsigned short debug;$/;"	m	struct:__anon62	file:
declargslot	lemon.c	/^	char **declargslot;			\/* Where the declaration argument should be $/;"	m	struct:pstate	file:
declassoc	lemon.c	/^	enum e_assoc declassoc;		\/* Assign this association to decl arguments *\/$/;"	m	struct:pstate	typeref:enum:pstate::e_assoc	file:
declkeyword	lemon.c	/^	char *declkeyword;			\/* Keyword of a declaration *\/$/;"	m	struct:pstate	file:
decllnslot	lemon.c	/^	int *decllnslot;			\/* Where the declaration linenumber is put *\/$/;"	m	struct:pstate	file:
default_host	mod_simple_vhost.c	/^	buffer *default_host;$/;"	m	struct:__anon49	file:
deflate_file_to_buffer	mod_compress.c	/^deflate_file_to_buffer(server * srv, connection * con, plugin_data * p,$/;"	f	file:
deflate_file_to_buffer_bzip2	mod_compress.c	/^deflate_file_to_buffer_bzip2(server * srv, connection * con,$/;"	f	file:
deflate_file_to_buffer_deflate	mod_compress.c	/^deflate_file_to_buffer_deflate(server * srv, connection * con,$/;"	f	file:
deflate_file_to_buffer_gzip	mod_compress.c	/^deflate_file_to_buffer_gzip(server * srv, connection * con,$/;"	f	file:
deflate_file_to_file	mod_compress.c	/^deflate_file_to_file(server * srv, connection * con, plugin_data * p,$/;"	f	file:
delayed	mod_scgi.c	/^	int delayed;				\/* flag to mark that the connect() is delayed *\/$/;"	m	struct:__anon178	file:
deleteconfig	lemon.c	/^PRIVATE void deleteconfig(old)$/;"	f
deny_url	mod_trigger_b4_dl.c	/^	buffer *deny_url;$/;"	m	struct:__anon62	file:
descriptor_t	proc_open.h	/^typedef HANDLE descriptor_t;$/;"	t
descriptor_t	proc_open.h	/^typedef int descriptor_t;$/;"	t
destination	base.h	/^	void *destination;$/;"	m	struct:__anon19
destructor	lemon.c	/^	char *destructor;			\/* Code which executes whenever this symbol is$/;"	m	struct:symbol	file:
destructorln	lemon.c	/^	int destructorln;			\/* Line number of destructor code *\/$/;"	m	struct:symbol	file:
devpoll_fd	fdevent.h	/^	int devpoll_fd;$/;"	m	struct:fdevents
devpollfds	fdevent.h	/^	struct pollfd *devpollfds;$/;"	m	struct:fdevents	typeref:struct:fdevents::pollfd
digest_kv	http_auth.c	/^} digest_kv;$/;"	t	typeref:struct:__anon219	file:
dir_listing	mod_dirlisting.c	/^	unsigned short dir_listing;$/;"	m	struct:__anon84	file:
dir_name	base.h	/^	buffer *dir_name;			\/* for building the dirname from the filename *\/$/;"	m	struct:__anon30
dir_ndx	base.h	/^	int dir_ndx; 		\/\/$/;"	m	struct:__anon29
dir_version	base.h	/^	int dir_version;  	\/\/$/;"	m	struct:__anon29
dirlist_encoding	base.h	/^	buffer *dirlist_encoding;$/;"	m	struct:__anon31
dirls_entry_t	mod_dirlisting.c	/^} dirls_entry_t;$/;"	t	typeref:struct:__anon86	file:
dirls_list_t	mod_dirlisting.c	/^} dirls_list_t;$/;"	t	typeref:struct:__anon87	file:
dirs	base.h	/^	splay_tree *dirs;			\/* the nodes of the tree are fam_dir_entry *\/$/;"	m	struct:__anon30
disable_time	mod_fastcgi.c	/^	unsigned short disable_time;$/;"	m	struct:__anon183	file:
disable_time	mod_scgi.c	/^	unsigned short disable_time;$/;"	m	struct:__anon171	file:
disable_ts	array.h	/^	time_t disable_ts;$/;"	m	struct:__anon154
disable_ts	mod_scgi.c	/^	time_t disable_ts;			\/* replace by host->something *\/$/;"	m	struct:scgi_proc	file:
disabled_until	mod_fastcgi.c	/^	time_t disabled_until;		\/* this proc is disabled until, use$/;"	m	struct:fcgi_proc	file:
doc_root	base.h	/^	buffer *doc_root;			\/* path = doc_root + rel_path *\/$/;"	m	struct:__anon28
doc_root	mod_secure_download.c	/^	buffer *doc_root;$/;"	m	struct:__anon15	file:
doc_root	mod_simple_vhost.c	/^	buffer *doc_root;$/;"	m	struct:__anon50	file:
docroot	mod_fastcgi.c	/^	buffer *docroot;$/;"	m	struct:__anon183	file:
docroot	mod_scgi.c	/^	buffer *docroot;$/;"	m	struct:__anon171	file:
docroot_cache_key	mod_simple_vhost.c	/^	buffer *docroot_cache_key;$/;"	m	struct:__anon49	file:
docroot_cache_servername	mod_simple_vhost.c	/^	buffer *docroot_cache_servername;$/;"	m	struct:__anon49	file:
docroot_cache_value	mod_simple_vhost.c	/^	buffer *docroot_cache_value;$/;"	m	struct:__anon49	file:
document_root	base.h	/^	buffer *document_root;$/;"	m	struct:__anon31
document_root	mod_mysql_vhost.c	/^	buffer *document_root;$/;"	m	struct:__anon166	file:
document_root	mod_simple_vhost.c	/^	buffer *document_root;$/;"	m	struct:__anon49	file:
done	mod_cml_lua.c	/^	int done;$/;"	m	struct:__anon211	file:
dont_daemonize	base.h	/^	unsigned short dont_daemonize;$/;"	m	struct:__anon42
dot	lemon.c	/^	int dot;					\/* The parse point *\/$/;"	m	struct:config	file:
download_regex	mod_trigger_b4_dl.c	/^	pcre *download_regex;$/;"	m	struct:__anon62	file:
download_url	mod_trigger_b4_dl.c	/^	buffer *download_url;$/;"	m	struct:__anon62	file:
dst_addr	base.h	/^	sock_addr dst_addr;$/;"	m	struct:__anon35
dst_addr_buf	base.h	/^	buffer *dst_addr_buf;$/;"	m	struct:__anon35
dtnum	lemon.c	/^	int dtnum;					\/* The data type number.  In the parser, the$/;"	m	struct:symbol	file:
dup_handle	proc_open.c	/^static inline HANDLE dup_handle(HANDLE src, BOOL inherit, BOOL closeorig)$/;"	f	file:
e_action	lemon.c	/^	enum e_action {$/;"	g	struct:action	file:
e_assoc	lemon.c	/^	enum e_assoc {$/;"	g	struct:symbol	file:
e_state	lemon.c	/^	enum e_state {$/;"	g	struct:pstate	file:
elementsof	configfile-glue.c	598;"	d	file:
emit_code	lemon.c	/^PRIVATE void emit_code(out, rp, lemp, lineno)$/;"	f
emit_destructor_code	lemon.c	/^void emit_destructor_code(out, sp, lemp, lineno)$/;"	f
empty_string	base.h	/^	buffer *empty_string;		\/* is necessary for cond_match *\/$/;"	m	struct:server
emsg	lemon.c	/^static char emsg[] = "Command line syntax error: ";$/;"	v	file:
enable_cores	base.h	/^	unsigned short enable_cores;$/;"	m	struct:__anon42
enabled	mod_webdav.c	/^	unsigned short enabled;$/;"	m	struct:__anon51	file:
encode_buf	mod_magnet.c	/^	buffer *encode_buf;$/;"	m	struct:__anon140	file:
encoded_chars_hex	buffer.c	/^const char encoded_chars_hex[] = $/;"	v
encoded_chars_html	buffer.c	/^const char encoded_chars_html[] = $/;"	v
encoded_chars_http_header	buffer.c	/^const char encoded_chars_http_header[] = $/;"	v
encoded_chars_minimal_xml	buffer.c	/^const char encoded_chars_minimal_xml[] = $/;"	v
encoded_chars_rel_uri	buffer.c	/^const char encoded_chars_rel_uri[] = $/;"	v
encoded_chars_rel_uri_part	buffer.c	/^const char encoded_chars_rel_uri_part[] = $/;"	v
encoding	mod_dirlisting.c	/^	buffer *encoding;$/;"	m	struct:__anon84	file:
ent	mod_dirlisting.c	/^	dirls_entry_t **ent;$/;"	m	struct:__anon87	file:
env_add	mod_fastcgi.c	/^env_add(char_array * env, const char *key, size_t key_len, const char *val,$/;"	f	file:
env_add	mod_scgi.c	/^env_add(char_array * env, const char *key, size_t key_len, const char *val,$/;"	f	file:
environ	base.h	62;"	d
environment	base.h	/^	array *environment;			\/* used to pass lighttpd internal stuff to$/;"	m	struct:__anon35
environment	mod_setenv.c	/^	array *environment;$/;"	m	struct:__anon72	file:
eols	configparser.y	/^eols:: = EOL.eols:: =.globalstart:: = GLOBAL.$/;"	l
epoll_events	fdevent.h	/^	struct epoll_event *epoll_events;$/;"	m	struct:fdevents	typeref:struct:fdevents::epoll_event
epoll_fd	fdevent.h	/^	int epoll_fd;$/;"	m	struct:fdevents
err	proc_open.h	/^	pipe_t in, out, err;$/;"	m	struct:__anon213
errline	lemon.c	/^static void errline(n, k, err)$/;"	f	file:
error	lemon.c	/^	char *error;				\/* Code to execute when an error is seen *\/$/;"	m	struct:lemon	file:
error_handler	base.h	/^	buffer *error_handler;$/;"	m	struct:__anon31
error_handler	base.h	/^	buffer *error_handler;$/;"	m	struct:__anon35
error_handler_saved_status	base.h	/^	int error_handler_saved_status;$/;"	m	struct:__anon35
errorcnt	lemon.c	/^	int errorcnt;				\/* Number of errors *\/$/;"	m	struct:lemon	file:
errorcnt	lemon.c	/^	int errorcnt;				\/* Number of errors so far *\/$/;"	m	struct:pstate	file:
errorfile_prefix	base.h	/^	buffer *errorfile_prefix;$/;"	m	struct:__anon31
errorln	lemon.c	/^	int errorln;				\/* Line number for start of error code *\/$/;"	m	struct:lemon	file:
errorlog_buf	base.h	/^	buffer *errorlog_buf;$/;"	m	struct:server
errorlog_fd	base.h	/^	int errorlog_fd;$/;"	m	struct:server
errorlog_file	base.h	/^	buffer *errorlog_file;$/;"	m	struct:__anon42
errorlog_mode	base.h	/^	enum { ERRORLOG_STDERR, ERRORLOG_FILE, ERRORLOG_SYSLOG } errorlog_mode;$/;"	m	struct:server	typeref:enum:server::__anon46
errorlog_use_syslog	base.h	/^	unsigned short errorlog_use_syslog;$/;"	m	struct:__anon42
errstream	lemon.c	/^static FILE *errstream;$/;"	v	file:
errsym	lemon.c	/^	struct symbol *errsym;		\/* The error symbol *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
etag	base.h	/^	buffer *etag; 		\/\/文件的etag$/;"	m	struct:__anon29
etag	base.h	/^	buffer *etag;$/;"	m	struct:__anon28
etag	mod_magnet_cache.h	/^	buffer *etag;$/;"	m	struct:__anon155
etag_create	etag.c	/^int etag_create(buffer * etag, struct stat *st, etag_flags_t flags)$/;"	f
etag_flags	base.h	/^	etag_flags_t etag_flags;$/;"	m	struct:__anon35
etag_flags_t	etag.h	/^} etag_flags_t;$/;"	t	typeref:enum:__anon195
etag_is_equal	etag.c	/^int etag_is_equal(buffer * etag, const char *matches)$/;"	f
etag_mutate	etag.c	/^int etag_mutate(buffer * mut, buffer * etag)$/;"	f
etag_use_inode	base.h	/^	unsigned short etag_use_inode;$/;"	m	struct:__anon31
etag_use_mtime	base.h	/^	unsigned short etag_use_mtime;$/;"	m	struct:__anon31
etag_use_size	base.h	/^	unsigned short etag_use_size;$/;"	m	struct:__anon31
etags_used	mod_staticfile.c	/^	unsigned short etags_used;$/;"	m	struct:__anon107	file:
ev	base.h	/^	fdevents *ev, *ev_ins;$/;"	m	struct:server
ev_ins	base.h	/^	fdevents *ev, *ev_ins;$/;"	m	struct:server
event_add	fdevent.h	/^	int (*event_add) (struct fdevents * ev, int fde_ndx, int fd, int events);$/;"	m	struct:fdevents
event_del	fdevent.h	/^	int (*event_del) (struct fdevents * ev, int fde_ndx, int fd);$/;"	m	struct:fdevents
event_get_fd	fdevent.h	/^	int (*event_get_fd) (struct fdevents * ev, size_t ndx);$/;"	m	struct:fdevents
event_get_revent	fdevent.h	/^	int (*event_get_revent) (struct fdevents * ev, size_t ndx);$/;"	m	struct:fdevents
event_handler	base.h	/^	buffer *event_handler;$/;"	m	struct:__anon42
event_handler	base.h	/^	fdevent_handler_t event_handler;$/;"	m	struct:server
event_next_fdndx	fdevent.h	/^	int (*event_next_fdndx) (struct fdevents * ev, int ndx);$/;"	m	struct:fdevents
events	fdevent.h	/^	int events;$/;"	m	struct:__anon5
exceptionjmp	mod_magnet.c	/^static jmp_buf exceptionjmp;$/;"	v	file:
exclude_ext	mod_staticfile.c	/^	array *exclude_ext;$/;"	m	struct:__anon107	file:
exclude_user	mod_userdir.c	/^	array *exclude_user;$/;"	m	struct:__anon207	file:
excludes	mod_dirlisting.c	/^	excludes_buffer *excludes;$/;"	m	struct:__anon84	file:
excludes	mod_dirlisting.c	/^} excludes;$/;"	t	typeref:struct:__anon82	file:
excludes_buffer	mod_dirlisting.c	/^} excludes_buffer;$/;"	t	typeref:struct:__anon83	file:
excludes_buffer_append	mod_dirlisting.c	/^int excludes_buffer_append(excludes_buffer * exb, buffer * string)$/;"	f
excludes_buffer_free	mod_dirlisting.c	/^void excludes_buffer_free(excludes_buffer * exb)$/;"	f
excludes_buffer_init	mod_dirlisting.c	/^excludes_buffer *excludes_buffer_init(void)$/;"	f
expire_tstmp	mod_expire.c	/^	buffer *expire_tstmp;$/;"	m	struct:__anon81	file:
expire_url	mod_expire.c	/^	array *expire_url;$/;"	m	struct:__anon80	file:
ext	mod_cml.h	/^	buffer *ext;$/;"	m	struct:__anon60
ext	mod_fastcgi.c	/^	fcgi_extension *ext;$/;"	m	struct:__anon191	file:
ext_mapping	mod_fastcgi.c	/^	array *ext_mapping;$/;"	m	struct:__anon186	file:
extensions	mod_flv_streaming.c	/^	array *extensions;$/;"	m	struct:__anon129	file:
extensions	mod_proxy.c	/^	array *extensions;$/;"	m	struct:__anon101	file:
external_css	mod_dirlisting.c	/^	buffer *external_css;$/;"	m	struct:__anon84	file:
extracode	lemon.c	/^	char *extracode;			\/* Code appended to the generated file *\/$/;"	m	struct:lemon	file:
extracodeln	lemon.c	/^	int extracodeln;			\/* Line number for the start of the extra$/;"	m	struct:lemon	file:
extract_forward_array	mod_extforward.c	/^static array *extract_forward_array(buffer * pbuffer)$/;"	f	file:
exts	mod_fastcgi.c	/^	fcgi_extension **exts;$/;"	m	struct:__anon185	file:
exts	mod_fastcgi.c	/^	fcgi_exts *exts;$/;"	m	struct:__anon186	file:
exts	mod_scgi.c	/^	scgi_extension **exts;$/;"	m	struct:__anon173	file:
exts	mod_scgi.c	/^	scgi_exts *exts;$/;"	m	struct:__anon174	file:
f_crypto_md5	mod_cml_funcs.c	/^int f_crypto_md5(lua_State * L)$/;"	f
f_dir_files	mod_cml_funcs.c	/^int f_dir_files(lua_State * L)$/;"	f
f_dir_files_iter	mod_cml_funcs.c	/^int f_dir_files_iter(lua_State * L)$/;"	f
f_file_isdir	mod_cml_funcs.c	/^int f_file_isdir(lua_State * L)$/;"	f
f_file_isreg	mod_cml_funcs.c	/^int f_file_isreg(lua_State * L)$/;"	f
f_file_mtime	mod_cml_funcs.c	/^int f_file_mtime(lua_State * L)$/;"	f
f_memcache_exists	mod_cml_funcs.c	/^int f_memcache_exists(lua_State * L)$/;"	f
f_memcache_get_long	mod_cml_funcs.c	/^int f_memcache_get_long(lua_State * L)$/;"	f
f_memcache_get_string	mod_cml_funcs.c	/^int f_memcache_get_string(lua_State * L)$/;"	f
factor	base.h	/^	short factor;$/;"	m	struct:__anon22
failure	lemon.c	/^	char *failure;				\/* Code to execute on parser failure *\/$/;"	m	struct:lemon	file:
failureln	lemon.c	/^	int failureln;				\/* Line number for start of failure code *\/$/;"	m	struct:lemon	file:
fake_keys	stat_cache.c	/^} fake_keys;$/;"	t	typeref:struct:__anon134	file:
fallback	lemon.c	/^	struct symbol *fallback;	\/* The fallback token *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
fallback	lemon.c	/^	struct symbol *fallback;	\/* fallback token in case this token doesn't$/;"	m	struct:symbol	typeref:struct:symbol::symbol	file:
fam	base.h	/^	FAMConnection *fam;$/;"	m	struct:__anon30
fam_dir_entry	stat_cache.c	/^} fam_dir_entry;$/;"	t	typeref:struct:__anon133	file:
fam_dir_entry_free	stat_cache.c	/^static void fam_dir_entry_free(void *data)$/;"	f	file:
fam_dir_entry_init	stat_cache.c	/^static fam_dir_entry *fam_dir_entry_init(void)$/;"	f	file:
fam_fcce_ndx	base.h	/^	int fam_fcce_ndx;$/;"	m	struct:__anon30
family	base.h	/^	int family;$/;"	m	struct:__anon37
fastcgi_extension_insert	mod_fastcgi.c	/^fastcgi_extension_insert(fcgi_exts * ext, buffer * key,$/;"	f
fastcgi_extensions_free	mod_fastcgi.c	/^void fastcgi_extensions_free(fcgi_exts * f)$/;"	f
fastcgi_extensions_init	mod_fastcgi.c	/^fcgi_exts *fastcgi_extensions_init()$/;"	f
fastcgi_get_packet	mod_fastcgi.c	/^fastcgi_get_packet(server * srv, handler_ctx * hctx,$/;"	f	file:
fastcgi_host_free	mod_fastcgi.c	/^void fastcgi_host_free(fcgi_extension_host * h)$/;"	f
fastcgi_host_init	mod_fastcgi.c	/^fcgi_extension_host *fastcgi_host_init()$/;"	f
fastcgi_process_free	mod_fastcgi.c	/^void fastcgi_process_free(fcgi_proc * f)$/;"	f
fastcgi_process_init	mod_fastcgi.c	/^fcgi_proc *fastcgi_process_init()$/;"	f
fastcgi_response_packet	mod_fastcgi.c	/^} fastcgi_response_packet;$/;"	t	typeref:struct:__anon193	file:
fastcgi_status_copy_procname	mod_fastcgi.c	/^fastcgi_status_copy_procname(buffer * b, fcgi_extension_host * host,$/;"	f
fastcgi_status_init	mod_fastcgi.c	/^fastcgi_status_init(server * srv, buffer * b, fcgi_extension_host * host,$/;"	f
fc	stat_cache.c	/^	FAMConnection *fc;$/;"	m	struct:__anon133	file:
fcgi_arg	mod_mysql_vhost.c	/^	buffer *fcgi_arg;$/;"	m	struct:__anon166	file:
fcgi_check_extension	mod_fastcgi.c	/^fcgi_check_extension(server * srv, connection * con, void *p_d,$/;"	f	file:
fcgi_check_extension_1	mod_fastcgi.c	/^fcgi_check_extension_1(server * srv, connection * con, void *p_d)$/;"	f	file:
fcgi_check_extension_2	mod_fastcgi.c	/^fcgi_check_extension_2(server * srv, connection * con, void *p_d)$/;"	f	file:
fcgi_connection_close	mod_fastcgi.c	/^void fcgi_connection_close(server * srv, handler_ctx * hctx)$/;"	f
fcgi_connection_close_callback	mod_fastcgi.c	/^fcgi_connection_close_callback(server * srv, connection * con, void *p_d)$/;"	f	file:
fcgi_connection_reset	mod_fastcgi.c	/^fcgi_connection_reset(server * srv, connection * con, void *p_d)$/;"	f	file:
fcgi_connection_state_t	mod_fastcgi.c	/^} fcgi_connection_state_t;$/;"	t	typeref:enum:__anon190	file:
fcgi_connections	base.h	/^} fcgi_connections;$/;"	t	typeref:struct:__anon22
fcgi_create_env	mod_fastcgi.c	/^static int fcgi_create_env(server * srv, handler_ctx * hctx, size_t request_id)$/;"	f	file:
fcgi_demux_response	mod_fastcgi.c	/^static int fcgi_demux_response(server * srv, handler_ctx * hctx)$/;"	f	file:
fcgi_env	mod_fastcgi.c	/^	buffer *fcgi_env;$/;"	m	struct:__anon189	file:
fcgi_env_add	mod_fastcgi.c	/^fcgi_env_add(buffer * env, const char *key, size_t key_len,$/;"	f	file:
fcgi_env_add_request_headers	mod_fastcgi.c	/^fcgi_env_add_request_headers(server * srv, connection * con, plugin_data * p)$/;"	f	file:
fcgi_establish_connection	mod_fastcgi.c	/^fcgi_establish_connection(server * srv, handler_ctx * hctx)$/;"	f	file:
fcgi_extension	mod_fastcgi.c	/^} fcgi_extension;$/;"	t	typeref:struct:__anon184	file:
fcgi_extension_host	mod_fastcgi.c	/^} fcgi_extension_host;$/;"	t	typeref:struct:__anon183	file:
fcgi_exts	mod_fastcgi.c	/^} fcgi_exts;$/;"	t	typeref:struct:__anon185	file:
fcgi_handle_fdevent	mod_fastcgi.c	/^static handler_t fcgi_handle_fdevent(void *s, void *ctx, int revents)$/;"	f	file:
fcgi_header	mod_fastcgi.c	/^fcgi_header(FCGI_Header * header, unsigned char type, size_t request_id,$/;"	f	file:
fcgi_offset	mod_mysql_vhost.c	/^	unsigned fcgi_offset;$/;"	m	struct:__anon166	file:
fcgi_patch_connection	mod_fastcgi.c	/^fcgi_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
fcgi_proc	mod_fastcgi.c	/^typedef struct fcgi_proc {$/;"	s	file:
fcgi_proc	mod_fastcgi.c	/^} fcgi_proc;$/;"	t	typeref:struct:fcgi_proc	file:
fcgi_reconnect	mod_fastcgi.c	/^static int fcgi_reconnect(server * srv, handler_ctx * hctx)$/;"	f	file:
fcgi_request_id	mod_fastcgi.c	/^	buffer_uint fcgi_request_id;$/;"	m	struct:__anon189	file:
fcgi_requestid_del	mod_fastcgi.c	/^static int fcgi_requestid_del(server * srv, plugin_data * p, size_t request_id)$/;"	f	file:
fcgi_requestid_new	mod_fastcgi.c	/^static size_t fcgi_requestid_new(server * srv, plugin_data * p)$/;"	f	file:
fcgi_response_parse	mod_fastcgi.c	/^fcgi_response_parse(server * srv, connection * con, plugin_data * p,$/;"	f	file:
fcgi_restart_dead_procs	mod_fastcgi.c	/^fcgi_restart_dead_procs(server * srv, plugin_data * p,$/;"	f	file:
fcgi_set_state	mod_fastcgi.c	/^fcgi_set_state(server * srv, handler_ctx * hctx, fcgi_connection_state_t state)$/;"	f	file:
fcgi_spawn_connection	mod_fastcgi.c	/^fcgi_spawn_connection(server * srv,$/;"	f	file:
fcgi_spawn_connection	spawn-fcgi.c	/^fcgi_spawn_connection(char *appPath, char **appArgv, char *addr,$/;"	f
fcgi_write_request	mod_fastcgi.c	/^static handler_t fcgi_write_request(server * srv, handler_ctx * hctx)$/;"	f	file:
fcntl_set	fdevent.h	/^	int (*fcntl_set) (struct fdevents * ev, int fd);$/;"	m	struct:fdevents
fd	base.h	/^	int fd;						\/* the FD for this connection *\/$/;"	m	struct:__anon35
fd	base.h	/^	int fd;$/;"	m	struct:__anon44
fd	chunk.h	/^		int fd;$/;"	m	struct:chunk::__anon9
fd	fdevent.h	/^	int fd;$/;"	m	struct:__anon5
fd	fdevent.h	/^	int fd;$/;"	m	struct:_fdnode
fd	mod_cgi.c	/^	int fd;$/;"	m	struct:__anon114	file:
fd	mod_fastcgi.c	/^	int fd;						\/* fd to the fastcgi process *\/$/;"	m	struct:__anon191	file:
fd	mod_proxy.c	/^	int fd;						\/* fd to the proxy process *\/$/;"	m	struct:__anon105	file:
fd	mod_scgi.c	/^	int fd;						\/* fd to the scgi process *\/$/;"	m	struct:__anon178	file:
fd	proc_open.h	/^	int fd;$/;"	m	struct:__anon212
fd_conn	fdevent.h	/^} fd_conn;$/;"	t	typeref:struct:__anon5
fd_conn_buffer	fdevent.h	/^} fd_conn_buffer;$/;"	t	typeref:struct:__anon6
fd_event_t	fdevent.h	/^} fd_event_t;$/;"	t	typeref:enum:__anon3
fd_type	fdevent.h	/^	fd_event_t fd_type;			 \/**< type of the fd *\/$/;"	m	struct:__anon5
fdarray	fdevent.h	/^	fdnode **fdarray;$/;"	m	struct:fdevents
fde_ndx	base.h	/^	int fde_ndx;				\/* index for the fdevent-handler *\/$/;"	m	struct:__anon35
fde_ndx	base.h	/^	int fde_ndx;$/;"	m	struct:__anon44
fde_ndx	mod_cgi.c	/^	int fde_ndx;				\/* index into the fd-event buffer *\/$/;"	m	struct:__anon114	file:
fde_ndx	mod_fastcgi.c	/^	int fde_ndx;				\/* index into the fd-event buffer *\/$/;"	m	struct:__anon191	file:
fde_ndx	mod_proxy.c	/^	int fde_ndx;				\/* index into the fd-event buffer *\/$/;"	m	struct:__anon105	file:
fde_ndx	mod_scgi.c	/^	int fde_ndx;				\/* index into the fd-event buffer *\/$/;"	m	struct:__anon178	file:
fdevent_event_add	fdevent.c	/^int fdevent_event_add(fdevents * ev, int *fde_ndx, int fd, int events)$/;"	f
fdevent_event_del	fdevent.c	/^int fdevent_event_del(fdevents * ev, int *fde_ndx, int fd)$/;"	f
fdevent_event_get_fd	fdevent.c	/^int fdevent_event_get_fd(fdevents * ev, size_t ndx)$/;"	f
fdevent_event_get_revent	fdevent.c	/^int fdevent_event_get_revent(fdevents * ev, size_t ndx)$/;"	f
fdevent_event_next_fdndx	fdevent.c	/^int fdevent_event_next_fdndx(fdevents * ev, int ndx)$/;"	f
fdevent_fcntl_set	fdevent.c	/^int fdevent_fcntl_set(fdevents * ev, int fd)$/;"	f
fdevent_free	fdevent.c	/^void fdevent_free(fdevents * ev)$/;"	f
fdevent_freebsd_kqueue_event_add	fdevent_freebsd_kqueue.c	/^fdevent_freebsd_kqueue_event_add(fdevents * ev, int fde_ndx, int fd, int events)$/;"	f	file:
fdevent_freebsd_kqueue_event_del	fdevent_freebsd_kqueue.c	/^static int fdevent_freebsd_kqueue_event_del(fdevents * ev, int fde_ndx, int fd)$/;"	f	file:
fdevent_freebsd_kqueue_event_get_fd	fdevent_freebsd_kqueue.c	/^static int fdevent_freebsd_kqueue_event_get_fd(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_freebsd_kqueue_event_get_revent	fdevent_freebsd_kqueue.c	/^static int fdevent_freebsd_kqueue_event_get_revent(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_freebsd_kqueue_event_next_fdndx	fdevent_freebsd_kqueue.c	/^static int fdevent_freebsd_kqueue_event_next_fdndx(fdevents * ev, int ndx)$/;"	f	file:
fdevent_freebsd_kqueue_free	fdevent_freebsd_kqueue.c	/^static void fdevent_freebsd_kqueue_free(fdevents * ev)$/;"	f	file:
fdevent_freebsd_kqueue_init	fdevent_freebsd_kqueue.c	/^int fdevent_freebsd_kqueue_init(fdevents * ev)$/;"	f
fdevent_freebsd_kqueue_poll	fdevent_freebsd_kqueue.c	/^static int fdevent_freebsd_kqueue_poll(fdevents * ev, int timeout_ms)$/;"	f	file:
fdevent_freebsd_kqueue_reset	fdevent_freebsd_kqueue.c	/^static int fdevent_freebsd_kqueue_reset(fdevents * ev)$/;"	f	file:
fdevent_get_context	fdevent.c	/^void *fdevent_get_context(fdevents * ev, int fd)$/;"	f
fdevent_get_handler	fdevent.c	/^fdevent_handler fdevent_get_handler(fdevents * ev, int fd)$/;"	f
fdevent_handler	fdevent.h	/^typedef handler_t(*fdevent_handler) (void *srv, void *ctx, int revents);$/;"	t
fdevent_handler_t	fdevent.h	/^} fdevent_handler_t;$/;"	t	typeref:enum:__anon4
fdevent_init	fdevent.c	/^fdevents *fdevent_init(size_t maxfds, fdevent_handler_t type)$/;"	f
fdevent_linux_rtsig_event_add	fdevent_linux_rtsig.c	/^fdevent_linux_rtsig_event_add(fdevents * ev, int fde_ndx, int fd, int events)$/;"	f	file:
fdevent_linux_rtsig_event_del	fdevent_linux_rtsig.c	/^static int fdevent_linux_rtsig_event_del(fdevents * ev, int fde_ndx, int fd)$/;"	f	file:
fdevent_linux_rtsig_event_get_fd	fdevent_linux_rtsig.c	/^static int fdevent_linux_rtsig_event_get_fd(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_linux_rtsig_event_get_revent	fdevent_linux_rtsig.c	/^static int fdevent_linux_rtsig_event_get_revent(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_linux_rtsig_event_next_fdndx	fdevent_linux_rtsig.c	/^static int fdevent_linux_rtsig_event_next_fdndx(fdevents * ev, int ndx)$/;"	f	file:
fdevent_linux_rtsig_fcntl_set	fdevent_linux_rtsig.c	/^static int fdevent_linux_rtsig_fcntl_set(fdevents * ev, int fd)$/;"	f	file:
fdevent_linux_rtsig_free	fdevent_linux_rtsig.c	/^static void fdevent_linux_rtsig_free(fdevents * ev)$/;"	f	file:
fdevent_linux_rtsig_init	fdevent_linux_rtsig.c	/^int fdevent_linux_rtsig_init(fdevents * ev)$/;"	f
fdevent_linux_rtsig_poll	fdevent_linux_rtsig.c	/^static int fdevent_linux_rtsig_poll(fdevents * ev, int timeout_ms)$/;"	f	file:
fdevent_linux_sysepoll_event_add	fdevent_linux_sysepoll.c	/^fdevent_linux_sysepoll_event_add(fdevents * ev, int fde_ndx, int fd, int events)$/;"	f	file:
fdevent_linux_sysepoll_event_del	fdevent_linux_sysepoll.c	/^static int fdevent_linux_sysepoll_event_del(fdevents * ev, int fde_ndx, int fd)$/;"	f	file:
fdevent_linux_sysepoll_event_get_fd	fdevent_linux_sysepoll.c	/^static int fdevent_linux_sysepoll_event_get_fd(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_linux_sysepoll_event_get_revent	fdevent_linux_sysepoll.c	/^static int fdevent_linux_sysepoll_event_get_revent(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_linux_sysepoll_event_next_fdndx	fdevent_linux_sysepoll.c	/^static int fdevent_linux_sysepoll_event_next_fdndx(fdevents * ev, int ndx)$/;"	f	file:
fdevent_linux_sysepoll_free	fdevent_linux_sysepoll.c	/^static void fdevent_linux_sysepoll_free(fdevents * ev)$/;"	f	file:
fdevent_linux_sysepoll_init	fdevent_linux_sysepoll.c	/^int fdevent_linux_sysepoll_init(fdevents * ev)$/;"	f
fdevent_linux_sysepoll_poll	fdevent_linux_sysepoll.c	/^static int fdevent_linux_sysepoll_poll(fdevents * ev, int timeout_ms)$/;"	f	file:
fdevent_poll	fdevent.c	/^int fdevent_poll(fdevents * ev, int timeout_ms)$/;"	f
fdevent_poll_event_add	fdevent_poll.c	/^fdevent_poll_event_add(fdevents * ev, int fde_ndx, int fd, int events)$/;"	f	file:
fdevent_poll_event_del	fdevent_poll.c	/^static int fdevent_poll_event_del(fdevents * ev, int fde_ndx, int fd)$/;"	f	file:
fdevent_poll_event_get_fd	fdevent_poll.c	/^static int fdevent_poll_event_get_fd(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_poll_event_get_revent	fdevent_poll.c	/^static int fdevent_poll_event_get_revent(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_poll_event_next_fdndx	fdevent_poll.c	/^static int fdevent_poll_event_next_fdndx(fdevents * ev, int ndx)$/;"	f	file:
fdevent_poll_free	fdevent_poll.c	/^static void fdevent_poll_free(fdevents * ev)$/;"	f	file:
fdevent_poll_init	fdevent_poll.c	/^int fdevent_poll_init(fdevents * ev)$/;"	f
fdevent_poll_poll	fdevent_poll.c	/^static int fdevent_poll_poll(fdevents * ev, int timeout_ms)$/;"	f	file:
fdevent_register	fdevent.c	/^int fdevent_register(fdevents * ev, int fd, fdevent_handler handler, void *ctx)$/;"	f
fdevent_reset	fdevent.c	/^int fdevent_reset(fdevents * ev)$/;"	f
fdevent_select_event_add	fdevent_select.c	/^fdevent_select_event_add(fdevents * ev, int fde_ndx, int fd, int events)$/;"	f	file:
fdevent_select_event_del	fdevent_select.c	/^static int fdevent_select_event_del(fdevents * ev, int fde_ndx, int fd)$/;"	f	file:
fdevent_select_event_get_fd	fdevent_select.c	/^static int fdevent_select_event_get_fd(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_select_event_get_revent	fdevent_select.c	/^static int fdevent_select_event_get_revent(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_select_event_next_fdndx	fdevent_select.c	/^static int fdevent_select_event_next_fdndx(fdevents * ev, int ndx)$/;"	f	file:
fdevent_select_init	fdevent_select.c	/^int fdevent_select_init(fdevents * ev)$/;"	f
fdevent_select_poll	fdevent_select.c	/^static int fdevent_select_poll(fdevents * ev, int timeout_ms)$/;"	f	file:
fdevent_select_reset	fdevent_select.c	/^static int fdevent_select_reset(fdevents * ev)$/;"	f	file:
fdevent_solaris_devpoll_event_add	fdevent_solaris_devpoll.c	/^fdevent_solaris_devpoll_event_add(fdevents * ev, int fde_ndx, int fd,$/;"	f	file:
fdevent_solaris_devpoll_event_del	fdevent_solaris_devpoll.c	/^static int fdevent_solaris_devpoll_event_del(fdevents * ev, int fde_ndx, int fd)$/;"	f	file:
fdevent_solaris_devpoll_event_get_fd	fdevent_solaris_devpoll.c	/^static int fdevent_solaris_devpoll_event_get_fd(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_solaris_devpoll_event_get_revent	fdevent_solaris_devpoll.c	/^static int fdevent_solaris_devpoll_event_get_revent(fdevents * ev, size_t ndx)$/;"	f	file:
fdevent_solaris_devpoll_event_next_fdndx	fdevent_solaris_devpoll.c	/^static int fdevent_solaris_devpoll_event_next_fdndx(fdevents * ev, int last_ndx)$/;"	f	file:
fdevent_solaris_devpoll_free	fdevent_solaris_devpoll.c	/^static void fdevent_solaris_devpoll_free(fdevents * ev)$/;"	f	file:
fdevent_solaris_devpoll_init	fdevent_solaris_devpoll.c	/^int fdevent_solaris_devpoll_init(fdevents * ev)$/;"	f
fdevent_solaris_devpoll_poll	fdevent_solaris_devpoll.c	/^static int fdevent_solaris_devpoll_poll(fdevents * ev, int timeout_ms)$/;"	f	file:
fdevent_solaris_devpoll_reset	fdevent_solaris_devpoll.c	/^int fdevent_solaris_devpoll_reset(fdevents * ev)$/;"	f
fdevent_unregister	fdevent.c	/^int fdevent_unregister(fdevents * ev, int fd)$/;"	f
fdevents	fdevent.h	/^typedef struct fdevents {$/;"	s
fdevents	fdevent.h	/^} fdevents;$/;"	t	typeref:struct:fdevents
fdnode	fdevent.h	/^} fdnode;$/;"	t	typeref:struct:_fdnode
fdnode_free	fdevent.c	/^void fdnode_free(fdnode * fdn)$/;"	f
fdnode_init	fdevent.c	/^fdnode *fdnode_init()$/;"	f
fdwaitqueue	base.h	/^	connections *fdwaitqueue;$/;"	m	struct:server
fdwaitqueue_append	joblist.c	/^int fdwaitqueue_append(server * srv, connection * con)$/;"	f
fdwaitqueue_free	joblist.c	/^void fdwaitqueue_free(server * srv, connections * fdwaitqueue)$/;"	f
fdwaitqueue_unshift	joblist.c	/^connection *fdwaitqueue_unshift(server * srv, connections * fdwaitqueue)$/;"	f
field	mod_accesslog.c	/^	int field;$/;"	m	struct:__anon66	file:
file	chunk.h	/^	} file;$/;"	m	struct:chunk	typeref:struct:chunk::__anon9
file_finished	base.h	/^	int file_finished;$/;"	m	struct:__anon35
file_makename	lemon.c	/^PRIVATE char *file_makename(lemp, suffix)$/;"	f
file_open	lemon.c	/^PRIVATE FILE *file_open(lemp, suffix, mode)$/;"	f
file_started	base.h	/^	int file_started;$/;"	m	struct:__anon35
filename	lemon.c	/^	char *filename;				\/* Name of the input file *\/$/;"	m	struct:lemon	file:
filename	lemon.c	/^	char *filename;				\/* Name of the input file *\/$/;"	m	struct:pstate	file:
files	base.h	/^	splay_tree *files;			\/* the nodes of the tree are stat_cache_entry's *\/$/;"	m	struct:__anon30
find_rank	splaytree.c	/^splay_tree *find_rank(int r, splay_tree * t)$/;"	f
findbreak	lemon.c	/^static int findbreak(msg, min, max)$/;"	f	file:
first	chunk.h	/^	chunk *first;$/;"	m	struct:__anon11
first	mod_fastcgi.c	/^	fcgi_proc *first;$/;"	m	struct:__anon183	file:
first	mod_scgi.c	/^	scgi_proc *first;$/;"	m	struct:__anon171	file:
firstrule	lemon.c	/^	struct rule *firstrule;		\/* Pointer to first rule in the grammar *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
firstset	lemon.c	/^	char *firstset;				\/* First-set for all rules of this symbol *\/$/;"	m	struct:symbol	file:
fix_root_path_name	mod_fastcgi.c	/^	unsigned short fix_root_path_name;$/;"	m	struct:__anon183	file:
fix_root_path_name	mod_scgi.c	/^	unsigned short fix_root_path_name;$/;"	m	struct:__anon171	file:
flags	fastcgi.h	/^	unsigned char flags;$/;"	m	struct:__anon117
fmap	mod_accesslog.c	/^const format_mapping fmap[] = {$/;"	v
follow_symlink	base.h	/^	unsigned short follow_symlink;$/;"	m	struct:__anon31
foo	configfile.c	/^	int foo;$/;"	m	struct:__anon204	file:
foo	mod_skeleton.c	/^	size_t foo;$/;"	m	struct:__anon14	file:
force_lowercase_filenames	base.h	/^	unsigned short force_lowercase_filenames;	\/* if the FS is$/;"	m	struct:__anon31
format	mod_accesslog.c	/^	buffer *format;$/;"	m	struct:__anon69	file:
format_field	mod_accesslog.c	/^} format_field;$/;"	t	typeref:struct:__anon66	file:
format_fields	mod_accesslog.c	/^} format_fields;$/;"	t	typeref:struct:__anon68	file:
format_mapping	mod_accesslog.c	/^} format_mapping;$/;"	t	typeref:struct:__anon64	file:
forwarded_sig_hup	server.c	/^static volatile sig_atomic_t forwarded_sig_hup = 0;$/;"	v	file:
forwarder	mod_extforward.c	/^	array *forwarder;$/;"	m	struct:__anon214	file:
fplp	lemon.c	/^	struct plink *fplp;			\/* Follow-set forward propagation links *\/$/;"	m	struct:config	typeref:struct:config::plink	file:
free	fdevent.h	/^	void (*free) (struct fdevents * ev);$/;"	m	struct:fdevents
freelist	lemon.c	/^static struct config *freelist = 0;	\/* List of free configurations *\/$/;"	v	typeref:struct:config	file:
from	lemon.c	/^	struct s_x1node **from;		\/* Previous link *\/$/;"	m	struct:s_x1node	typeref:struct:s_x1node::s_x1node	file:
from	lemon.c	/^	struct s_x2node **from;		\/* Previous link *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::s_x2node	file:
from	lemon.c	/^	struct s_x3node **from;		\/* Previous link *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::s_x3node	file:
from	lemon.c	/^	struct s_x4node **from;		\/* Previous link *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::s_x4node	file:
fws	lemon.c	/^	char *fws;					\/* Follow-set for this configuration only *\/$/;"	m	struct:config	file:
generate_crc32c	crc32.c	/^uint32_t generate_crc32c(char *buffer, size_t length)$/;"	f
getCWD	configfile.c	/^static char *getCWD()$/;"	f	file:
get_http_method_key	keyvalue.c	/^http_method_t get_http_method_key(const char *s)$/;"	f
get_http_method_name	keyvalue.c	/^const char *get_http_method_name(http_method_t i)$/;"	f
get_http_status_body_name	keyvalue.c	/^const char *get_http_status_body_name(int i)$/;"	f
get_http_status_name	keyvalue.c	/^const char *get_http_status_name(int i)$/;"	f
get_http_version_key	keyvalue.c	/^int get_http_version_key(const char *s)$/;"	f
get_http_version_name	keyvalue.c	/^const char *get_http_version_name(int i)$/;"	f
get_params	mod_flv_streaming.c	/^	array *get_params;$/;"	m	struct:__anon130	file:
get_sa_len	http-header-glue.c	/^static size_t get_sa_len(const struct sockaddr *addr)$/;"	f	file:
getstate	lemon.c	/^PRIVATE struct state *getstate(lemp)$/;"	f
gid	base.h	/^	gid_t gid;$/;"	m	struct:server
global_bytes_per_second_cnt	base.h	/^	off_t global_bytes_per_second_cnt;$/;"	m	struct:__anon31
global_bytes_per_second_cnt_ptr	base.h	/^	off_t *global_bytes_per_second_cnt_ptr;	\/* *\/$/;"	m	struct:__anon31
global_kbytes_per_second	base.h	/^	unsigned short global_kbytes_per_second;	\/* *\/$/;"	m	struct:__anon31
global_size	lemon.c	/^static int global_size = 0;$/;"	v	file:
got_proc	mod_fastcgi.c	/^	int got_proc;$/;"	m	struct:__anon191	file:
got_proc	mod_scgi.c	/^	int got_proc;$/;"	m	struct:__anon178	file:
got_response	base.h	/^	int got_response;$/;"	m	struct:__anon35
gp	lemon.c	/^	struct lemon *gp;			\/* Global state vector *\/$/;"	m	struct:pstate	typeref:struct:pstate::lemon	file:
graceful_restart	lighttpd-angel.c	/^static volatile sig_atomic_t graceful_restart = 0;$/;"	v	file:
graceful_shutdown	server.c	/^static volatile sig_atomic_t graceful_shutdown = 0;$/;"	v	file:
groupname	base.h	/^	buffer *groupname;$/;"	m	struct:__anon42
handle_connection_close	plugin.h	/^	 handler_t(*handle_connection_close) (server * srv, connection * con, void *p_d);	\/* at $/;"	m	struct:__anon79
handle_docroot	plugin.h	/^	 handler_t(*handle_docroot) (server * srv, connection * con, void *p_d);	\/* getting $/;"	m	struct:__anon79
handle_joblist	plugin.h	/^	 handler_t(*handle_joblist) (server * srv, connection * con, void *p_d);	\/* after $/;"	m	struct:__anon79
handle_physical	plugin.h	/^	 handler_t(*handle_physical) (server * srv, connection * con, void *p_d);	\/* mapping $/;"	m	struct:__anon79
handle_request_done	plugin.h	/^	 handler_t(*handle_request_done) (server * srv, connection * con, void *p_d);	\/* at $/;"	m	struct:__anon79
handle_sig_alarm	server.c	/^static volatile sig_atomic_t handle_sig_alarm = 1;$/;"	v	file:
handle_sig_hup	server.c	/^static volatile sig_atomic_t handle_sig_hup = 0;$/;"	v	file:
handle_sighup	plugin.h	/^	 handler_t(*handle_sighup) (server * srv, void *p_d);	\/* at $/;"	m	struct:__anon79
handle_subrequest	plugin.h	/^	 handler_t(*handle_subrequest) (server * srv, connection * con, void *p_d);	\/* *\/$/;"	m	struct:__anon79
handle_subrequest_start	plugin.h	/^	 handler_t(*handle_subrequest_start) (server * srv, connection * con,$/;"	m	struct:__anon79
handle_trigger	plugin.h	/^	 handler_t(*handle_trigger) (server * srv, void *p_d);	\/* once $/;"	m	struct:__anon79
handle_uri_clean	plugin.h	/^	 handler_t(*handle_uri_clean) (server * srv, connection * con, void *p_d);	\/* after $/;"	m	struct:__anon79
handle_uri_raw	plugin.h	/^	 handler_t(*handle_uri_raw) (server * srv, connection * con, void *p_d);	\/* after $/;"	m	struct:__anon79
handled	mod_setenv.c	/^	int handled;				\/* make sure that we only apply the headers$/;"	m	struct:__anon71	file:
handleflags	lemon.c	/^static int handleflags(i, err)$/;"	f	file:
handler	fdevent.h	/^	fdevent_handler handler;$/;"	m	struct:_fdnode
handler_ctx	mod_cgi.c	/^} handler_ctx;$/;"	t	typeref:struct:__anon114	file:
handler_ctx	mod_extforward.c	/^} handler_ctx;$/;"	t	typeref:struct:__anon216	file:
handler_ctx	mod_fastcgi.c	/^} handler_ctx;$/;"	t	typeref:struct:__anon191	file:
handler_ctx	mod_proxy.c	/^} handler_ctx;$/;"	t	typeref:struct:__anon105	file:
handler_ctx	mod_rewrite.c	/^} handler_ctx;$/;"	t	typeref:struct:__anon126	file:
handler_ctx	mod_scgi.c	/^} handler_ctx;$/;"	t	typeref:struct:__anon178	file:
handler_ctx	mod_setenv.c	/^} handler_ctx;$/;"	t	typeref:struct:__anon71	file:
handler_ctx	mod_skeleton.c	/^} handler_ctx;$/;"	t	typeref:struct:__anon14	file:
handler_ctx_free	mod_extforward.c	/^static void handler_ctx_free(handler_ctx * hctx)$/;"	f	file:
handler_ctx_free	mod_fastcgi.c	/^static void handler_ctx_free(handler_ctx * hctx)$/;"	f	file:
handler_ctx_free	mod_proxy.c	/^static void handler_ctx_free(handler_ctx * hctx)$/;"	f	file:
handler_ctx_free	mod_rewrite.c	/^static void handler_ctx_free(handler_ctx * hctx)$/;"	f	file:
handler_ctx_free	mod_scgi.c	/^static void handler_ctx_free(handler_ctx * hctx)$/;"	f	file:
handler_ctx_free	mod_setenv.c	/^static void handler_ctx_free(handler_ctx * hctx)$/;"	f	file:
handler_ctx_free	mod_skeleton.c	/^static void handler_ctx_free(handler_ctx * hctx)$/;"	f	file:
handler_ctx_init	mod_extforward.c	/^static handler_ctx *handler_ctx_init(sock_addr oldaddr, buffer * oldaddr_buf)$/;"	f	file:
handler_ctx_init	mod_fastcgi.c	/^static handler_ctx *handler_ctx_init()$/;"	f	file:
handler_ctx_init	mod_proxy.c	/^static handler_ctx *handler_ctx_init()$/;"	f	file:
handler_ctx_init	mod_rewrite.c	/^static handler_ctx *handler_ctx_init()$/;"	f	file:
handler_ctx_init	mod_scgi.c	/^static handler_ctx *handler_ctx_init()$/;"	f	file:
handler_ctx_init	mod_setenv.c	/^static handler_ctx *handler_ctx_init()$/;"	f	file:
handler_ctx_init	mod_skeleton.c	/^static handler_ctx *handler_ctx_init()$/;"	f	file:
handler_t	settings.h	/^} handler_t;$/;"	t	typeref:enum:__anon1
handleswitch	lemon.c	/^static int handleswitch(i, err)$/;"	f	file:
has_destructor	lemon.c	/^int has_destructor(sp, lemp)$/;"	f
has_fallback	lemon.c	/^	int has_fallback;			\/* True if any %fallback is seen in the$/;"	m	struct:lemon	file:
hash_key	base.h	/^	buffer *hash_key;			\/* temp-store for the hash-key *\/$/;"	m	struct:__anon30
hashme	stat_cache.c	/^static uint32_t hashme(buffer * str)$/;"	f	file:
header	fastcgi.h	/^	FCGI_Header header;$/;"	m	struct:__anon118
header	fastcgi.h	/^	FCGI_Header header;$/;"	m	struct:__anon120
header	fastcgi.h	/^	FCGI_Header header;$/;"	m	struct:__anon122
header_len	base.h	/^	size_t header_len;$/;"	m	struct:__anon35
headers	base.h	/^	array *headers;$/;"	m	struct:__anon24
headers	base.h	/^	array *headers;$/;"	m	struct:__anon25
hex2int	buffer.c	/^char hex2int(unsigned char hex) $/;"	f
hex_chars	buffer.c	/^static const char hex_chars[] = "0123456789abcdef";$/;"	v	file:
hide_dot_files	mod_dirlisting.c	/^	unsigned short hide_dot_files;$/;"	m	struct:__anon84	file:
hide_header_file	mod_dirlisting.c	/^	unsigned short hide_header_file;$/;"	m	struct:__anon84	file:
hide_readme_file	mod_dirlisting.c	/^	unsigned short hide_readme_file;$/;"	m	struct:__anon84	file:
host	array.h	/^	buffer *host;$/;"	m	struct:__anon154
host	base.h	/^	char *host;$/;"	m	struct:__anon22
host	mod_fastcgi.c	/^	buffer *host;$/;"	m	struct:__anon183	file:
host	mod_fastcgi.c	/^	fcgi_extension_host *host;$/;"	m	struct:__anon191	file:
host	mod_proxy.c	/^	data_proxy *host;$/;"	m	struct:__anon105	file:
host	mod_scgi.c	/^	buffer *host;$/;"	m	struct:__anon171	file:
host	mod_scgi.c	/^	scgi_extension_host *host;$/;"	m	struct:__anon178	file:
hostname	mod_mysql_vhost.c	/^	buffer *hostname;$/;"	m	struct:__anon164	file:
hosts	mod_fastcgi.c	/^	fcgi_extension_host **hosts;$/;"	m	struct:__anon184	file:
hosts	mod_scgi.c	/^	scgi_extension_host **hosts;$/;"	m	struct:__anon172	file:
hstrerror	sys-socket.h	13;"	d
ht	lemon.c	/^	struct s_x1node **ht;		\/* Hash table for lookups *\/$/;"	m	struct:s_x1	typeref:struct:s_x1::s_x1node	file:
ht	lemon.c	/^	struct s_x2node **ht;		\/* Hash table for lookups *\/$/;"	m	struct:s_x2	typeref:struct:s_x2::s_x2node	file:
ht	lemon.c	/^	struct s_x3node **ht;		\/* Hash table for lookups *\/$/;"	m	struct:s_x3	typeref:struct:s_x3::s_x3node	file:
ht	lemon.c	/^	struct s_x4node **ht;		\/* Hash table for lookups *\/$/;"	m	struct:s_x4	typeref:struct:s_x4::s_x4node	file:
http_auth_basic_check	http_auth.c	/^http_auth_basic_check(server * srv, connection * con,$/;"	f
http_auth_basic_password_compare	http_auth.c	/^http_auth_basic_password_compare(server * srv, mod_auth_plugin_data * p,$/;"	f	file:
http_auth_digest_check	http_auth.c	/^http_auth_digest_check(server * srv, connection * con,$/;"	f
http_auth_digest_generate_nonce	http_auth.c	/^http_auth_digest_generate_nonce(server * srv, mod_auth_plugin_data * p,$/;"	f
http_auth_get_password	http_auth.c	/^http_auth_get_password(server * srv, mod_auth_plugin_data * p,$/;"	f	file:
http_auth_match_rules	http_auth.c	/^http_auth_match_rules(server * srv, mod_auth_plugin_data * p,$/;"	f	file:
http_chunk_append_buffer	http_chunk.c	/^int http_chunk_append_buffer(server * srv, connection * con, buffer * mem)$/;"	f
http_chunk_append_file	http_chunk.c	/^http_chunk_append_file(server * srv, connection * con, buffer * fn,$/;"	f
http_chunk_append_len	http_chunk.c	/^static int http_chunk_append_len(server * srv, connection * con, size_t len)$/;"	f	file:
http_chunk_append_mem	http_chunk.c	/^http_chunk_append_mem(server * srv, connection * con, const char *mem,$/;"	f
http_chunkqueue_length	http_chunk.c	/^off_t http_chunkqueue_length(server * srv, connection * con)$/;"	f
http_content_type	base.h	/^	const char *http_content_type;$/;"	m	struct:__anon24
http_dirls_sort	mod_dirlisting.c	/^static void http_dirls_sort(dirls_entry_t ** ent, int num)$/;"	f	file:
http_host	base.h	/^	buffer *http_host;			\/* not alloced *\/$/;"	m	struct:__anon24
http_if_modified_since	base.h	/^	const char *http_if_modified_since;$/;"	m	struct:__anon24
http_if_none_match	base.h	/^	const char *http_if_none_match;$/;"	m	struct:__anon24
http_list_directory	mod_dirlisting.c	/^http_list_directory(server * srv, connection * con, plugin_data * p,$/;"	f	file:
http_list_directory_footer	mod_dirlisting.c	/^http_list_directory_footer(server * srv, connection * con, plugin_data * p,$/;"	f	file:
http_list_directory_header	mod_dirlisting.c	/^http_list_directory_header(server * srv, connection * con, plugin_data * p,$/;"	f	file:
http_list_directory_sizefmt	mod_dirlisting.c	/^static int http_list_directory_sizefmt(char *buf, off_t size)$/;"	f	file:
http_method	base.h	/^	http_method_t http_method;$/;"	m	struct:__anon24
http_method_t	keyvalue.h	/^} http_method_t;$/;"	t	typeref:enum:__anon157
http_methods	keyvalue.c	/^static keyvalue http_methods[] = {$/;"	v	file:
http_range	base.h	/^	const char *http_range;$/;"	m	struct:__anon24
http_request_header_finished	request.c	/^int http_request_header_finished(server * srv, connection * con)$/;"	f
http_request_parse	request.c	/^int http_request_parse(server * srv, connection * con)$/;"	f
http_request_split_value	request.c	/^int http_request_split_value(array * vals, buffer * b)$/;"	f
http_response_handle_cachable	http-header-glue.c	/^http_response_handle_cachable(server * srv, connection * con, buffer * mtime)$/;"	f
http_response_parse_range	mod_staticfile.c	/^http_response_parse_range(server * srv, connection * con, plugin_data * p)$/;"	f	file:
http_response_prepare	response.c	/^handler_t http_response_prepare(server * srv, connection * con)$/;"	f
http_response_redirect_to_directory	http-header-glue.c	/^int http_response_redirect_to_directory(server * srv, connection * con)$/;"	f
http_response_write_header	response.c	/^int http_response_write_header(server * srv, connection * con)$/;"	f
http_status	base.h	/^	int http_status;$/;"	m	struct:__anon35
http_status	base.h	/^	int http_status;$/;"	m	struct:__anon39
http_status	keyvalue.c	/^static keyvalue http_status[] = {$/;"	v	file:
http_status_body	keyvalue.c	/^static keyvalue http_status_body[] = {$/;"	v	file:
http_version	base.h	/^	http_version_t http_version;$/;"	m	struct:__anon24
http_version_t	keyvalue.h	/^} http_version_t;$/;"	t	typeref:enum:__anon158
http_versions	keyvalue.c	/^static keyvalue http_versions[] = {$/;"	v	file:
httpauth_keyvalue	keyvalue.h	/^KVB(httpauth_keyvalue);$/;"	v
httpauth_keyvalue	keyvalue.h	/^} httpauth_keyvalue;$/;"	t	typeref:struct:__anon163
httpauth_keyvalue_buffer_append	keyvalue.c	/^httpauth_keyvalue_buffer_append(httpauth_keyvalue_buffer * kvb,$/;"	f
httpauth_keyvalue_buffer_free	keyvalue.c	/^void httpauth_keyvalue_buffer_free(httpauth_keyvalue_buffer * kvb)$/;"	f
httpauth_keyvalue_buffer_init	keyvalue.c	/^httpauth_keyvalue_buffer *httpauth_keyvalue_buffer_init(void)$/;"	f
httpauth_type	keyvalue.h	/^typedef enum { HTTP_AUTH_BASIC, HTTP_AUTH_DIGEST } httpauth_type;$/;"	t	typeref:enum:__anon162
iDflt	lemon.c	/^	int iDflt;					\/* Default action *\/$/;"	m	struct:state	file:
iNtOfst	lemon.c	/^	int iTknOfst, iNtOfst;		\/* yy_action[] offset for terminals and$/;"	m	struct:state	file:
iTknOfst	lemon.c	/^	int iTknOfst, iNtOfst;		\/* yy_action[] offset for terminals and$/;"	m	struct:state	file:
id	mod_fastcgi.c	/^	buffer *id;$/;"	m	struct:__anon183	file:
id	mod_fastcgi.c	/^	size_t id;					\/* id will be between 1 and max_procs *\/$/;"	m	struct:fcgi_proc	file:
id	mod_scgi.c	/^	size_t id;					\/* id will be between 1 and max_procs *\/$/;"	m	struct:scgi_proc	file:
idle_timeout	mod_fastcgi.c	/^	unsigned short idle_timeout;$/;"	m	struct:__anon183	file:
idle_timeout	mod_scgi.c	/^	unsigned short idle_timeout;$/;"	m	struct:__anon171	file:
if_is_false	mod_ssi.h	/^	int if_level, if_is_false_level, if_is_false, if_is_false_endif;$/;"	m	struct:__anon168
if_is_false_endif	mod_ssi.h	/^	int if_level, if_is_false_level, if_is_false, if_is_false_endif;$/;"	m	struct:__anon168
if_is_false_level	mod_ssi.h	/^	int if_level, if_is_false_level, if_is_false, if_is_false_endif;$/;"	m	struct:__anon168
if_level	mod_ssi.h	/^	int if_level, if_is_false_level, if_is_false, if_is_false_endif;$/;"	m	struct:__anon168
in	proc_open.h	/^	pipe_t in, out, err;$/;"	m	struct:__anon213
in_brace	configfile.c	/^	int in_brace;$/;"	m	struct:__anon204	file:
in_brace	mod_ssi_expr.c	/^	int in_brace;$/;"	m	struct:__anon2	file:
in_cond	configfile.c	/^	int in_cond;$/;"	m	struct:__anon204	file:
in_cond	mod_ssi_expr.c	/^	int in_cond;$/;"	m	struct:__anon2	file:
in_error_handler	base.h	/^	int in_error_handler;$/;"	m	struct:__anon35
in_joblist	base.h	/^	int in_joblist;$/;"	m	struct:__anon35
in_key	configfile.c	/^	int in_key;$/;"	m	struct:__anon204	file:
in_key	mod_ssi_expr.c	/^	int in_key;$/;"	m	struct:__anon2	file:
in_sigio	fdevent.h	/^	int in_sigio;$/;"	m	struct:fdevents
include	configparser.y	/^include:: = INCLUDE stringop(A).$/;"	l
include	lemon.c	/^	char *include;				\/* Code to put at the start of the C file *\/$/;"	m	struct:lemon	file:
include_file_last_mtime	mod_ssi.c	/^static volatile time_t include_file_last_mtime = 0;$/;"	v	file:
include_shell	configparser.y	/^include_shell:: = INCLUDE_SHELL stringop(A).$/;"	l
include_user	mod_userdir.c	/^	array *include_user;$/;"	m	struct:__anon207	file:
includeln	lemon.c	/^	int includeln;				\/* Line number for start of include code *\/$/;"	m	struct:lemon	file:
index	lemon.c	/^	int index;					\/* An index number for this rule *\/$/;"	m	struct:rule	file:
index	lemon.c	/^	int index;					\/* Index number for this symbol *\/$/;"	m	struct:symbol	file:
index	lemon.c	/^	int index;					\/* Sequencial number for this state *\/$/;"	m	struct:state	file:
indexfiles	mod_indexfile.c	/^	array *indexfiles;$/;"	m	struct:__anon205	file:
inet_ntop_cache	base.h	/^	inet_ntop_cache_type inet_ntop_cache[INET_NTOP_CACHE_MAX];$/;"	m	struct:server
inet_ntop_cache_get_ip	inet_ntop_cache.c	/^const char *inet_ntop_cache_get_ip(server * srv, sock_addr * addr)$/;"	f
inet_ntop_cache_type	base.h	/^} inet_ntop_cache_type;$/;"	t	typeref:struct:__anon37
init	plugin.h	/^	void *(*init) ();$/;"	m	struct:__anon79
input	configfile.c	/^	const char *input;$/;"	m	struct:__anon204	file:
input	configparser.y	/^input:: = metalines.$/;"	l
input	mod_ssi_expr.c	/^	const char *input;$/;"	m	struct:__anon2	file:
int2hex	buffer.c	/^char int2hex(char c) $/;"	f
ioctl	sys-socket.h	12;"	d
ipstr_to_sockaddr	mod_extforward.c	/^struct addrinfo *ipstr_to_sockaddr(const char *host)$/;"	f
ipv4	base.h	/^		struct in_addr ipv4;$/;"	m	union:__anon37::__anon38	typeref:struct:__anon37::__anon38::in_addr
ipv4	base.h	/^	struct sockaddr_in ipv4;$/;"	m	union:__anon23	typeref:struct:__anon23::sockaddr_in
ipv6	base.h	/^		struct in6_addr ipv6;$/;"	m	union:__anon37::__anon38	typeref:struct:__anon37::__anon38::in6_addr
ipv6	base.h	/^	struct sockaddr_in6 ipv6;$/;"	m	union:__anon23	typeref:struct:__anon23::sockaddr_in6
isTkn	lemon.c	/^	int isTkn;					\/* True to use tokens.  False for non-terminals $/;"	m	struct:axset	file:
is_disabled	array.h	/^	int is_disabled;$/;"	m	struct:__anon154
is_hex_len	mod_secure_download.c	/^int is_hex_len(const char *str, size_t len)$/;"	f
is_local	mod_fastcgi.c	/^	int is_local;$/;"	m	struct:fcgi_proc	file:
is_local	mod_scgi.c	/^	int is_local;$/;"	m	struct:scgi_proc	file:
is_proxy_ssl	base.h	/^	unsigned short is_proxy_ssl;$/;"	m	struct:__anon44
is_proxy_trusted	mod_extforward.c	/^static int is_proxy_trusted(const char *ipstr, plugin_data * p)$/;"	f	file:
is_readable	base.h	/^	int is_readable;$/;"	m	struct:__anon35
is_readonly	mod_webdav.c	/^	unsigned short is_readonly;$/;"	m	struct:__anon51	file:
is_ssl	base.h	/^	unsigned short is_ssl;$/;"	m	struct:__anon31
is_ssl	base.h	/^	unsigned short is_ssl;$/;"	m	struct:__anon44
is_symlink	base.h	/^	char is_symlink; 	\/\/是否是连接文件$/;"	m	struct:__anon29
is_temp	chunk.h	/^		int is_temp;			\/* file is temporary and will be deleted if $/;"	m	struct:chunk::__anon9
is_weakref	array.h	/^	int is_weakref;				\/* data is weakref, don't bother the data *\/$/;"	m	struct:__anon147
is_writable	base.h	/^	int is_writable;$/;"	m	struct:__anon35
joblist	base.h	/^	connections *joblist;$/;"	m	struct:server
joblist_append	joblist.c	/^int joblist_append(server * srv, connection * con)$/;"	f
joblist_free	joblist.c	/^void joblist_free(server * srv, connections * joblist)$/;"	f
kbytes_per_second	base.h	/^	unsigned short kbytes_per_second;	\/* connection kb\/s limit *\/$/;"	m	struct:__anon31
keep_alive	base.h	/^	int keep_alive;				\/* only request.c can enable it, all other just $/;"	m	struct:__anon35
keep_alive	base.h	/^	int keep_alive;				\/* used by the subrequests in proxy, cgi and$/;"	m	struct:__anon25
key	base.h	/^	char *key;$/;"	m	struct:__anon21
key	base.h	/^	char *key;$/;"	m	struct:__anon22
key	base.h	/^	const char *key;$/;"	m	struct:__anon19
key	http_auth.c	/^	const char *key;$/;"	m	struct:__anon219	file:
key	keyvalue.h	/^	char *key;$/;"	m	struct:__anon160
key	keyvalue.h	/^	char *key;$/;"	m	struct:__anon163
key	keyvalue.h	/^	int key;$/;"	m	struct:__anon159
key	keyvalue.h	/^	pcre *key;$/;"	m	struct:__anon161
key	lemon.c	/^	char *key;					\/* The key *\/$/;"	m	struct:s_x2node	file:
key	lemon.c	/^	struct config *key;			\/* The key *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::config	file:
key	mod_accesslog.c	/^	char key;$/;"	m	struct:__anon64	file:
key	mod_fastcgi.c	/^	buffer *key;				\/* like .php *\/$/;"	m	struct:__anon184	file:
key	mod_rewrite.c	/^	pcre *key;$/;"	m	struct:__anon123	file:
key	mod_scgi.c	/^	buffer *key;				\/* like .php *\/$/;"	m	struct:__anon172	file:
key	server.h	/^	char *key;$/;"	m	struct:__anon47
key	splaytree.h	/^	int key; 							\/\/用于节点比较的key值。$/;"	m	struct:tree_node
key_extra	keyvalue.h	/^	pcre_extra *key_extra;$/;"	m	struct:__anon161
key_len	http_auth.c	/^	int key_len;$/;"	m	struct:__anon219	file:
keyvalue	keyvalue.h	/^KVB(keyvalue);$/;"	v
keyvalue	keyvalue.h	/^} keyvalue;$/;"	t	typeref:struct:__anon159
keyvalue_buffer_append	keyvalue.c	/^int keyvalue_buffer_append(keyvalue_buffer * kvb, int key, const char *value)$/;"	f
keyvalue_buffer_free	keyvalue.c	/^void keyvalue_buffer_free(keyvalue_buffer * kvb)$/;"	f
keyvalue_buffer_init	keyvalue.c	/^keyvalue_buffer *keyvalue_buffer_init(void)$/;"	f
keyvalue_get_key	keyvalue.c	/^int keyvalue_get_key(keyvalue * kv, const char *s)$/;"	f
keyvalue_get_value	keyvalue.c	/^const char *keyvalue_get_value(keyvalue * kv, int k)$/;"	f
kill_signal	mod_fastcgi.c	/^	unsigned short kill_signal;	\/* we need a setting for this as libfcgi$/;"	m	struct:__anon183	file:
kq_bevents	fdevent.h	/^	bitset *kq_bevents;$/;"	m	struct:fdevents
kq_fd	fdevent.h	/^	int kq_fd;$/;"	m	struct:fdevents
kq_results	fdevent.h	/^	struct kevent *kq_results;$/;"	m	struct:fdevents	typeref:struct:fdevents::kevent
label	lemon.c	/^	char *label;$/;"	m	struct:s_options	file:
lambda	lemon.c	/^	Boolean lambda;				\/* True if NT and can generate an empty string *\/$/;"	m	struct:symbol	file:
last	chunk.h	/^	chunk *last;$/;"	m	struct:__anon11
last_generated_accesslog_ts	mod_accesslog.c	/^	time_t last_generated_accesslog_ts;$/;"	m	struct:__anon69	file:
last_generated_accesslog_ts_ptr	mod_accesslog.c	/^	time_t *last_generated_accesslog_ts_ptr;$/;"	m	struct:__anon69	file:
last_generated_date_ts	base.h	/^	time_t last_generated_date_ts;$/;"	m	struct:server
last_generated_debug_ts	base.h	/^	time_t last_generated_debug_ts;$/;"	m	struct:server
last_not_in_array	mod_extforward.c	/^static const char *last_not_in_array(array * a, plugin_data * p)$/;"	f	file:
last_sighup_info	lighttpd-angel.c	/^static siginfo_t last_sighup_info;$/;"	v	file:
last_sighup_info	server.c	/^static volatile siginfo_t last_sighup_info;$/;"	v	file:
last_sigterm_info	lighttpd-angel.c	/^static siginfo_t last_sigterm_info;$/;"	v	file:
last_sigterm_info	server.c	/^static volatile siginfo_t last_sigterm_info;$/;"	v	file:
last_used	mod_fastcgi.c	/^	time_t last_used;			\/* see idle_timeout *\/$/;"	m	struct:fcgi_proc	file:
last_used	mod_magnet_cache.h	/^	time_t last_used;			\/* LRU *\/$/;"	m	struct:__anon155
last_used	mod_scgi.c	/^	time_t last_used;			\/* see idle_timeout *\/$/;"	m	struct:scgi_proc	file:
last_used_ndx	array.h	/^	int last_used_ndx;			\/* round robin *\/$/;"	m	struct:__anon154
last_used_ndx	mod_fastcgi.c	/^	int last_used_ndx;$/;"	m	struct:__anon184	file:
lastrule	lemon.c	/^	struct rule *lastrule;		\/* Pointer to the most recently parsed rule *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
ldap	http_auth.h	/^	LDAP *ldap;$/;"	m	struct:__anon77
ldap_filter	http_auth.h	/^	buffer *ldap_filter;$/;"	m	struct:__anon78
ldap_filter_post	http_auth.h	/^	buffer *ldap_filter_post;$/;"	m	struct:__anon77
ldap_filter_pre	http_auth.h	/^	buffer *ldap_filter_pre;$/;"	m	struct:__anon77
left	splaytree.h	/^	struct tree_node *left, *right; 	\/\/指向左右子结点$/;"	m	struct:tree_node	typeref:struct:tree_node::tree_node
lemon	lemon.c	/^struct lemon {$/;"	s	file:
len	mod_evhost.c	/^	size_t len;$/;"	m	struct:__anon137	file:
len	mod_fastcgi.c	/^	size_t len;$/;"	m	struct:__anon193	file:
length	chunk.h	/^			size_t length;		\/* size of the mmap'ed area *\/$/;"	m	struct:chunk::__anon9::__anon10
length	chunk.h	/^		off_t length;			\/* octets to send from the starting offset *\/$/;"	m	struct:chunk::__anon9
letterhomes	mod_userdir.c	/^	unsigned short letterhomes;$/;"	m	struct:__anon207	file:
lhs	configparser.c	/^	YYCODETYPE lhs;				\/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon145	file:
lhs	lemon.c	/^	struct symbol *lhs;			\/* Left-hand side of current rule *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
lhs	lemon.c	/^	struct symbol *lhs;			\/* Left-hand side of the rule *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
lhs	lempar.c	/^	YYCODETYPE lhs;				\/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon143	file:
lhs	mod_ssi_exprparser.c	/^	YYCODETYPE lhs;				\/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon203	file:
lhsalias	lemon.c	/^	char *lhsalias;				\/* Alias for the LHS (NULL if none) *\/$/;"	m	struct:rule	file:
lhsalias	lemon.c	/^	char *lhsalias;				\/* Alias for the LHS *\/$/;"	m	struct:pstate	file:
lib	plugin.h	/^	void *lib;$/;"	m	struct:__anon79
light_isalnum	buffer.c	/^int light_isalnum(int c) {$/;"	f
light_isalpha	buffer.c	/^int light_isalpha(int c) {$/;"	f
light_isdigit	buffer.c	/^int light_isdigit(int c) {$/;"	f
light_isxdigit	buffer.c	/^int light_isxdigit(int c) {$/;"	f
line	configfile.c	/^	int line;$/;"	m	struct:__anon204	file:
line	lemon.c	/^	int line;					\/* Line number at which code begins *\/$/;"	m	struct:rule	file:
line_pos	configfile.c	/^	int line_pos;$/;"	m	struct:__anon204	file:
line_pos	mod_ssi_expr.c	/^	int line_pos;$/;"	m	struct:__anon2	file:
live_properties	mod_webdav.c	/^webdav_property live_properties[] = {$/;"	v
load	mod_fastcgi.c	/^	size_t load;				\/* number of requests waiting on this process *\/$/;"	m	struct:fcgi_proc	file:
load	mod_fastcgi.c	/^	ssize_t load;				\/* replace by host->load *\/$/;"	m	struct:__anon183	file:
load	mod_scgi.c	/^	size_t load;				\/* number of requests waiting on this process *\/$/;"	m	struct:scgi_proc	file:
load	mod_scgi.c	/^	ssize_t load;				\/* replace by host->load *\/$/;"	m	struct:__anon171	file:
load_file	mod_cml_lua.c	/^static const char *load_file(lua_State * L, void *data, size_t * size)$/;"	f	file:
location	mod_redirect.c	/^	buffer *location;$/;"	m	struct:__anon99	file:
log_access_fd	mod_accesslog.c	/^	int log_access_fd;$/;"	m	struct:__anon69	file:
log_condition_handling	base.h	/^	unsigned short log_condition_handling;$/;"	m	struct:__anon31
log_error_close	log.c	/^int log_error_close(server * srv)$/;"	f
log_error_cycle	log.c	/^int log_error_cycle(server * srv)$/;"	f
log_error_open	log.c	/^int log_error_open(server * srv)$/;"	f
log_error_write	log.c	/^log_error_write(server * srv, const char *filename, unsigned int line,$/;"	f
log_file_not_found	base.h	/^	unsigned short log_file_not_found;$/;"	m	struct:__anon31
log_request_handling	base.h	/^	unsigned short log_request_handling;$/;"	m	struct:__anon31
log_request_header	base.h	/^	unsigned short log_request_header;$/;"	m	struct:__anon31
log_request_header_on_error	base.h	/^	unsigned short log_request_header_on_error;$/;"	m	struct:__anon42
log_response_header	base.h	/^	unsigned short log_response_header;$/;"	m	struct:__anon31
log_ssl_noise	base.h	/^	unsigned short log_ssl_noise;$/;"	m	struct:__anon31
log_state_handling	base.h	/^	unsigned short log_state_handling;$/;"	m	struct:__anon42
log_xml	mod_webdav.c	/^	unsigned short log_xml;$/;"	m	struct:__anon51	file:
lookahead	lemon.c	/^		int lookahead;			\/* Value of the lookahead token *\/$/;"	m	struct:acttab::__anon201	file:
loops	mod_rewrite.c	/^	int loops;$/;"	m	struct:__anon126	file:
loops_per_request	base.h	/^	size_t loops_per_request;	\/* to catch endless loops in a single$/;"	m	struct:__anon35
lstat	stat_cache.c	41;"	d	file:
lua_to_c_get_string	mod_cml_lua.c	/^static int lua_to_c_get_string(lua_State * L, const char *varname, buffer * b)$/;"	f	file:
lua_to_c_is_table	mod_cml_lua.c	/^static int lua_to_c_is_table(lua_State * L, const char *varname)$/;"	f	file:
magnet_atpanic	mod_magnet.c	/^static int magnet_atpanic(lua_State * L)$/;"	f	file:
magnet_attach_content	mod_magnet.c	/^magnet_attach_content(server * srv, connection * con, plugin_data * p,$/;"	f	file:
magnet_attract	mod_magnet.c	/^magnet_attract(server * srv, connection * con, plugin_data * p, buffer * name)$/;"	f	file:
magnet_attract_array	mod_magnet.c	/^magnet_attract_array(server * srv, connection * con, plugin_data * p,$/;"	f	file:
magnet_copy_response_header	mod_magnet.c	/^magnet_copy_response_header(server * srv, connection * con,$/;"	f	file:
magnet_env_get	mod_magnet.c	/^static int magnet_env_get(lua_State * L)$/;"	f	file:
magnet_env_get_buffer	mod_magnet.c	/^static buffer *magnet_env_get_buffer(server * srv, connection * con,$/;"	f	file:
magnet_env_set	mod_magnet.c	/^static int magnet_env_set(lua_State * L)$/;"	f	file:
magnet_env_t	mod_magnet.c	/^} magnet_env_t;$/;"	t	typeref:struct:__anon141	file:
magnet_print	mod_magnet.c	/^static int magnet_print(lua_State * L)$/;"	f	file:
magnet_reqhdr_get	mod_magnet.c	/^static int magnet_reqhdr_get(lua_State * L)$/;"	f	file:
magnet_stat	mod_magnet.c	/^static int magnet_stat(lua_State * L)$/;"	f	file:
magnet_status_get	mod_magnet.c	/^static int magnet_status_get(lua_State * L)$/;"	f	file:
magnet_status_set	mod_magnet.c	/^static int magnet_status_set(lua_State * L)$/;"	f	file:
main	array.c	/^int main (int argc, char **argv) {$/;"	f
main	lemon.c	/^int main(argc, argv)$/;"	f
main	lighttpd-angel.c	/^int main(int argc, char **argv)$/;"	f
main	proc_open.c	/^int main()$/;"	f
main	server.c	/^int main(int argc, char **argv)$/;"	f
main	spawn-fcgi.c	/^int main()$/;"	f
main	spawn-fcgi.c	/^int main(int argc, char **argv)$/;"	f
major	configparser.c	/^	int major;					\/* The major token value.  This is the code *$/;"	m	struct:yyStackEntry	file:
major	lempar.c	/^	int major;					\/* The major token value.  This is the code *$/;"	m	struct:yyStackEntry	file:
major	mod_ssi_exprparser.c	/^	int major;					\/* The major token value.  This is the code *$/;"	m	struct:yyStackEntry	file:
match	mod_skeleton.c	/^	array *match;$/;"	m	struct:__anon12	file:
match_buf	mod_redirect.c	/^	buffer *match_buf;$/;"	m	struct:__anon99	file:
match_buf	mod_rewrite.c	/^	buffer *match_buf;$/;"	m	struct:__anon128	file:
match_buf	mod_skeleton.c	/^	buffer *match_buf;$/;"	m	struct:__anon13	file:
matches	base.h	/^	int matches[3 * 10];$/;"	m	struct:__anon34
max_conns	base.h	/^	size_t max_conns;$/;"	m	struct:server
max_conns	base.h	/^	unsigned short max_conns;$/;"	m	struct:__anon42
max_conns	mod_evasive.c	/^	unsigned short max_conns;$/;"	m	struct:__anon58	file:
max_fds	base.h	/^	int max_fds;				\/* max possible fds *\/$/;"	m	struct:server
max_fds	base.h	/^	unsigned short max_fds;$/;"	m	struct:__anon42
max_id	mod_fastcgi.c	/^	size_t max_id;				\/* corresponds most of the time to num_procs.$/;"	m	struct:__anon183	file:
max_id	mod_scgi.c	/^	size_t max_id;				\/* corresponds most of the time to num_procs.$/;"	m	struct:__anon171	file:
max_keep_alive_idle	base.h	/^	unsigned short max_keep_alive_idle;$/;"	m	struct:__anon31
max_keep_alive_requests	base.h	/^	unsigned short max_keep_alive_requests;$/;"	m	struct:__anon31
max_load_per_proc	mod_fastcgi.c	/^	unsigned short max_load_per_proc;$/;"	m	struct:__anon183	file:
max_load_per_proc	mod_scgi.c	/^	unsigned short max_load_per_proc;$/;"	m	struct:__anon171	file:
max_procs	mod_fastcgi.c	/^	unsigned short max_procs;$/;"	m	struct:__anon183	file:
max_procs	mod_scgi.c	/^	unsigned short max_procs;$/;"	m	struct:__anon171	file:
max_read_idle	base.h	/^	unsigned short max_read_idle;$/;"	m	struct:__anon31
max_request_size	base.h	/^	unsigned short max_request_size;$/;"	m	struct:__anon31
max_request_size	base.h	/^	unsigned short max_request_size;$/;"	m	struct:__anon42
max_requests_per_proc	mod_fastcgi.c	/^	size_t max_requests_per_proc;$/;"	m	struct:__anon183	file:
max_requests_per_proc	mod_scgi.c	/^	size_t max_requests_per_proc;$/;"	m	struct:__anon171	file:
max_worker	base.h	/^	unsigned short max_worker;$/;"	m	struct:__anon42
max_write_idle	base.h	/^	unsigned short max_write_idle;$/;"	m	struct:__anon31
maxfds	fdevent.h	/^	size_t maxfds;$/;"	m	struct:fdevents
mc	mod_cml.h	/^	struct memcache *mc;$/;"	m	struct:__anon60	typeref:struct:__anon60::memcache
mc	mod_trigger_b4_dl.c	/^	struct memcache *mc;$/;"	m	struct:__anon62	typeref:struct:__anon62::memcache	file:
mc_hosts	mod_cml.h	/^	array *mc_hosts;$/;"	m	struct:__anon60
mc_hosts	mod_trigger_b4_dl.c	/^	array *mc_hosts;$/;"	m	struct:__anon62	file:
mc_namespace	mod_cml.h	/^	buffer *mc_namespace;$/;"	m	struct:__anon60
mc_namespace	mod_trigger_b4_dl.c	/^	buffer *mc_namespace;$/;"	m	struct:__anon62	file:
md5	mod_secure_download.c	/^	buffer *md5;$/;"	m	struct:__anon16	file:
mem	chunk.h	/^	buffer *mem;				\/* either the storage of the mem-chunk or the$/;"	m	struct:chunk
memory_error	lemon.c	/^void memory_error()$/;"	f
merge	lemon.c	/^static char *merge(a, b, cmp, offset)$/;"	f	file:
message	lemon.c	/^	char *message;$/;"	m	struct:s_options	file:
metaline	configparser.y	/^metaline:: = include.metaline:: = include_shell.metaline:: = EOL. % type value$/;"	l
mimetypes	base.h	/^	array *mimetypes;$/;"	m	struct:__anon31
min_procs	mod_fastcgi.c	/^	unsigned short min_procs;$/;"	m	struct:__anon183	file:
min_procs	mod_scgi.c	/^	unsigned short min_procs;$/;"	m	struct:__anon171	file:
minimum_size_type	lemon.c	/^static const char *minimum_size_type(int lwr, int upr)$/;"	f	file:
minor	configparser.c	/^	YYMINORTYPE minor;			\/* The user-supplied minor token value.  This * $/;"	m	struct:yyStackEntry	file:
minor	lempar.c	/^	YYMINORTYPE minor;			\/* The user-supplied minor token value.  This * $/;"	m	struct:yyStackEntry	file:
minor	mod_ssi_exprparser.c	/^	YYMINORTYPE minor;			\/* The user-supplied minor token value.  This * $/;"	m	struct:yyStackEntry	file:
mkdir	mod_compress.c	49;"	d	file:
mkdir_for_file	mod_compress.c	/^int mkdir_for_file(char *filename)$/;"	f
mkdir_recursive	mod_compress.c	/^int mkdir_recursive(char *dir)$/;"	f
mmap	chunk.h	/^		} mmap;$/;"	m	struct:chunk::__anon9	typeref:struct:chunk::__anon9::__anon10
mmap	sys-mmap.h	11;"	d
mnAction	lemon.c	/^	int mnAction;				\/* Action associated with mnLookahead *\/$/;"	m	struct:acttab	file:
mnLookahead	lemon.c	/^	int mnLookahead;			\/* Minimum aLookahead[].lookahead *\/$/;"	m	struct:acttab	file:
mod_5s_ndx	mod_status.c	/^	size_t mod_5s_ndx;$/;"	m	struct:__anon75	file:
mod_5s_requests	mod_status.c	/^	double mod_5s_requests[5];$/;"	m	struct:__anon75	file:
mod_5s_traffic_out	mod_status.c	/^	double mod_5s_traffic_out[5];$/;"	m	struct:__anon75	file:
mod_access_patch_connection	mod_access.c	/^mod_access_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_access_plugin_init	mod_access.c	/^int mod_access_plugin_init(plugin * p)$/;"	f
mod_accesslog_patch_connection	mod_accesslog.c	/^mod_accesslog_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_accesslog_plugin_init	mod_accesslog.c	/^int mod_accesslog_plugin_init(plugin * p)$/;"	f
mod_alias_patch_connection	mod_alias.c	/^mod_alias_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_alias_plugin_init	mod_alias.c	/^int mod_alias_plugin_init(plugin * p)$/;"	f
mod_auth_patch_connection	mod_auth.c	/^mod_auth_patch_connection(server * srv, connection * con,$/;"	f	file:
mod_auth_plugin_config	http_auth.h	/^} mod_auth_plugin_config;$/;"	t	typeref:struct:__anon77
mod_auth_plugin_data	http_auth.h	/^} mod_auth_plugin_data;$/;"	t	typeref:struct:__anon78
mod_auth_plugin_init	mod_auth.c	/^int mod_auth_plugin_init(plugin * p)$/;"	f
mod_auth_uri_handler	mod_auth.c	/^static handler_t mod_auth_uri_handler(server * srv, connection * con, void *p_d)$/;"	f	file:
mod_cgi_patch_connection	mod_cgi.c	/^mod_cgi_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_cgi_plugin_init	mod_cgi.c	/^int mod_cgi_plugin_init(plugin * p)$/;"	f
mod_cml_patch_connection	mod_cml.c	/^mod_cml_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_cml_plugin_init	mod_cml.c	/^int mod_cml_plugin_init(plugin * p)$/;"	f
mod_compress_patch_connection	mod_compress.c	/^mod_compress_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_compress_plugin_init	mod_compress.c	/^int mod_compress_plugin_init(plugin * p)$/;"	f
mod_dirlisting_patch_connection	mod_dirlisting.c	/^mod_dirlisting_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_dirlisting_plugin_init	mod_dirlisting.c	/^int mod_dirlisting_plugin_init(plugin * p)$/;"	f
mod_evasive_patch_connection	mod_evasive.c	/^mod_evasive_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_evasive_plugin_init	mod_evasive.c	/^int mod_evasive_plugin_init(plugin * p)$/;"	f
mod_evhost_parse_host	mod_evhost.c	/^static int mod_evhost_parse_host(connection * con, array * host)$/;"	f	file:
mod_evhost_parse_pattern	mod_evhost.c	/^static void mod_evhost_parse_pattern(plugin_config * s)$/;"	f	file:
mod_evhost_patch_connection	mod_evhost.c	/^mod_evhost_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_evhost_plugin_init	mod_evhost.c	/^int mod_evhost_plugin_init(plugin * p)$/;"	f
mod_evhost_uri_handler	mod_evhost.c	/^mod_evhost_uri_handler(server * srv, connection * con, void *p_d)$/;"	f	file:
mod_expire_get_offset	mod_expire.c	/^mod_expire_get_offset(server * srv, plugin_data * p, buffer * expire,$/;"	f	file:
mod_expire_patch_connection	mod_expire.c	/^mod_expire_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_expire_plugin_init	mod_expire.c	/^int mod_expire_plugin_init(plugin * p)$/;"	f
mod_extforward_patch_connection	mod_extforward.c	/^mod_extforward_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_extforward_plugin_init	mod_extforward.c	/^int mod_extforward_plugin_init(plugin * p)$/;"	f
mod_fastcgi_plugin_init	mod_fastcgi.c	/^int mod_fastcgi_plugin_init(plugin * p)$/;"	f
mod_flv_streaming_patch_connection	mod_flv_streaming.c	/^mod_flv_streaming_patch_connection(server * srv, connection * con,$/;"	f	file:
mod_flv_streaming_plugin_init	mod_flv_streaming.c	/^int mod_flv_streaming_plugin_init(plugin * p)$/;"	f
mod_indexfile_patch_connection	mod_indexfile.c	/^mod_indexfile_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_indexfile_plugin_init	mod_indexfile.c	/^int mod_indexfile_plugin_init(plugin * p)$/;"	f
mod_magnet_patch_connection	mod_magnet.c	/^mod_magnet_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_magnet_plugin_init	mod_magnet.c	/^int mod_magnet_plugin_init(plugin * p)$/;"	f
mod_mysql_vhost_connection_data	mod_mysql_vhost.c	/^static void *mod_mysql_vhost_connection_data(server * srv,$/;"	f	file:
mod_mysql_vhost_patch_connection	mod_mysql_vhost.c	/^mod_mysql_vhost_patch_connection(server * srv, connection * con,$/;"	f	file:
mod_mysql_vhost_plugin_init	mod_mysql_vhost.c	/^int mod_mysql_vhost_plugin_init(plugin * p)$/;"	f
mod_proxy_check_extension	mod_proxy.c	/^mod_proxy_check_extension(server * srv, connection * con, void *p_d)$/;"	f	file:
mod_proxy_connection_close_callback	mod_proxy.c	/^mod_proxy_connection_close_callback(server * srv, connection * con, void *p_d)$/;"	f	file:
mod_proxy_patch_connection	mod_proxy.c	/^mod_proxy_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_proxy_plugin_init	mod_proxy.c	/^int mod_proxy_plugin_init(plugin * p)$/;"	f
mod_redirect_patch_connection	mod_redirect.c	/^mod_redirect_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_redirect_plugin_init	mod_redirect.c	/^int mod_redirect_plugin_init(plugin * p)$/;"	f
mod_redirect_uri_handler	mod_redirect.c	/^mod_redirect_uri_handler(server * srv, connection * con, void *p_data)$/;"	f	file:
mod_rewrite_patch_connection	mod_rewrite.c	/^mod_rewrite_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_rewrite_plugin_init	mod_rewrite.c	/^int mod_rewrite_plugin_init(plugin * p)$/;"	f
mod_rrd_create_pipe	mod_rrdtool.c	/^int mod_rrd_create_pipe(server * srv, plugin_data * p)$/;"	f
mod_rrd_patch_connection	mod_rrdtool.c	/^mod_rrd_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_rrdtool_create_rrd	mod_rrdtool.c	/^mod_rrdtool_create_rrd(server * srv, plugin_data * p, plugin_config * s)$/;"	f	file:
mod_rrdtool_plugin_init	mod_rrdtool.c	/^int mod_rrdtool_plugin_init(plugin * p)$/;"	f
mod_scgi_plugin_init	mod_scgi.c	/^int mod_scgi_plugin_init(plugin * p)$/;"	f
mod_secdownload_patch_connection	mod_secure_download.c	/^mod_secdownload_patch_connection(server * srv, connection * con,$/;"	f	file:
mod_secdownload_plugin_init	mod_secure_download.c	/^int mod_secdownload_plugin_init(plugin * p)$/;"	f
mod_setenv_patch_connection	mod_setenv.c	/^mod_setenv_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_setenv_plugin_init	mod_setenv.c	/^int mod_setenv_plugin_init(plugin * p)$/;"	f
mod_simple_vhost_docroot	mod_simple_vhost.c	/^mod_simple_vhost_docroot(server * srv, connection * con, void *p_data)$/;"	f	file:
mod_simple_vhost_patch_connection	mod_simple_vhost.c	/^mod_simple_vhost_patch_connection(server * srv, connection * con,$/;"	f	file:
mod_simple_vhost_plugin_init	mod_simple_vhost.c	/^int mod_simple_vhost_plugin_init(plugin * p)$/;"	f
mod_skeleton_patch_connection	mod_skeleton.c	/^mod_skeleton_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_skeleton_plugin_init	mod_skeleton.c	/^int mod_skeleton_plugin_init(plugin * p)$/;"	f
mod_ssi_handle_request	mod_ssi.c	/^mod_ssi_handle_request(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_ssi_patch_connection	mod_ssi.c	/^mod_ssi_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_ssi_plugin_init	mod_ssi.c	/^int mod_ssi_plugin_init(plugin * p)$/;"	f
mod_staticfile_patch_connection	mod_staticfile.c	/^mod_staticfile_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_staticfile_plugin_init	mod_staticfile.c	/^int mod_staticfile_plugin_init(plugin * p)$/;"	f
mod_status_get_multiplier	mod_status.c	/^static int mod_status_get_multiplier(double *avg, char *multiplier, int size)$/;"	f	file:
mod_status_handle_server_config	mod_status.c	/^mod_status_handle_server_config(server * srv, connection * con, void *p_d)$/;"	f	file:
mod_status_handle_server_statistics	mod_status.c	/^mod_status_handle_server_statistics(server * srv, connection * con, void *p_d)$/;"	f	file:
mod_status_handle_server_status	mod_status.c	/^mod_status_handle_server_status(server * srv, connection * con, void *p_d)$/;"	f	file:
mod_status_handle_server_status_html	mod_status.c	/^mod_status_handle_server_status_html(server * srv, connection * con, void *p_d)$/;"	f	file:
mod_status_handle_server_status_text	mod_status.c	/^mod_status_handle_server_status_text(server * srv, connection * con, void *p_d)$/;"	f	file:
mod_status_handler	mod_status.c	/^static handler_t mod_status_handler(server * srv, connection * con, void *p_d)$/;"	f	file:
mod_status_header_append	mod_status.c	/^static int mod_status_header_append(buffer * b, const char *key)$/;"	f	file:
mod_status_header_append_sort	mod_status.c	/^static int mod_status_header_append_sort(buffer * b, void *p_d, const char *key)$/;"	f	file:
mod_status_patch_connection	mod_status.c	/^mod_status_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_status_plugin_init	mod_status.c	/^int mod_status_plugin_init(plugin * p)$/;"	f
mod_status_row_append	mod_status.c	/^static int mod_status_row_append(buffer * b, const char *key, const char *value)$/;"	f	file:
mod_trigger_b4_dl_patch_connection	mod_trigger_b4_dl.c	/^mod_trigger_b4_dl_patch_connection(server * srv, connection * con,$/;"	f	file:
mod_trigger_b4_dl_plugin_init	mod_trigger_b4_dl.c	/^int mod_trigger_b4_dl_plugin_init(plugin * p)$/;"	f
mod_userdir_patch_connection	mod_userdir.c	/^mod_userdir_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_userdir_plugin_init	mod_userdir.c	/^int mod_userdir_plugin_init(plugin * p)$/;"	f
mod_usertrack_patch_connection	mod_usertrack.c	/^mod_usertrack_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_usertrack_plugin_init	mod_usertrack.c	/^int mod_usertrack_plugin_init(plugin * p)$/;"	f
mod_webdav_patch_connection	mod_webdav.c	/^mod_webdav_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
mod_webdav_plugin_init	mod_webdav.c	/^int mod_webdav_plugin_init(plugin * p)$/;"	f
mode	base.h	/^	connection_type mode;$/;"	m	struct:__anon35
mode	mod_fastcgi.c	/^	unsigned short mode;$/;"	m	struct:__anon183	file:
module_list	mod_status.c	/^	buffer *module_list;$/;"	m	struct:__anon75	file:
modules	base.h	/^	array *modules;$/;"	m	struct:__anon42
modules_dir	base.h	/^	buffer *modules_dir;$/;"	m	struct:__anon42
msort	lemon.c	/^char *msort(list, next, cmp)$/;"	f
mtime	base.h	/^	time_t mtime;				\/* the key *\/$/;"	m	struct:__anon40
mtime	base.h	/^	time_t mtime;$/;"	m	struct:__anon39
mtime	mod_dirlisting.c	/^	time_t mtime;$/;"	m	struct:__anon86	file:
mtime_cache	base.h	/^	mtime_cache_type mtime_cache[FILE_CACHE_MAX];$/;"	m	struct:server
mtime_cache_type	base.h	/^} mtime_cache_type;$/;"	t	typeref:struct:__anon40
munmap	sys-mmap.h	12;"	d
mxLookahead	lemon.c	/^	int mxLookahead;			\/* Maximum aLookahead[].lookahead *\/$/;"	m	struct:acttab	file:
myassert	lemon.c	/^void myassert(file, line)$/;"	f
mydb	mod_mysql_vhost.c	/^	buffer *mydb;$/;"	m	struct:__anon164	file:
mypass	mod_mysql_vhost.c	/^	buffer *mypass;$/;"	m	struct:__anon164	file:
mysock	mod_mysql_vhost.c	/^	buffer *mysock;$/;"	m	struct:__anon164	file:
mysql	mod_mysql_vhost.c	/^	MYSQL *mysql;$/;"	m	struct:__anon164	file:
mysql_post	mod_mysql_vhost.c	/^	buffer *mysql_post;$/;"	m	struct:__anon164	file:
mysql_pre	mod_mysql_vhost.c	/^	buffer *mysql_pre;$/;"	m	struct:__anon164	file:
myuser	mod_mysql_vhost.c	/^	buffer *myuser;$/;"	m	struct:__anon164	file:
nAction	lemon.c	/^	int nAction;				\/* Number of actions *\/$/;"	m	struct:axset	file:
nAction	lemon.c	/^	int nAction;				\/* Number of used slots in aAction[] *\/$/;"	m	struct:acttab	file:
nActionAlloc	lemon.c	/^	int nActionAlloc;			\/* Slots allocated for aAction[] *\/$/;"	m	struct:acttab	file:
nLookahead	lemon.c	/^	int nLookahead;				\/* Used slots in aLookahead[] *\/$/;"	m	struct:acttab	file:
nLookaheadAlloc	lemon.c	/^	int nLookaheadAlloc;		\/* Slots allocated in aLookahead[] *\/$/;"	m	struct:acttab	file:
nNtAct	lemon.c	/^	int nTknAct, nNtAct;		\/* Number of actions on terminals and$/;"	m	struct:state	file:
nTknAct	lemon.c	/^	int nTknAct, nNtAct;		\/* Number of actions on terminals and$/;"	m	struct:state	file:
name	base.h	/^	buffer *name; 		\/\/文件名$/;"	m	struct:__anon29
name	chunk.h	/^		buffer *name;			\/* name of the file *\/$/;"	m	struct:chunk::__anon9
name	lemon.c	/^	char *name;					\/* Name of the generated parser *\/$/;"	m	struct:lemon	file:
name	lemon.c	/^	char *name;					\/* Name of the symbol *\/$/;"	m	struct:symbol	file:
name	mod_magnet.c	/^	const char *name;$/;"	m	struct:__anon141	file:
name	mod_magnet_cache.h	/^	buffer *name;$/;"	m	struct:__anon155
name	plugin.h	/^	buffer *name;				\/* name of the plugin *\/$/;"	m	struct:__anon79
name	stat_cache.c	/^	buffer *name;$/;"	m	struct:__anon133	file:
namelen	mod_dirlisting.c	/^	size_t namelen;$/;"	m	struct:__anon86	file:
nbits	bitset.h	/^	size_t nbits;$/;"	m	struct:__anon57
nconflict	lemon.c	/^	int nconflict;				\/* Number of parsing conflicts *\/$/;"	m	struct:lemon	file:
ndx	base.h	/^	int ndx;					\/* reverse mapping to server->connection[ndx] *\/$/;"	m	struct:__anon35
network_backend	base.h	/^	buffer *network_backend;$/;"	m	struct:__anon42
network_backend_read	base.h	/^	int (*network_backend_read) (struct server * srv, connection * con,$/;"	m	struct:server
network_backend_t	network.c	/^} network_backend_t;$/;"	t	typeref:enum:__anon179	file:
network_backend_write	base.h	/^	int (*network_backend_write) (struct server * srv,$/;"	m	struct:server
network_close	network.c	/^int network_close(server * srv)$/;"	f
network_init	network.c	/^int network_init(server * srv)$/;"	f
network_register_fdevents	network.c	/^int network_register_fdevents(server * srv)$/;"	f
network_server_handle_fdevent	network.c	/^handler_t network_server_handle_fdevent(void *s, void *context, int revents)$/;"	f
network_server_init	network.c	/^int network_server_init(server * srv, buffer * host_token, specific_config * s)$/;"	f
network_ssl_backend_read	base.h	/^	int (*network_ssl_backend_read) (struct server * srv,$/;"	m	struct:server
network_ssl_backend_write	base.h	/^	int (*network_ssl_backend_write) (struct server * srv,$/;"	m	struct:server
network_write_chunkqueue	network.c	/^int network_write_chunkqueue(server * srv, connection * con, chunkqueue * cq)$/;"	f
network_write_chunkqueue_freebsdsendfile	network_freebsd_sendfile.c	/^network_write_chunkqueue_freebsdsendfile(server * srv, connection * con,$/;"	f
network_write_chunkqueue_linuxsendfile	network_linux_sendfile.c	/^network_write_chunkqueue_linuxsendfile(server * srv, connection * con,$/;"	f
network_write_chunkqueue_openssl	network_openssl.c	/^network_write_chunkqueue_openssl(server * srv, connection * con, SSL * ssl,$/;"	f
network_write_chunkqueue_solarissendfilev	network_solaris_sendfilev.c	/^network_write_chunkqueue_solarissendfilev(server * srv, connection * con,$/;"	f
network_write_chunkqueue_write	network_write.c	/^network_write_chunkqueue_write(server * srv, connection * con, int fd,$/;"	f
network_write_chunkqueue_writev	network_writev.c	/^network_write_chunkqueue_writev(server * srv, connection * con, int fd,$/;"	f
newconfig	lemon.c	/^PRIVATE struct config *newconfig()$/;"	f
next	array.h	/^	data_config *next;$/;"	m	struct:_data_config
next	chunk.h	/^	struct chunk *next;$/;"	m	struct:chunk	typeref:struct:chunk::chunk
next	fdevent.h	/^	struct _fdnode *prev, *next;$/;"	m	struct:_fdnode	typeref:struct:_fdnode::
next	lemon.c	/^	struct action *next;		\/* Next action for this state *\/$/;"	m	struct:action	typeref:struct:action::action	file:
next	lemon.c	/^	struct config *next;		\/* Next configuration in the state *\/$/;"	m	struct:config	typeref:struct:config::config	file:
next	lemon.c	/^	struct plink *next;			\/* The next propagate link *\/$/;"	m	struct:plink	typeref:struct:plink::plink	file:
next	lemon.c	/^	struct rule *next;			\/* Next rule in the global list *\/$/;"	m	struct:rule	typeref:struct:rule::rule	file:
next	lemon.c	/^	struct s_x1node *next;		\/* Next entry with the same hash *\/$/;"	m	struct:s_x1node	typeref:struct:s_x1node::s_x1node	file:
next	lemon.c	/^	struct s_x2node *next;		\/* Next entry with the same hash *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::s_x2node	file:
next	lemon.c	/^	struct s_x3node *next;		\/* Next entry with the same hash *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::s_x3node	file:
next	lemon.c	/^	struct s_x4node *next;		\/* Next entry with the same hash *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::s_x4node	file:
next	mod_fastcgi.c	/^	struct fcgi_proc *prev, *next;	\/* see first *\/$/;"	m	struct:fcgi_proc	typeref:struct:fcgi_proc::	file:
next	mod_scgi.c	/^	struct scgi_proc *prev, *next;	\/* see first *\/$/;"	m	struct:scgi_proc	typeref:struct:scgi_proc::	file:
next_power_of_2	array.h	/^	size_t next_power_of_2;$/;"	m	struct:__anon147
nextlhs	lemon.c	/^	struct rule *nextlhs;		\/* Next rule with the same LHS *\/$/;"	m	struct:rule	typeref:struct:rule::rule	file:
node_size	splaytree.c	78;"	d	file:
note_is_sent	mod_fastcgi.c	/^	int note_is_sent;$/;"	m	struct:__anon184	file:
note_is_sent	mod_scgi.c	/^	int note_is_sent;$/;"	m	struct:__anon172	file:
nrhs	configparser.c	/^	unsigned char nrhs;			\/* Number of right-hand side symbols in the$/;"	m	struct:__anon145	file:
nrhs	lemon.c	/^	int nrhs;					\/* Number of RHS symbols *\/$/;"	m	struct:rule	file:
nrhs	lemon.c	/^	int nrhs;					\/* Number of right-hand side symbols seen *\/$/;"	m	struct:pstate	file:
nrhs	lempar.c	/^	unsigned char nrhs;			\/* Number of right-hand side symbols in the$/;"	m	struct:__anon143	file:
nrhs	mod_ssi_exprparser.c	/^	unsigned char nrhs;			\/* Number of right-hand side symbols in the$/;"	m	struct:__anon203	file:
nrule	lemon.c	/^	int nrule;					\/* Number of rules *\/$/;"	m	struct:lemon	file:
ns	mod_webdav.c	/^	char *ns;$/;"	m	struct:__anon53	file:
nstate	lemon.c	/^	int nstate;					\/* Number of states *\/$/;"	m	struct:lemon	file:
nsymbol	lemon.c	/^	int nsymbol;				\/* Number of terminal and nonterminal symbols *\/$/;"	m	struct:lemon	file:
nterminal	lemon.c	/^	int nterminal;				\/* Number of terminal symbols *\/$/;"	m	struct:lemon	file:
num_procs	mod_fastcgi.c	/^	size_t num_procs;			\/* how many procs are started *\/$/;"	m	struct:__anon183	file:
num_procs	mod_scgi.c	/^	size_t num_procs;			\/* how many procs are started *\/$/;"	m	struct:__anon171	file:
offset	buffer.h	/^	size_t offset;				\/* input-pointer *\/$/;"	m	struct:__anon90
offset	chunk.h	/^			off_t offset;		\/* start is <n> octet away from the start$/;"	m	struct:chunk::__anon9::__anon10
offset	chunk.h	/^	off_t offset;				\/* octets sent from this chunk the size of the$/;"	m	struct:chunk
offset	configfile.c	/^	size_t offset;$/;"	m	struct:__anon204	file:
offset	mod_ssi_expr.c	/^	size_t offset;$/;"	m	struct:__anon2	file:
ofn	mod_compress.c	/^	buffer *ofn;$/;"	m	struct:__anon93	file:
ok	configfile.h	/^	int ok;$/;"	m	struct:__anon194
ok	mod_ssi_expr.h	/^	int ok;$/;"	m	struct:__anon96
once	mod_rewrite.c	/^	int once;$/;"	m	struct:__anon123	file:
op	array.h	/^	buffer *op;$/;"	m	struct:_data_config
op	lemon.c	/^static struct s_options *op;$/;"	v	typeref:struct:s_options	file:
openDevNull	log.c	/^int openDevNull(int fd)$/;"	f
orig_uri	base.h	/^	buffer *orig_uri;$/;"	m	struct:__anon24
out	proc_open.h	/^	pipe_t in, out, err;$/;"	m	struct:__anon213
outname	lemon.c	/^	char *outname;				\/* Name of the current output file *\/$/;"	m	struct:lemon	file:
overflow	lemon.c	/^	char *overflow;				\/* Code to execute on a stack overflow *\/$/;"	m	struct:lemon	file:
overflowln	lemon.c	/^	int overflowln;				\/* Line number for start of overflow code *\/$/;"	m	struct:lemon	file:
padding	mod_fastcgi.c	/^	int padding;$/;"	m	struct:__anon193	file:
paddingLength	fastcgi.h	/^	unsigned char paddingLength;$/;"	m	struct:__anon116
parent	array.h	/^	data_config *parent;$/;"	m	struct:_data_config
parent	proc_open.h	/^	descriptor_t parent, child;$/;"	m	struct:__anon212
parse_binpath	mod_fastcgi.c	/^static int parse_binpath(char_array * env, buffer * b)$/;"	f	file:
parse_config_entry	mod_dirlisting.c	/^parse_config_entry(server * srv, plugin_config * s, array * ca,$/;"	f	file:
parse_config_entry	mod_rewrite.c	/^parse_config_entry(server * srv, plugin_config * s, array * ca,$/;"	f	file:
parse_full_path	base.h	/^	buffer *parse_full_path;$/;"	m	struct:server
parse_request	base.h	/^	buffer *parse_request;$/;"	m	struct:__anon35
parse_response	mod_cgi.c	/^	buffer *parse_response;$/;"	m	struct:__anon113	file:
parse_response	mod_fastcgi.c	/^	buffer *parse_response;$/;"	m	struct:__anon189	file:
parse_response	mod_proxy.c	/^	buffer *parse_response;$/;"	m	struct:__anon102	file:
parse_response	mod_scgi.c	/^	buffer *parse_response;$/;"	m	struct:__anon176	file:
parsed_format	mod_accesslog.c	/^	format_fields *parsed_format;$/;"	m	struct:__anon69	file:
parsed_response	base.h	/^	unsigned int parsed_response;	\/* bitfield which contains the$/;"	m	struct:__anon35
parseonetoken	lemon.c	/^static void parseonetoken(psp)$/;"	f	file:
path	base.h	/^	buffer *path;$/;"	m	struct:__anon27
path	base.h	/^	buffer *path;$/;"	m	struct:__anon28
path	mod_fastcgi.c	/^	buffer *path;$/;"	m	struct:__anon189	file:
path	mod_scgi.c	/^	buffer *path;$/;"	m	struct:__anon176	file:
path	mod_userdir.c	/^	buffer *path;$/;"	m	struct:__anon207	file:
path_info_offset	mod_proxy.c	/^	size_t path_info_offset;	\/* start of path_info in uri.path *\/$/;"	m	struct:__anon105	file:
path_pieces	mod_evhost.c	/^	buffer **path_pieces;$/;"	m	struct:__anon137	file:
path_pieces_raw	mod_evhost.c	/^	buffer *path_pieces_raw;$/;"	m	struct:__anon137	file:
path_raw	base.h	/^	buffer *path_raw;$/;"	m	struct:__anon27
path_rrd	mod_rrdtool.c	/^	buffer *path_rrd;$/;"	m	struct:__anon217	file:
path_rrdtool_bin	mod_rrdtool.c	/^	buffer *path_rrdtool_bin;$/;"	m	struct:__anon217	file:
pathinfo	base.h	/^	buffer *pathinfo;$/;"	m	struct:__anon24
pathsearch	lemon.c	/^PRIVATE char *pathsearch(argv0, name, modemask)$/;"	f
patterncount	base.h	/^	int patterncount;$/;"	m	struct:__anon34
pcre_keyvalue	keyvalue.h	/^KVB(pcre_keyvalue);$/;"	v
pcre_keyvalue	keyvalue.h	/^} pcre_keyvalue;$/;"	t	typeref:struct:__anon161
pcre_keyvalue_buffer_append	keyvalue.c	/^pcre_keyvalue_buffer_append(pcre_keyvalue_buffer * kvb, const char *key,$/;"	f
pcre_keyvalue_buffer_free	keyvalue.c	/^void pcre_keyvalue_buffer_free(pcre_keyvalue_buffer * kvb)$/;"	f
pcre_keyvalue_buffer_init	keyvalue.c	/^pcre_keyvalue_buffer *pcre_keyvalue_buffer_init(void)$/;"	f
physical	base.h	/^	physical physical;$/;"	m	struct:__anon35
physical	base.h	/^} physical;$/;"	t	typeref:struct:__anon28
physical	mod_webdav.c	/^	physical physical;$/;"	m	struct:__anon52	file:
physical_path	mod_magnet.c	/^	array *physical_path;$/;"	m	struct:__anon139	file:
pid	lighttpd-angel.c	/^static volatile pid_t pid = -1;$/;"	v	file:
pid	mod_cgi.c	/^	pid_t pid;$/;"	m	struct:__anon114	file:
pid	mod_fastcgi.c	/^	pid_t pid;					\/* PID of the spawned process (0 if not spawned $/;"	m	struct:fcgi_proc	file:
pid	mod_fastcgi.c	/^	pid_t pid;$/;"	m	struct:__anon191	file:
pid	mod_scgi.c	/^	pid_t pid;					\/* PID of the spawned process (0 if not spawned $/;"	m	struct:scgi_proc	file:
pid	mod_scgi.c	/^	pid_t pid;$/;"	m	struct:__anon178	file:
pid_file	base.h	/^	buffer *pid_file;$/;"	m	struct:__anon42
pipe	proc_open.c	23;"	d	file:
pipe_close	proc_open.c	/^static void pipe_close(pipe_t * p)$/;"	f	file:
pipe_close_child	proc_open.c	/^static void pipe_close_child(pipe_t * p)$/;"	f	file:
pipe_close_parent	proc_open.c	/^static void pipe_close_parent(pipe_t * p)$/;"	f	file:
pipe_open	proc_open.c	/^static int pipe_open(pipe_t * p, int fd SECURITY_DC)$/;"	f	file:
pipe_t	proc_open.h	/^} pipe_t;$/;"	t	typeref:struct:__anon212
plain	base.h	/^	struct sockaddr plain;$/;"	m	union:__anon23	typeref:struct:__anon23::sockaddr
plink	lemon.c	/^struct plink {$/;"	s	file:
plink_freelist	lemon.c	/^static struct plink *plink_freelist = 0;$/;"	v	typeref:struct:plink	file:
plugin	plugin.h	/^} plugin;$/;"	t	typeref:struct:__anon79
plugin_config	mod_access.c	/^} plugin_config;$/;"	t	typeref:struct:__anon131	file:
plugin_config	mod_accesslog.c	/^} plugin_config;$/;"	t	typeref:struct:__anon69	file:
plugin_config	mod_alias.c	/^} plugin_config;$/;"	t	typeref:struct:__anon55	file:
plugin_config	mod_cgi.c	/^} plugin_config;$/;"	t	typeref:struct:__anon112	file:
plugin_config	mod_cml.h	/^} plugin_config;$/;"	t	typeref:struct:__anon60
plugin_config	mod_compress.c	/^} plugin_config;$/;"	t	typeref:struct:__anon92	file:
plugin_config	mod_dirlisting.c	/^} plugin_config;$/;"	t	typeref:struct:__anon84	file:
plugin_config	mod_evasive.c	/^} plugin_config;$/;"	t	typeref:struct:__anon58	file:
plugin_config	mod_evhost.c	/^} plugin_config;$/;"	t	typeref:struct:__anon137	file:
plugin_config	mod_expire.c	/^} plugin_config;$/;"	t	typeref:struct:__anon80	file:
plugin_config	mod_extforward.c	/^} plugin_config;$/;"	t	typeref:struct:__anon214	file:
plugin_config	mod_fastcgi.c	/^} plugin_config;$/;"	t	typeref:struct:__anon186	file:
plugin_config	mod_flv_streaming.c	/^} plugin_config;$/;"	t	typeref:struct:__anon129	file:
plugin_config	mod_indexfile.c	/^} plugin_config;$/;"	t	typeref:struct:__anon205	file:
plugin_config	mod_magnet.c	/^} plugin_config;$/;"	t	typeref:struct:__anon139	file:
plugin_config	mod_mysql_vhost.c	/^} plugin_config;$/;"	t	typeref:struct:__anon164	file:
plugin_config	mod_proxy.c	/^} plugin_config;$/;"	t	typeref:struct:__anon101	file:
plugin_config	mod_redirect.c	/^} plugin_config;$/;"	t	typeref:struct:__anon98	file:
plugin_config	mod_rewrite.c	/^} plugin_config;$/;"	t	typeref:struct:__anon125	file:
plugin_config	mod_rrdtool.c	/^} plugin_config;$/;"	t	typeref:struct:__anon217	file:
plugin_config	mod_scgi.c	/^} plugin_config;$/;"	t	typeref:struct:__anon174	file:
plugin_config	mod_secure_download.c	/^} plugin_config;$/;"	t	typeref:struct:__anon15	file:
plugin_config	mod_setenv.c	/^} plugin_config;$/;"	t	typeref:struct:__anon72	file:
plugin_config	mod_simple_vhost.c	/^} plugin_config;$/;"	t	typeref:struct:__anon49	file:
plugin_config	mod_skeleton.c	/^} plugin_config;$/;"	t	typeref:struct:__anon12	file:
plugin_config	mod_ssi.h	/^} plugin_config;$/;"	t	typeref:struct:__anon167
plugin_config	mod_staticfile.c	/^} plugin_config;$/;"	t	typeref:struct:__anon107	file:
plugin_config	mod_status.c	/^} plugin_config;$/;"	t	typeref:struct:__anon74	file:
plugin_config	mod_trigger_b4_dl.c	/^} plugin_config;$/;"	t	typeref:struct:__anon62	file:
plugin_config	mod_userdir.c	/^} plugin_config;$/;"	t	typeref:struct:__anon207	file:
plugin_config	mod_usertrack.c	/^} plugin_config;$/;"	t	typeref:struct:__anon180	file:
plugin_config	mod_webdav.c	/^} plugin_config;$/;"	t	typeref:struct:__anon51	file:
plugin_connection_data	mod_mysql_vhost.c	/^} plugin_connection_data;$/;"	t	typeref:struct:__anon166	file:
plugin_ctx	base.h	/^	void **plugin_ctx;			\/* plugin connection specific config *\/$/;"	m	struct:__anon35
plugin_data	connections.c	/^} plugin_data;$/;"	t	typeref:struct:__anon136	file:
plugin_data	mod_access.c	/^} plugin_data;$/;"	t	typeref:struct:__anon132	file:
plugin_data	mod_accesslog.c	/^} plugin_data;$/;"	t	typeref:struct:__anon70	file:
plugin_data	mod_alias.c	/^} plugin_data;$/;"	t	typeref:struct:__anon56	file:
plugin_data	mod_cgi.c	/^	plugin_data *plugin_data;	\/* dumb pointer *\/$/;"	m	struct:__anon114	file:
plugin_data	mod_cgi.c	/^} plugin_data;$/;"	t	typeref:struct:__anon113	file:
plugin_data	mod_cml.h	/^} plugin_data;$/;"	t	typeref:struct:__anon61
plugin_data	mod_cml.h	15;"	d
plugin_data	mod_compress.c	/^} plugin_data;$/;"	t	typeref:struct:__anon93	file:
plugin_data	mod_dirlisting.c	/^} plugin_data;$/;"	t	typeref:struct:__anon85	file:
plugin_data	mod_evasive.c	/^} plugin_data;$/;"	t	typeref:struct:__anon59	file:
plugin_data	mod_evhost.c	/^} plugin_data;$/;"	t	typeref:struct:__anon138	file:
plugin_data	mod_expire.c	/^} plugin_data;$/;"	t	typeref:struct:__anon81	file:
plugin_data	mod_extforward.c	/^} plugin_data;$/;"	t	typeref:struct:__anon215	file:
plugin_data	mod_fastcgi.c	/^	plugin_data *plugin_data;	\/* dumb pointer *\/$/;"	m	struct:__anon191	file:
plugin_data	mod_fastcgi.c	/^} plugin_data;$/;"	t	typeref:struct:__anon189	file:
plugin_data	mod_flv_streaming.c	/^} plugin_data;$/;"	t	typeref:struct:__anon130	file:
plugin_data	mod_indexfile.c	/^} plugin_data;$/;"	t	typeref:struct:__anon206	file:
plugin_data	mod_magnet.c	/^} plugin_data;$/;"	t	typeref:struct:__anon140	file:
plugin_data	mod_mysql_vhost.c	/^} plugin_data;$/;"	t	typeref:struct:__anon165	file:
plugin_data	mod_proxy.c	/^	plugin_data *plugin_data;	\/* dump pointer *\/$/;"	m	struct:__anon105	file:
plugin_data	mod_proxy.c	/^} plugin_data;$/;"	t	typeref:struct:__anon102	file:
plugin_data	mod_redirect.c	/^} plugin_data;$/;"	t	typeref:struct:__anon99	file:
plugin_data	mod_rewrite.c	/^} plugin_data;$/;"	t	typeref:struct:__anon128	file:
plugin_data	mod_rrdtool.c	/^} plugin_data;$/;"	t	typeref:struct:__anon218	file:
plugin_data	mod_scgi.c	/^	plugin_data *plugin_data;	\/* dumb pointer *\/$/;"	m	struct:__anon178	file:
plugin_data	mod_scgi.c	/^} plugin_data;$/;"	t	typeref:struct:__anon176	file:
plugin_data	mod_secure_download.c	/^} plugin_data;$/;"	t	typeref:struct:__anon16	file:
plugin_data	mod_setenv.c	/^} plugin_data;$/;"	t	typeref:struct:__anon73	file:
plugin_data	mod_simple_vhost.c	/^} plugin_data;$/;"	t	typeref:struct:__anon50	file:
plugin_data	mod_skeleton.c	/^} plugin_data;$/;"	t	typeref:struct:__anon13	file:
plugin_data	mod_ssi.h	/^} plugin_data;$/;"	t	typeref:struct:__anon168
plugin_data	mod_staticfile.c	/^} plugin_data;$/;"	t	typeref:struct:__anon108	file:
plugin_data	mod_status.c	/^} plugin_data;$/;"	t	typeref:struct:__anon75	file:
plugin_data	mod_trigger_b4_dl.c	/^} plugin_data;$/;"	t	typeref:struct:__anon63	file:
plugin_data	mod_userdir.c	/^} plugin_data;$/;"	t	typeref:struct:__anon208	file:
plugin_data	mod_usertrack.c	/^} plugin_data;$/;"	t	typeref:struct:__anon181	file:
plugin_data	mod_webdav.c	/^} plugin_data;$/;"	t	typeref:struct:__anon52	file:
plugin_data	plugin.c	/^} plugin_data;$/;"	t	typeref:struct:__anon209	file:
plugin_free	plugin.c	/^static void plugin_free(plugin * p)$/;"	f	file:
plugin_init	plugin.c	/^static plugin *plugin_init(void)$/;"	f	file:
plugin_slots	base.h	/^	void *plugin_slots;$/;"	m	struct:server
plugin_t	plugin.c	/^} plugin_t;$/;"	t	typeref:enum:__anon210	file:
plugins	base.h	/^	buffer_plugin plugins;$/;"	m	struct:server
plugins_free	plugin.c	/^void plugins_free(server * srv)$/;"	f
plugins_load	plugin.c	/^int plugins_load(server * srv)$/;"	f
plugins_register	plugin.c	/^static int plugins_register(server * srv, plugin * p)$/;"	f	file:
poll	fdevent.h	/^	int (*poll) (struct fdevents * ev, int timeout_ms);$/;"	m	struct:fdevents
pollfds	fdevent.h	/^	struct pollfd *pollfds;$/;"	m	struct:fdevents	typeref:struct:fdevents::pollfd
port	array.h	/^	unsigned short port;$/;"	m	struct:__anon154
port	base.h	/^	unsigned short port;$/;"	m	struct:__anon22
port	base.h	/^	unsigned short port;$/;"	m	struct:__anon42
port	mod_fastcgi.c	/^	unsigned port;				\/* config.port + pno *\/$/;"	m	struct:fcgi_proc	file:
port	mod_fastcgi.c	/^	unsigned short port;$/;"	m	struct:__anon183	file:
port	mod_mysql_vhost.c	/^	unsigned short port;$/;"	m	struct:__anon164	file:
port	mod_scgi.c	/^	unsigned port;				\/* config.port + pno *\/$/;"	m	struct:scgi_proc	file:
port	mod_scgi.c	/^	unsigned short port;$/;"	m	struct:__anon171	file:
port_fd	fdevent.h	/^	int port_fd;$/;"	m	struct:fdevents
power_magnet	mod_cml.h	/^	buffer *power_magnet;$/;"	m	struct:__anon60
prec	lemon.c	/^	int prec;					\/* Precedence if defined (-1 otherwise) *\/$/;"	m	struct:symbol	file:
preccounter	lemon.c	/^	int preccounter;			\/* Assign this precedence to decl arguments $/;"	m	struct:pstate	file:
precsym	lemon.c	/^	struct symbol *precsym;		\/* Precedence symbol for this rule *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
prev	array.h	/^	data_config *prev;$/;"	m	struct:_data_config
prev	fdevent.h	/^	struct _fdnode *prev, *next;$/;"	m	struct:_fdnode	typeref:struct:_fdnode::_fdnode
prev	mod_fastcgi.c	/^	struct fcgi_proc *prev, *next;	\/* see first *\/$/;"	m	struct:fcgi_proc	typeref:struct:fcgi_proc::fcgi_proc	file:
prev	mod_scgi.c	/^	struct scgi_proc *prev, *next;	\/* see first *\/$/;"	m	struct:scgi_proc	typeref:struct:scgi_proc::scgi_proc	file:
prevrule	lemon.c	/^	struct rule *prevrule;		\/* Previous rule parsed *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
print_stack_union	lemon.c	/^void print_stack_union(out, lemp, plineno, mhflag)$/;"	f
proc	mod_fastcgi.c	/^	fcgi_proc *proc;$/;"	m	struct:__anon191	file:
proc	mod_scgi.c	/^	scgi_proc *proc;$/;"	m	struct:__anon178	file:
proc_close	proc_open.c	/^int proc_close(proc_handler_t * proc)$/;"	f
proc_close_childs	proc_open.c	/^static void proc_close_childs(proc_handler_t * proc)$/;"	f	file:
proc_close_parents	proc_open.c	/^static void proc_close_parents(proc_handler_t * proc)$/;"	f	file:
proc_close_pipes	proc_open.c	/^static void proc_close_pipes(proc_handler_t * proc)$/;"	f	file:
proc_handler_t	proc_open.h	/^} proc_handler_t;$/;"	t	typeref:struct:__anon213
proc_open	proc_open.c	/^int proc_open(proc_handler_t * proc, const char *command)$/;"	f
proc_open_buffer	proc_open.c	/^proc_open_buffer(proc_handler_t * proc, const char *command, buffer * in,$/;"	f
proc_open_pipes	proc_open.c	/^static int proc_open_pipes(proc_handler_t * proc SECURITY_DC)$/;"	f	file:
proc_pid_t	proc_open.h	/^typedef HANDLE proc_pid_t;$/;"	t
proc_pid_t	proc_open.h	/^typedef pid_t proc_pid_t;$/;"	t
proc_read_fd_to_buffer	proc_open.c	/^static void proc_read_fd_to_buffer(int fd, buffer * b)$/;"	f	file:
process_ssi_stmt	mod_ssi.c	/^process_ssi_stmt(server * srv, connection * con, plugin_data * p,$/;"	f	file:
prop	mod_webdav.c	/^	char *prop;$/;"	m	struct:__anon53	file:
protocolStatus	fastcgi.h	/^	unsigned char protocolStatus;$/;"	m	struct:__anon119
proxy_append_header	mod_proxy.c	/^void proxy_append_header(connection * con, const char *key, const char *value)$/;"	f
proxy_balance_t	mod_proxy.c	/^} proxy_balance_t;$/;"	t	typeref:enum:__anon100	file:
proxy_connection_close	mod_proxy.c	/^void proxy_connection_close(server * srv, handler_ctx * hctx)$/;"	f
proxy_connection_state_t	mod_proxy.c	/^} proxy_connection_state_t;$/;"	t	typeref:enum:__anon103	file:
proxy_create_env	mod_proxy.c	/^static int proxy_create_env(server * srv, handler_ctx * hctx)$/;"	f	file:
proxy_demux_response	mod_proxy.c	/^static int proxy_demux_response(server * srv, handler_ctx * hctx)$/;"	f	file:
proxy_establish_connection	mod_proxy.c	/^static int proxy_establish_connection(server * srv, handler_ctx * hctx)$/;"	f	file:
proxy_handle_fdevent	mod_proxy.c	/^static handler_t proxy_handle_fdevent(void *s, void *ctx, int revents)$/;"	f	file:
proxy_response_parse	mod_proxy.c	/^proxy_response_parse(server * srv, connection * con, plugin_data * p,$/;"	f	file:
proxy_set_header	mod_proxy.c	/^void proxy_set_header(connection * con, const char *key, const char *value)$/;"	f
proxy_set_state	mod_proxy.c	/^proxy_set_state(server * srv, handler_ctx * hctx,$/;"	f	file:
proxy_write_request	mod_proxy.c	/^static handler_t proxy_write_request(server * srv, handler_ctx * hctx)$/;"	f	file:
ps	lemon.c	/^struct pstate ps;$/;"	v	typeref:struct:pstate
pstate	lemon.c	/^struct pstate {$/;"	s	file:
ptr	base.h	/^	connection **ptr;$/;"	m	struct:__anon36
ptr	base.h	/^	server_socket **ptr;$/;"	m	struct:__anon45
ptr	base.h	/^	void *ptr;$/;"	m	struct:__anon41
ptr	buffer.h	/^	buffer **ptr; 	\/\/buffer指针数组$/;"	m	struct:__anon89
ptr	buffer.h	/^	char *ptr; 		\/\/指向存储空间$/;"	m	struct:__anon88
ptr	buffer.h	/^	char *ptr;$/;"	m	struct:__anon90
ptr	fdevent.h	/^	fd_conn *ptr;$/;"	m	struct:__anon6
ptr	fdevent.h	/^	int *ptr;$/;"	m	struct:__anon7
ptr	http_auth.c	/^	char **ptr;$/;"	m	struct:__anon219	file:
ptr	mod_accesslog.c	/^	format_field **ptr;$/;"	m	struct:__anon68	file:
ptr	mod_cgi.c	/^	char **ptr;$/;"	m	struct:__anon110	file:
ptr	mod_cgi.c	/^	pid_t *ptr;$/;"	m	struct:__anon111	file:
ptr	mod_dirlisting.c	/^	excludes **ptr;$/;"	m	struct:__anon83	file:
ptr	mod_fastcgi.c	/^	char **ptr;$/;"	m	struct:__anon188	file:
ptr	mod_fastcgi.c	/^	size_t *ptr;$/;"	m	struct:__anon187	file:
ptr	mod_magnet_cache.h	/^	script **ptr;$/;"	m	struct:__anon156
ptr	mod_rewrite.c	/^	rewrite_rule **ptr;$/;"	m	struct:__anon124	file:
ptr	mod_scgi.c	/^	char **ptr;$/;"	m	struct:__anon175	file:
ptr	mod_webdav.c	/^	webdav_property **ptr;$/;"	m	struct:__anon54	file:
ptr	stat_cache.c	/^	int *ptr;$/;"	m	struct:__anon134	file:
put_string_into_array_len	mod_extforward.c	/^static void put_string_into_array_len(array * ary, const char *str, int len)$/;"	f	file:
query	base.h	/^	buffer *query;$/;"	m	struct:__anon27
query_str	mod_flv_streaming.c	/^	buffer *query_str;$/;"	m	struct:__anon130	file:
range_buf	mod_staticfile.c	/^	buffer *range_buf;$/;"	m	struct:__anon108	file:
range_requests	base.h	/^	unsigned short range_requests;$/;"	m	struct:__anon31
rb	mod_fastcgi.c	/^	chunkqueue *rb;				\/* read queue *\/$/;"	m	struct:__anon191	file:
rb	mod_scgi.c	/^	read_buffer *rb;$/;"	m	struct:__anon178	file:
read_buffer	buffer.h	/^} read_buffer;$/;"	t	typeref:struct:__anon90
read_fd	mod_rrdtool.c	/^	int read_fd, write_fd;$/;"	m	struct:__anon218	file:
read_idle_ts	base.h	/^	time_t read_idle_ts;$/;"	m	struct:__anon35
read_queue	base.h	/^	chunkqueue *read_queue;		\/* a small queue for low-level read ( HTTP$/;"	m	struct:__anon35
readme	mod_cml_lua.c	/^} readme;$/;"	t	typeref:struct:__anon211	file:
realm	keyvalue.h	/^	char *realm;$/;"	m	struct:__anon163
realpath_cache_type	base.h	/^} realpath_cache_type;$/;"	t	typeref:struct:__anon39
reconnects	mod_fastcgi.c	/^	int reconnects;				\/* number of reconnect attempts *\/$/;"	m	struct:__anon191	file:
reconnects	mod_scgi.c	/^	int reconnects;				\/* number of reconnect attempts *\/$/;"	m	struct:__anon178	file:
redirect	mod_redirect.c	/^	pcre_keyvalue_buffer *redirect;$/;"	m	struct:__anon98	file:
regex	array.h	/^	pcre *regex;$/;"	m	struct:_data_config
regex	mod_dirlisting.c	/^	pcre *regex;$/;"	m	struct:__anon82	file:
regex_study	array.h	/^	pcre_extra *regex_study;$/;"	m	struct:_data_config
rel_path	base.h	/^	buffer *rel_path;$/;"	m	struct:__anon28
rel_requests	mod_status.c	/^	double rel_requests;$/;"	m	struct:__anon75	file:
rel_traffic_out	mod_status.c	/^	double rel_traffic_out;$/;"	m	struct:__anon75	file:
remote_conn	mod_cgi.c	/^	connection *remote_conn;	\/* dumb pointer *\/$/;"	m	struct:__anon114	file:
remote_conn	mod_fastcgi.c	/^	connection *remote_conn;	\/* dumb pointer *\/$/;"	m	struct:__anon191	file:
remote_conn	mod_proxy.c	/^	connection *remote_conn;	\/* dump pointer *\/$/;"	m	struct:__anon105	file:
remote_conn	mod_scgi.c	/^	connection *remote_conn;	\/* dumb pointer *\/$/;"	m	struct:__anon178	file:
req	stat_cache.c	/^	FAMRequest *req;$/;"	m	struct:__anon133	file:
request	base.h	/^	buffer *request;$/;"	m	struct:__anon24
request	base.h	/^	request request;$/;"	m	struct:__anon35
request	base.h	/^} request;$/;"	t	typeref:struct:__anon24
requestIdB0	fastcgi.h	/^	unsigned char requestIdB0;$/;"	m	struct:__anon116
requestIdB1	fastcgi.h	/^	unsigned char requestIdB1;$/;"	m	struct:__anon116
request_check_hostname	request.c	/^static int request_check_hostname(server * srv, connection * con, buffer * host)$/;"	f	file:
request_content_queue	base.h	/^	chunkqueue *request_content_queue;	\/* takes request-content into$/;"	m	struct:__anon35
request_count	base.h	/^	size_t request_count;		\/* number of requests handled in this$/;"	m	struct:__anon35
request_handler	base.h	/^} request_handler;$/;"	t	typeref:struct:__anon21
request_header	mod_setenv.c	/^	array *request_header;$/;"	m	struct:__anon72	file:
request_id	mod_fastcgi.c	/^	size_t request_id;$/;"	m	struct:__anon191	file:
request_id	mod_fastcgi.c	/^	size_t request_id;$/;"	m	struct:__anon193	file:
request_id	mod_scgi.c	/^	size_t request_id;$/;"	m	struct:__anon178	file:
request_line	base.h	/^	buffer *request_line;$/;"	m	struct:__anon24
request_start	base.h	/^	time_t request_start;$/;"	m	struct:__anon35
request_uri	base.h	/^} request_uri;$/;"	t	typeref:struct:__anon27
request_uri_is_valid_char	request.c	/^int request_uri_is_valid_char(unsigned char c)$/;"	f
requests	mod_fastcgi.c	/^	size_t requests;			\/* see max_requests *\/$/;"	m	struct:fcgi_proc	file:
requests	mod_rrdtool.c	/^	double requests, *requests_ptr;$/;"	m	struct:__anon217	file:
requests	mod_scgi.c	/^	size_t requests;			\/* see max_requests *\/$/;"	m	struct:scgi_proc	file:
requests	mod_status.c	/^	double requests;$/;"	m	struct:__anon75	file:
requests_ptr	mod_rrdtool.c	/^	double requests, *requests_ptr;$/;"	m	struct:__anon217	file:
reserved	fastcgi.h	/^	unsigned char reserved;$/;"	m	struct:__anon116
reserved	fastcgi.h	/^	unsigned char reserved[3];$/;"	m	struct:__anon119
reserved	fastcgi.h	/^	unsigned char reserved[5];$/;"	m	struct:__anon117
reserved	fastcgi.h	/^	unsigned char reserved[7];$/;"	m	struct:__anon121
reset	fdevent.h	/^	int (*reset) (struct fdevents * ev);$/;"	m	struct:fdevents
resolve_conflict	lemon.c	/^static int resolve_conflict(apx, apy, errsym)$/;"	f	file:
resp	mod_rrdtool.c	/^	buffer *resp;$/;"	m	struct:__anon218	file:
response	base.h	/^	response response;$/;"	m	struct:__anon35
response	base.h	/^} response;$/;"	t	typeref:struct:__anon25
response	mod_cgi.c	/^	buffer *response;$/;"	m	struct:__anon114	file:
response	mod_proxy.c	/^	buffer *response;$/;"	m	struct:__anon105	file:
response	mod_scgi.c	/^	buffer *response;$/;"	m	struct:__anon178	file:
response_header	base.h	/^	buffer *response_header;$/;"	m	struct:server
response_header	mod_cgi.c	/^	buffer *response_header;$/;"	m	struct:__anon114	file:
response_header	mod_fastcgi.c	/^	buffer *response_header;$/;"	m	struct:__anon191	file:
response_header	mod_proxy.c	/^	buffer *response_header;$/;"	m	struct:__anon105	file:
response_header	mod_scgi.c	/^	buffer *response_header;$/;"	m	struct:__anon178	file:
response_header	mod_setenv.c	/^	array *response_header;$/;"	m	struct:__anon72	file:
response_header_insert	http-header-glue.c	/^response_header_insert(server * srv, connection * con, const char *key,$/;"	f
response_header_overwrite	http-header-glue.c	/^response_header_overwrite(server * srv, connection * con, const char *key,$/;"	f
response_len	mod_scgi.c	/^	size_t response_len;$/;"	m	struct:__anon178	file:
response_padding	mod_scgi.c	/^	int response_padding;$/;"	m	struct:__anon178	file:
response_range	base.h	/^	buffer *response_range;$/;"	m	struct:server
response_type	mod_scgi.c	/^	int response_type;$/;"	m	struct:__anon178	file:
result	base.h	/^	cond_result_t result;$/;"	m	struct:__anon34
revents	fdevent.h	/^	int revents;$/;"	m	struct:__anon5
rewrite	mod_rewrite.c	/^	rewrite_rule_buffer *rewrite;$/;"	m	struct:__anon125	file:
rewrite_rule	mod_rewrite.c	/^} rewrite_rule;$/;"	t	typeref:struct:__anon123	file:
rewrite_rule_buffer	mod_rewrite.c	/^} rewrite_rule_buffer;$/;"	t	typeref:struct:__anon124	file:
rewrite_rule_buffer_append	mod_rewrite.c	/^rewrite_rule_buffer_append(rewrite_rule_buffer * kvb, buffer * key,$/;"	f
rewrite_rule_buffer_free	mod_rewrite.c	/^void rewrite_rule_buffer_free(rewrite_rule_buffer * kvb)$/;"	f
rewrite_rule_buffer_init	mod_rewrite.c	/^rewrite_rule_buffer *rewrite_rule_buffer_init(void)$/;"	f
rhs	lemon.c	/^	struct symbol **rhs;		\/* The RHS symbols *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
rhs	lemon.c	/^	struct symbol *rhs[MAXRHS];	\/* RHS symbols *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
rhsalias	lemon.c	/^	char **rhsalias;			\/* An alias for each RHS symbol (NULL if none) *\/$/;"	m	struct:rule	file:
right	splaytree.h	/^	struct tree_node *left, *right; 	\/\/指向左右子结点$/;"	m	struct:tree_node	typeref:struct:tree_node::
roleB0	fastcgi.h	/^	unsigned char roleB0;$/;"	m	struct:__anon117
roleB1	fastcgi.h	/^	unsigned char roleB1;$/;"	m	struct:__anon117
rp	lemon.c	/^		struct rule *rp;		\/* The rule, if a reduce *\/$/;"	m	union:action::__anon200	typeref:struct:action::__anon200::rule	file:
rp	lemon.c	/^	struct rule *rp;			\/* The rule upon which the configuration is$/;"	m	struct:config	typeref:struct:config::rule	file:
rrdtool_pid	mod_rrdtool.c	/^	pid_t rrdtool_pid;$/;"	m	struct:__anon218	file:
rrdtool_running	mod_rrdtool.c	/^	int rrdtool_running;$/;"	m	struct:__anon218	file:
rule	lemon.c	/^	struct rule *rule;			\/* Linked list of rules of this (if an NT) *\/$/;"	m	struct:symbol	typeref:struct:symbol::rule	file:
rule	lemon.c	/^	struct rule *rule;			\/* List of all rules *\/$/;"	m	struct:lemon	typeref:struct:lemon::rule	file:
rule	lemon.c	/^struct rule {$/;"	s	file:
ruleline	lemon.c	/^	int ruleline;				\/* Line number for the rule *\/$/;"	m	struct:rule	file:
s_keyvalue	keyvalue.h	/^KVB(s_keyvalue);$/;"	v
s_keyvalue	keyvalue.h	/^} s_keyvalue;$/;"	t	typeref:struct:__anon160
s_keyvalue_buffer_append	keyvalue.c	/^s_keyvalue_buffer_append(s_keyvalue_buffer * kvb, const char *key,$/;"	f
s_keyvalue_buffer_free	keyvalue.c	/^void s_keyvalue_buffer_free(s_keyvalue_buffer * kvb)$/;"	f
s_keyvalue_buffer_init	keyvalue.c	/^s_keyvalue_buffer *s_keyvalue_buffer_init(void)$/;"	f
s_options	lemon.c	/^struct s_options {$/;"	s	file:
s_x1	lemon.c	/^struct s_x1 {$/;"	s	file:
s_x1node	lemon.c	/^typedef struct s_x1node {$/;"	s	file:
s_x2	lemon.c	/^struct s_x2 {$/;"	s	file:
s_x2node	lemon.c	/^typedef struct s_x2node {$/;"	s	file:
s_x3	lemon.c	/^struct s_x3 {$/;"	s	file:
s_x3node	lemon.c	/^typedef struct s_x3node {$/;"	s	file:
s_x4	lemon.c	/^struct s_x4 {$/;"	s	file:
s_x4node	lemon.c	/^typedef struct s_x4node {$/;"	s	file:
saved_remote_addr	mod_extforward.c	/^	sock_addr saved_remote_addr;$/;"	m	struct:__anon216	file:
saved_remote_addr_buf	mod_extforward.c	/^	buffer *saved_remote_addr_buf;$/;"	m	struct:__anon216	file:
scgi_check_extension	mod_scgi.c	/^scgi_check_extension(server * srv, connection * con, void *p_d,$/;"	f	file:
scgi_check_extension_1	mod_scgi.c	/^scgi_check_extension_1(server * srv, connection * con, void *p_d)$/;"	f	file:
scgi_check_extension_2	mod_scgi.c	/^scgi_check_extension_2(server * srv, connection * con, void *p_d)$/;"	f	file:
scgi_connection_cleanup	mod_scgi.c	/^void scgi_connection_cleanup(server * srv, handler_ctx * hctx)$/;"	f
scgi_connection_close	mod_scgi.c	/^static handler_t scgi_connection_close(server * srv, handler_ctx * hctx)$/;"	f	file:
scgi_connection_close_callback	mod_scgi.c	/^scgi_connection_close_callback(server * srv, connection * con, void *p_d)$/;"	f	file:
scgi_connection_reset	mod_scgi.c	/^scgi_connection_reset(server * srv, connection * con, void *p_d)$/;"	f	file:
scgi_connection_state_t	mod_scgi.c	/^} scgi_connection_state_t;$/;"	t	typeref:enum:__anon177	file:
scgi_create_env	mod_scgi.c	/^static int scgi_create_env(server * srv, handler_ctx * hctx)$/;"	f	file:
scgi_demux_response	mod_scgi.c	/^static int scgi_demux_response(server * srv, handler_ctx * hctx)$/;"	f	file:
scgi_env	mod_scgi.c	/^	buffer *scgi_env;$/;"	m	struct:__anon176	file:
scgi_env_add	mod_scgi.c	/^scgi_env_add(buffer * env, const char *key, size_t key_len,$/;"	f	file:
scgi_env_add_request_headers	mod_scgi.c	/^scgi_env_add_request_headers(server * srv, connection * con, plugin_data * p)$/;"	f	file:
scgi_establish_connection	mod_scgi.c	/^static int scgi_establish_connection(server * srv, handler_ctx * hctx)$/;"	f	file:
scgi_extension	mod_scgi.c	/^} scgi_extension;$/;"	t	typeref:struct:__anon172	file:
scgi_extension_host	mod_scgi.c	/^} scgi_extension_host;$/;"	t	typeref:struct:__anon171	file:
scgi_extension_insert	mod_scgi.c	/^scgi_extension_insert(scgi_exts * ext, buffer * key, scgi_extension_host * fh)$/;"	f
scgi_extensions_free	mod_scgi.c	/^void scgi_extensions_free(scgi_exts * f)$/;"	f
scgi_extensions_init	mod_scgi.c	/^scgi_exts *scgi_extensions_init()$/;"	f
scgi_exts	mod_scgi.c	/^} scgi_exts;$/;"	t	typeref:struct:__anon173	file:
scgi_handle_fdevent	mod_scgi.c	/^static handler_t scgi_handle_fdevent(void *s, void *ctx, int revents)$/;"	f	file:
scgi_host_free	mod_scgi.c	/^void scgi_host_free(scgi_extension_host * h)$/;"	f
scgi_host_init	mod_scgi.c	/^scgi_extension_host *scgi_host_init()$/;"	f
scgi_patch_connection	mod_scgi.c	/^scgi_patch_connection(server * srv, connection * con, plugin_data * p)$/;"	f	file:
scgi_proc	mod_scgi.c	/^typedef struct scgi_proc {$/;"	s	file:
scgi_proc	mod_scgi.c	/^} scgi_proc;$/;"	t	typeref:struct:scgi_proc	file:
scgi_process_free	mod_scgi.c	/^void scgi_process_free(scgi_proc * f)$/;"	f
scgi_process_init	mod_scgi.c	/^scgi_proc *scgi_process_init()$/;"	f
scgi_proclist_sort_down	mod_scgi.c	/^scgi_proclist_sort_down(server * srv, scgi_extension_host * host,$/;"	f
scgi_proclist_sort_up	mod_scgi.c	/^scgi_proclist_sort_up(server * srv, scgi_extension_host * host,$/;"	f
scgi_reconnect	mod_scgi.c	/^static int scgi_reconnect(server * srv, handler_ctx * hctx)$/;"	f	file:
scgi_response_parse	mod_scgi.c	/^scgi_response_parse(server * srv, connection * con, plugin_data * p,$/;"	f	file:
scgi_restart_dead_procs	mod_scgi.c	/^scgi_restart_dead_procs(server * srv, plugin_data * p,$/;"	f	file:
scgi_set_state	mod_scgi.c	/^scgi_set_state(server * srv, handler_ctx * hctx, scgi_connection_state_t state)$/;"	f	file:
scgi_spawn_connection	mod_scgi.c	/^scgi_spawn_connection(server * srv,$/;"	f	file:
scgi_write_request	mod_scgi.c	/^static handler_t scgi_write_request(server * srv, handler_ctx * hctx)$/;"	f	file:
scheme	base.h	/^	buffer *scheme;$/;"	m	struct:__anon27
scope	base.h	/^	config_scope_type_t scope;$/;"	m	struct:__anon19
script	mod_magnet_cache.h	/^} script;$/;"	t	typeref:struct:__anon155
script_cache	mod_magnet_cache.h	/^} script_cache;$/;"	t	typeref:struct:__anon156
script_cache_free	mod_magnet_cache.c	/^void script_cache_free(script_cache * p)$/;"	f
script_cache_get_script	mod_magnet_cache.c	/^lua_State *script_cache_get_script(server * srv, connection * con,$/;"	f
script_cache_init	mod_magnet_cache.c	/^script_cache *script_cache_init()$/;"	f
script_free	mod_magnet_cache.c	/^void script_free(script * sc)$/;"	f
script_init	mod_magnet_cache.c	/^script *script_init()$/;"	f
secret	mod_secure_download.c	/^	buffer *secret;$/;"	m	struct:__anon15	file:
select_error	fdevent.h	/^	fd_set select_error;$/;"	m	struct:fdevents
select_max_fd	fdevent.h	/^	int select_max_fd;$/;"	m	struct:fdevents
select_read	fdevent.h	/^	fd_set select_read;$/;"	m	struct:fdevents
select_set_error	fdevent.h	/^	fd_set select_set_error;$/;"	m	struct:fdevents
select_set_read	fdevent.h	/^	fd_set select_set_read;$/;"	m	struct:fdevents
select_set_write	fdevent.h	/^	fd_set select_set_write;$/;"	m	struct:fdevents
select_write	fdevent.h	/^	fd_set select_write;$/;"	m	struct:fdevents
send_content_body	mod_fastcgi.c	/^	int send_content_body;$/;"	m	struct:__anon191	file:
server	base.h	/^typedef struct server {$/;"	s
server	base.h	/^} server;$/;"	t	typeref:struct:server
server_config	base.h	/^} server_config;$/;"	t	typeref:struct:__anon42
server_free	server.c	/^static void server_free(server * srv)$/;"	f	file:
server_init	server.c	/^static server *server_init(void)$/;"	f	file:
server_name	base.h	/^	buffer *server_name;$/;"	m	struct:__anon31
server_name	base.h	/^	buffer *server_name;$/;"	m	struct:__anon35
server_name	mod_mysql_vhost.c	/^	buffer *server_name;$/;"	m	struct:__anon166	file:
server_root	mod_simple_vhost.c	/^	buffer *server_root;$/;"	m	struct:__anon49	file:
server_socket	base.h	/^} server_socket;$/;"	t	typeref:struct:__anon44
server_socket_array	base.h	/^} server_socket_array;$/;"	t	typeref:struct:__anon45
server_tag	base.h	/^	buffer *server_tag;$/;"	m	struct:__anon31
set_defaults	plugin.h	/^	 handler_t(*set_defaults) (server * srv, void *p_d);$/;"	m	struct:__anon79
set_footer	mod_dirlisting.c	/^	buffer *set_footer;$/;"	m	struct:__anon84	file:
show_features	server.c	/^static void show_features(void)$/;"	f	file:
show_header	mod_dirlisting.c	/^	unsigned short show_header;$/;"	m	struct:__anon84	file:
show_help	server.c	/^static void show_help(void)$/;"	f	file:
show_help	spawn-fcgi.c	/^void show_help()$/;"	f
show_readme	mod_dirlisting.c	/^	unsigned short show_readme;$/;"	m	struct:__anon84	file:
show_version	server.c	/^static void show_version(void)$/;"	f	file:
show_version	spawn-fcgi.c	/^void show_version()$/;"	f
sigaction_handler	lighttpd-angel.c	/^static void sigaction_handler(int sig, siginfo_t * si, void *context)$/;"	f	file:
sigaction_handler	server.c	/^static void sigaction_handler(int sig, siginfo_t * si, void *context)$/;"	f	file:
sigbset	fdevent.h	/^	bitset *sigbset;$/;"	m	struct:fdevents
siginfo	fdevent.h	/^	siginfo_t siginfo;$/;"	m	struct:fdevents
signal_handler	server.c	/^static void signal_handler(int sig)$/;"	f	file:
signum	fdevent.h	/^	int signum;$/;"	m	struct:fdevents
sigset	fdevent.h	/^	sigset_t sigset;$/;"	m	struct:fdevents
size	array.h	/^	size_t size;$/;"	m	struct:__anon147
size	base.h	/^	size_t size;$/;"	m	struct:__anon36
size	base.h	/^	size_t size;$/;"	m	struct:__anon41
size	base.h	/^	size_t size;$/;"	m	struct:__anon45
size	buffer.h	/^	size_t size; 	\/\/buffer数组的大小$/;"	m	struct:__anon89
size	buffer.h	/^	size_t size; 	\/\/buffer的长度$/;"	m	struct:__anon88
size	buffer.h	/^	size_t size;$/;"	m	struct:__anon90
size	configfile.c	/^	size_t size;$/;"	m	struct:__anon204	file:
size	fdevent.h	/^	size_t size;$/;"	m	struct:__anon6
size	fdevent.h	/^	size_t size;$/;"	m	struct:__anon7
size	fdevent.h	/^	size_t size;$/;"	m	struct:fdevents
size	lemon.c	/^	int size;					\/* The number of available slots. *\/$/;"	m	struct:s_x1	file:
size	lemon.c	/^	int size;					\/* The number of available slots. *\/$/;"	m	struct:s_x2	file:
size	lemon.c	/^	int size;					\/* The number of available slots. *\/$/;"	m	struct:s_x3	file:
size	lemon.c	/^	int size;					\/* The number of available slots. *\/$/;"	m	struct:s_x4	file:
size	mod_accesslog.c	/^	size_t size;$/;"	m	struct:__anon68	file:
size	mod_cgi.c	/^	size_t size;$/;"	m	struct:__anon110	file:
size	mod_cgi.c	/^	size_t size;$/;"	m	struct:__anon111	file:
size	mod_dirlisting.c	/^	off_t size;$/;"	m	struct:__anon86	file:
size	mod_dirlisting.c	/^	size_t size;$/;"	m	struct:__anon83	file:
size	mod_dirlisting.c	/^	size_t size;$/;"	m	struct:__anon87	file:
size	mod_fastcgi.c	/^	size_t size;$/;"	m	struct:__anon184	file:
size	mod_fastcgi.c	/^	size_t size;$/;"	m	struct:__anon185	file:
size	mod_fastcgi.c	/^	size_t size;$/;"	m	struct:__anon187	file:
size	mod_fastcgi.c	/^	size_t size;$/;"	m	struct:__anon188	file:
size	mod_magnet_cache.h	/^	size_t size;$/;"	m	struct:__anon156
size	mod_rewrite.c	/^	size_t size;$/;"	m	struct:__anon124	file:
size	mod_scgi.c	/^	size_t size;$/;"	m	struct:__anon172	file:
size	mod_scgi.c	/^	size_t size;$/;"	m	struct:__anon173	file:
size	mod_scgi.c	/^	size_t size;$/;"	m	struct:__anon175	file:
size	mod_ssi_expr.c	/^	size_t size;$/;"	m	struct:__anon2	file:
size	mod_webdav.c	/^	size_t size;$/;"	m	struct:__anon54	file:
size	splaytree.h	/^	int size;$/;"	m	struct:tree_node
size	stat_cache.c	/^	size_t size;$/;"	m	struct:__anon134	file:
size	stream.h	/^	off_t size;$/;"	m	struct:__anon106
sizefmt	mod_ssi.h	/^	int sizefmt;$/;"	m	struct:__anon168
sock_addr	base.h	/^} sock_addr;$/;"	t	typeref:union:__anon23
sock_addr_get_port	configfile-glue.c	/^unsigned short sock_addr_get_port(sock_addr * addr)$/;"	f
socket	mod_scgi.c	/^	buffer *socket;				\/* config.socket + "-" + id *\/$/;"	m	struct:scgi_proc	file:
sockets_disabled	base.h	/^	int sockets_disabled;$/;"	m	struct:server
socklen_t	base.h	/^typedef int socklen_t;$/;"	t
socklen_t	spawn-fcgi.c	/^typedef int socklen_t;$/;"	t	file:
sort	mod_status.c	/^	int sort;$/;"	m	struct:__anon74	file:
sorted	array.h	/^	size_t *sorted;$/;"	m	struct:__anon147
sorted	lemon.c	/^	struct state **sorted;		\/* Table of states sorted by state number *\/$/;"	m	struct:lemon	typeref:struct:lemon::state	file:
source	configfile.c	/^	const buffer *source;$/;"	m	struct:__anon204	file:
sp	lemon.c	/^	struct symbol *sp;			\/* The look-ahead symbol *\/$/;"	m	struct:action	typeref:struct:action::symbol	file:
specific_config	base.h	/^} specific_config;$/;"	t	typeref:struct:__anon31
splay_tree	splaytree.h	/^} splay_tree;$/;"	t	typeref:struct:tree_node
splaytree_delete	splaytree.c	/^splay_tree *splaytree_delete(splay_tree * t, int i)$/;"	f
splaytree_insert	splaytree.c	/^splay_tree *splaytree_insert(splay_tree * t, int i, void *data)$/;"	f
splaytree_size	splaytree.h	42;"	d
splaytree_splay	splaytree.c	/^splay_tree *splaytree_splay(splay_tree * t, int i)$/;"	f
split_get_params	mod_flv_streaming.c	/^static int split_get_params(array * get_params, buffer * qrystr)$/;"	f	file:
split_vals	base.h	/^	array *split_vals;$/;"	m	struct:server
sql	mod_webdav.c	/^	sqlite3 *sql;$/;"	m	struct:__anon51	file:
sqlite_db_name	mod_webdav.c	/^	buffer *sqlite_db_name;$/;"	m	struct:__anon51	file:
srv	configfile.h	/^	server *srv;$/;"	m	struct:__anon194
srv	mod_ssi_expr.h	/^	void *srv;$/;"	m	struct:__anon96
srv_shutdown	server.c	/^static volatile sig_atomic_t srv_shutdown = 0;$/;"	v	file:
srv_socket	base.h	/^	void *srv_socket;			\/* reference to the server-socket (typecast to$/;"	m	struct:__anon35
srv_sockets	base.h	/^	server_socket_array srv_sockets;$/;"	m	struct:server
srv_token	base.h	/^	buffer *srv_token;$/;"	m	struct:__anon44
srvconf	base.h	/^	server_config srvconf;$/;"	m	struct:server
ssi_cgi_env	mod_ssi.h	/^	array *ssi_cgi_env;$/;"	m	struct:__anon168
ssi_ctx_t	mod_ssi_expr.h	/^} ssi_ctx_t;$/;"	t	typeref:struct:__anon96
ssi_env_add	mod_ssi.c	/^int ssi_env_add(array * env, const char *key, const char *val)$/;"	f
ssi_env_add_request_headers	mod_ssi.c	/^ssi_env_add_request_headers(server * srv, connection * con, plugin_data * p)$/;"	f	file:
ssi_eval_expr	mod_ssi_expr.c	/^ssi_eval_expr(server * srv, connection * con, plugin_data * p, const char *expr)$/;"	f
ssi_expr_cond	mod_ssi_expr.h	/^} ssi_expr_cond;$/;"	t	typeref:enum:__anon97
ssi_expr_tokenizer	mod_ssi_expr.c	/^ssi_expr_tokenizer(server * srv, connection * con, plugin_data * p,$/;"	f	file:
ssi_extension	mod_ssi.h	/^	array *ssi_extension;$/;"	m	struct:__anon167
ssi_regex	mod_ssi.h	/^	pcre *ssi_regex;$/;"	m	struct:__anon168
ssi_tokenizer_t	mod_ssi_expr.c	/^} ssi_tokenizer_t;$/;"	t	typeref:struct:__anon2	file:
ssi_val_free	mod_ssi_expr.c	/^void ssi_val_free(ssi_val_t * s)$/;"	f
ssi_val_init	mod_ssi_expr.c	/^ssi_val_t *ssi_val_init()$/;"	f
ssi_val_t	mod_ssi_expr.h	/^} ssi_val_t;$/;"	t	typeref:struct:__anon94
ssi_val_tobool	mod_ssi_expr.c	/^int ssi_val_tobool(ssi_val_t * B)$/;"	f
ssi_vars	mod_ssi.h	/^	array *ssi_vars;$/;"	m	struct:__anon168
ssiexprparser	mod_ssi_exprparser.c	/^void ssiexprparser(void *yyp,	\/* The parser *\/$/;"	f
ssiexprparserARG_FETCH	mod_ssi_exprparser.c	81;"	d	file:
ssiexprparserARG_PDECL	mod_ssi_exprparser.c	80;"	d	file:
ssiexprparserARG_SDECL	mod_ssi_exprparser.c	79;"	d	file:
ssiexprparserARG_STORE	mod_ssi_exprparser.c	82;"	d	file:
ssiexprparserAlloc	mod_ssi_exprparser.c	/^void *ssiexprparserAlloc(void *(*mallocProc) (size_t))$/;"	f
ssiexprparserFree	mod_ssi_exprparser.c	/^void ssiexprparserFree(void *p,	\/* The parser to be deleted *\/$/;"	f
ssiexprparserTOKENTYPE	mod_ssi_exprparser.c	70;"	d	file:
ssiexprparserTokenName	mod_ssi_exprparser.c	/^const char *ssiexprparserTokenName(int tokenType)$/;"	f
ssiexprparserTrace	mod_ssi_exprparser.c	/^void ssiexprparserTrace(FILE * TraceFILE, char *zTracePrompt)$/;"	f
ssl	base.h	/^	SSL *ssl;$/;"	m	struct:__anon35
ssl_ca_file	base.h	/^	buffer *ssl_ca_file;$/;"	m	struct:__anon31
ssl_ca_file	base.h	/^	buffer *ssl_ca_file;$/;"	m	struct:__anon44
ssl_cipher_list	base.h	/^	buffer *ssl_cipher_list;$/;"	m	struct:__anon31
ssl_cipher_list	base.h	/^	buffer *ssl_cipher_list;$/;"	m	struct:__anon44
ssl_ctx	base.h	/^	SSL_CTX *ssl_ctx;$/;"	m	struct:__anon31
ssl_ctx	base.h	/^	SSL_CTX *ssl_ctx;$/;"	m	struct:__anon44
ssl_error_want_reuse_buffer	base.h	/^	buffer *ssl_error_want_reuse_buffer;$/;"	m	struct:__anon35
ssl_is_init	base.h	/^	int ssl_is_init;$/;"	m	struct:server
ssl_pemfile	base.h	/^	buffer *ssl_pemfile;$/;"	m	struct:__anon31
ssl_pemfile	base.h	/^	buffer *ssl_pemfile;$/;"	m	struct:__anon44
ssl_use_sslv2	base.h	/^	unsigned short ssl_use_sslv2;$/;"	m	struct:__anon31
ssl_use_sslv2	base.h	/^	unsigned short ssl_use_sslv2;$/;"	m	struct:__anon44
st	base.h	/^	struct stat st; 	\/\/文件的状态结构体$/;"	m	struct:__anon29	typeref:struct:__anon29::stat
st	mod_cml_lua.c	/^	stream st;$/;"	m	struct:__anon211	file:
stacksize	lemon.c	/^	char *stacksize;			\/* Size of the parser stack *\/$/;"	m	struct:lemon	file:
start	chunk.h	/^			char *start;		\/* the start pointer of the mmap'ed area *\/$/;"	m	struct:chunk::__anon9::__anon10
start	chunk.h	/^		off_t start;			\/* starting offset in the file *\/$/;"	m	struct:chunk::__anon9
start	lemon.c	/^	char *start;				\/* Name of the start symbol for the grammar *\/$/;"	m	struct:lemon	file:
start	stream.h	/^	char *start;$/;"	m	struct:__anon106
start_process	lighttpd-angel.c	/^static volatile sig_atomic_t start_process = 1;$/;"	v	file:
start_tv	base.h	/^	struct timeval start_tv;$/;"	m	struct:__anon35	typeref:struct:__anon35::timeval
startup_ts	base.h	/^	time_t startup_ts;$/;"	m	struct:server
stat_cache	base.h	/^	stat_cache *stat_cache;$/;"	m	struct:server
stat_cache	base.h	/^} stat_cache;$/;"	t	typeref:struct:__anon30
stat_cache_attr_get	stat_cache.c	/^static int stat_cache_attr_get(buffer * buf, char *name)$/;"	f	file:
stat_cache_engine	base.h	/^	} stat_cache_engine;$/;"	m	struct:__anon42	typeref:enum:__anon42::__anon43
stat_cache_entry	base.h	/^} stat_cache_entry;$/;"	t	typeref:struct:__anon29
stat_cache_entry_free	stat_cache.c	/^static void stat_cache_entry_free(void *data)$/;"	f	file:
stat_cache_entry_init	stat_cache.c	/^static stat_cache_entry *stat_cache_entry_init(void)$/;"	f	file:
stat_cache_free	stat_cache.c	/^void stat_cache_free(stat_cache * sc)$/;"	f
stat_cache_get_entry	stat_cache.c	/^stat_cache_get_entry(server * srv, connection * con, buffer * name,$/;"	f
stat_cache_handle_fdevent	stat_cache.c	/^handler_t stat_cache_handle_fdevent(void *_srv, void *_fce, int revent)$/;"	f
stat_cache_init	stat_cache.c	/^stat_cache *stat_cache_init(void)$/;"	f
stat_cache_lstat	stat_cache.c	/^static int stat_cache_lstat(server * srv, buffer * dname, struct stat *lst)$/;"	f	file:
stat_cache_tag_old_entries	stat_cache.c	/^stat_cache_tag_old_entries(server * srv, splay_tree * t, int *keys,$/;"	f	file:
stat_cache_trigger_cleanup	stat_cache.c	/^int stat_cache_trigger_cleanup(server * srv)$/;"	f
stat_fn	mod_ssi.h	/^	buffer *stat_fn;$/;"	m	struct:__anon168
stat_ts	base.h	/^	time_t stat_ts; 	\/\/结构体的时间$/;"	m	struct:__anon29
state	base.h	/^	connection_state_t state;$/;"	m	struct:__anon35
state	lemon.c	/^	} state;					\/* The state of the parser *\/$/;"	m	struct:pstate	typeref:enum:pstate::e_state	file:
state	lemon.c	/^struct state {$/;"	s	file:
state	md5.h	/^	UINT4 state[4];				\/* state (ABCD) *\/$/;"	m	struct:__anon135
state	mod_fastcgi.c	/^	fcgi_connection_state_t state;$/;"	m	struct:__anon191	file:
state	mod_fastcgi.c	/^	} state;$/;"	m	struct:fcgi_proc	typeref:enum:fcgi_proc::__anon182	file:
state	mod_proxy.c	/^	proxy_connection_state_t state;$/;"	m	struct:__anon105	file:
state	mod_rewrite.c	/^	enum { REWRITE_STATE_UNSET, REWRITE_STATE_FINISHED } state;$/;"	m	struct:__anon126	typeref:enum:__anon126::__anon127	file:
state	mod_scgi.c	/^	scgi_connection_state_t state;$/;"	m	struct:__anon178	file:
state	mod_scgi.c	/^	} state;$/;"	m	struct:scgi_proc	typeref:enum:scgi_proc::__anon170	file:
state_timestamp	mod_fastcgi.c	/^	time_t state_timestamp;$/;"	m	struct:__anon191	file:
state_timestamp	mod_proxy.c	/^	time_t state_timestamp;$/;"	m	struct:__anon105	file:
state_timestamp	mod_scgi.c	/^	time_t state_timestamp;$/;"	m	struct:__anon178	file:
statecmp	lemon.c	/^PRIVATE int statecmp(a, b)$/;"	f
statehash	lemon.c	/^PRIVATE int statehash(a)$/;"	f
stateno	configparser.c	/^	int stateno;				\/* The state-number *\/$/;"	m	struct:yyStackEntry	file:
stateno	lempar.c	/^	int stateno;				\/* The state-number *\/$/;"	m	struct:yyStackEntry	file:
stateno	mod_ssi_exprparser.c	/^	int stateno;				\/* The state-number *\/$/;"	m	struct:yyStackEntry	file:
statistics_url	mod_status.c	/^	buffer *statistics_url;$/;"	m	struct:__anon74	file:
status	base.h	/^	array *status;$/;"	m	struct:server
status	lemon.c	/^	} status;$/;"	m	struct:config	typeref:enum:config::__anon199	file:
status_counter_dec	status_counter.c	/^int status_counter_dec(server * srv, const char *s, size_t len)$/;"	f
status_counter_get_counter	status_counter.c	/^data_integer *status_counter_get_counter(server * srv, const char *s,$/;"	f
status_counter_inc	status_counter.c	/^int status_counter_inc(server * srv, const char *s, size_t len)$/;"	f
status_counter_set	status_counter.c	/^int status_counter_set(server * srv, const char *s, size_t len, int val)$/;"	f
status_url	mod_status.c	/^	buffer *status_url;$/;"	m	struct:__anon74	file:
statuskey	mod_fastcgi.c	/^	buffer *statuskey;$/;"	m	struct:__anon189	file:
stmt_copy_uri	mod_webdav.c	/^	sqlite3_stmt *stmt_copy_uri;$/;"	m	struct:__anon51	file:
stmt_create_lock	mod_webdav.c	/^	sqlite3_stmt *stmt_create_lock;$/;"	m	struct:__anon51	file:
stmt_delete_prop	mod_webdav.c	/^	sqlite3_stmt *stmt_delete_prop;$/;"	m	struct:__anon51	file:
stmt_delete_uri	mod_webdav.c	/^	sqlite3_stmt *stmt_delete_uri;$/;"	m	struct:__anon51	file:
stmt_move_uri	mod_webdav.c	/^	sqlite3_stmt *stmt_move_uri;$/;"	m	struct:__anon51	file:
stmt_read_lock	mod_webdav.c	/^	sqlite3_stmt *stmt_read_lock;$/;"	m	struct:__anon51	file:
stmt_read_lock_by_uri	mod_webdav.c	/^	sqlite3_stmt *stmt_read_lock_by_uri;$/;"	m	struct:__anon51	file:
stmt_refresh_lock	mod_webdav.c	/^	sqlite3_stmt *stmt_refresh_lock;$/;"	m	struct:__anon51	file:
stmt_remove_lock	mod_webdav.c	/^	sqlite3_stmt *stmt_remove_lock;$/;"	m	struct:__anon51	file:
stmt_select_prop	mod_webdav.c	/^	sqlite3_stmt *stmt_select_prop;$/;"	m	struct:__anon51	file:
stmt_select_propnames	mod_webdav.c	/^	sqlite3_stmt *stmt_select_propnames;$/;"	m	struct:__anon51	file:
stmt_update_prop	mod_webdav.c	/^	sqlite3_stmt *stmt_update_prop;$/;"	m	struct:__anon51	file:
stp	lemon.c	/^		struct state *stp;		\/* The new state, if a shift *\/$/;"	m	union:action::__anon200	typeref:struct:action::__anon200::state	file:
stp	lemon.c	/^	struct state *stp;			\/* A pointer to a state *\/$/;"	m	struct:axset	typeref:struct:axset::state	file:
stp	lemon.c	/^	struct state *stp;			\/* Pointer to state which contains this *\/$/;"	m	struct:config	typeref:struct:config::state	file:
str	base.h	/^	buffer *str;				\/* a buffer for the string represenation *\/$/;"	m	struct:__anon40
str	mod_ssi_expr.h	/^	buffer *str;$/;"	m	struct:__anon94
stream	stream.h	/^} stream;$/;"	t	typeref:struct:__anon106
stream_close	stream.c	/^int stream_close(stream * f)$/;"	f
stream_open	stream.c	/^int stream_open(stream * f, buffer * fn)$/;"	f
strftime_cache_get	http-header-glue.c	/^buffer *strftime_cache_get(server * srv, time_t last_mod)$/;"	f
strhash	lemon.c	/^PRIVATE int strhash(x)$/;"	f
string	array.h	/^	buffer *string;$/;"	m	struct:_data_config
string	mod_accesslog.c	/^	buffer *string;$/;"	m	struct:__anon66	file:
string	mod_dirlisting.c	/^	buffer *string;$/;"	m	struct:__anon82	file:
strip_request_uri	mod_fastcgi.c	/^	buffer *strip_request_uri;$/;"	m	struct:__anon183	file:
symbol	lemon.c	/^struct symbol {$/;"	s	file:
symbols	lemon.c	/^	struct symbol **symbols;	\/* Sorted array of pointers to symbols *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
tablesize	lemon.c	/^	int tablesize;				\/* Size of the parse tables *\/$/;"	m	struct:lemon	file:
tbl	lemon.c	/^	struct s_x1node *tbl;		\/* The data stored here *\/$/;"	m	struct:s_x1	typeref:struct:s_x1::s_x1node	file:
tbl	lemon.c	/^	struct s_x2node *tbl;		\/* The data stored here *\/$/;"	m	struct:s_x2	typeref:struct:s_x2::s_x2node	file:
tbl	lemon.c	/^	struct s_x3node *tbl;		\/* The data stored here *\/$/;"	m	struct:s_x3	typeref:struct:s_x3::s_x3node	file:
tbl	lemon.c	/^	struct s_x4node *tbl;		\/* The data stored here *\/$/;"	m	struct:s_x4	typeref:struct:s_x4::s_x4node	file:
temp_path	mod_userdir.c	/^	buffer *temp_path;$/;"	m	struct:__anon208	file:
tempdirs	chunk.h	/^	array *tempdirs;$/;"	m	struct:__anon11
timefmt	mod_ssi.h	/^	buffer *timefmt;$/;"	m	struct:__anon168
timeout	mod_secure_download.c	/^	unsigned short timeout;$/;"	m	struct:__anon15	file:
tmp_buf	base.h	/^	buffer *tmp_buf;$/;"	m	struct:server
tmp_buf	http_auth.h	/^	buffer *tmp_buf;$/;"	m	struct:__anon78
tmp_buf	mod_cgi.c	/^	buffer *tmp_buf;$/;"	m	struct:__anon113	file:
tmp_buf	mod_dirlisting.c	/^	buffer *tmp_buf;$/;"	m	struct:__anon85	file:
tmp_buf	mod_evhost.c	/^	buffer *tmp_buf;$/;"	m	struct:__anon138	file:
tmp_buf	mod_indexfile.c	/^	buffer *tmp_buf;$/;"	m	struct:__anon206	file:
tmp_buf	mod_mysql_vhost.c	/^	buffer *tmp_buf;$/;"	m	struct:__anon165	file:
tmp_buf	mod_trigger_b4_dl.c	/^	buffer *tmp_buf;$/;"	m	struct:__anon63	file:
tmp_buf	mod_webdav.c	/^	buffer *tmp_buf;$/;"	m	struct:__anon52	file:
tmp_chunk_len	base.h	/^	buffer *tmp_chunk_len;$/;"	m	struct:server
tmplname	lemon.c	/^	char *tmplname;				\/* Name of the template file *\/$/;"	m	struct:lemon	file:
to64	http_auth.c	/^static void to64(char *s, unsigned long v, int n)$/;"	f	file:
tokendest	lemon.c	/^	char *tokendest;			\/* Code to execute to destroy token data *\/$/;"	m	struct:lemon	file:
tokendestln	lemon.c	/^	int tokendestln;			\/* Line number for token destroyer code *\/$/;"	m	struct:lemon	file:
tokenizer_init	configfile.c	/^tokenizer_init(tokenizer_t * t, const buffer * source, const char *input,$/;"	f	file:
tokenizer_t	configfile.c	/^} tokenizer_t;$/;"	t	typeref:struct:__anon204	file:
tokenlineno	lemon.c	/^	int tokenlineno;			\/* Linenumber at which current token starts $/;"	m	struct:pstate	file:
tokenprefix	lemon.c	/^	char *tokenprefix;			\/* A prefix added to token names in the .h$/;"	m	struct:lemon	file:
tokenstart	lemon.c	/^	char *tokenstart;			\/* Text of current token *\/$/;"	m	struct:pstate	file:
tokentype	lemon.c	/^	char *tokentype;			\/* Type of terminal symbols in the parser stack $/;"	m	struct:lemon	file:
tplt_open	lemon.c	/^PRIVATE FILE *tplt_open(lemp)$/;"	f
tplt_print	lemon.c	/^PRIVATE void tplt_print(out, lemp, str, strln, lineno)$/;"	f
tplt_xfer	lemon.c	/^PRIVATE void tplt_xfer(name, in, out, lineno)$/;"	f
traffic_limit_reached	base.h	/^	int traffic_limit_reached;$/;"	m	struct:__anon35
traffic_out	mod_status.c	/^	double traffic_out;$/;"	m	struct:__anon75	file:
transfer_encoding	base.h	/^	} transfer_encoding;$/;"	m	struct:__anon25	typeref:enum:__anon25::__anon26
tree_node	splaytree.h	/^typedef struct tree_node $/;"	s
trigger_handler	mod_cml.h	/^	buffer *trigger_handler;$/;"	m	struct:__anon61
trigger_regex	mod_trigger_b4_dl.c	/^	pcre *trigger_regex;$/;"	m	struct:__anon62	file:
trigger_timeout	mod_trigger_b4_dl.c	/^	unsigned short trigger_timeout;$/;"	m	struct:__anon62	file:
trigger_url	mod_trigger_b4_dl.c	/^	buffer *trigger_url;$/;"	m	struct:__anon62	file:
ts	base.h	/^	time_t ts;$/;"	m	struct:__anon37
ts_accesslog_str	mod_accesslog.c	/^	buffer *ts_accesslog_str;$/;"	m	struct:__anon69	file:
ts_date_str	base.h	/^	buffer *ts_date_str;$/;"	m	struct:server
ts_debug_str	base.h	/^	buffer *ts_debug_str;$/;"	m	struct:server
two_strings	server.h	/^} two_strings;$/;"	t	typeref:struct:__anon47
type	base.h	/^	config_values_type_t type;$/;"	m	struct:__anon19
type	base.h	/^	connection_type type;$/;"	m	struct:__anon21
type	chunk.h	/^	enum { UNUSED_CHUNK, MEM_CHUNK, FILE_CHUNK } type;$/;"	m	struct:chunk	typeref:enum:chunk::__anon8
type	fastcgi.h	/^	unsigned char type;$/;"	m	struct:__anon116
type	fastcgi.h	/^	unsigned char type;$/;"	m	struct:__anon121
type	fdevent.h	/^	fdevent_handler_t type;$/;"	m	struct:fdevents
type	keyvalue.h	/^	httpauth_type type;$/;"	m	struct:__anon163
type	lemon.c	/^	} type;						\/* Symbols are all either TERMINALS or NTs *\/$/;"	m	struct:symbol	typeref:enum:symbol::__anon198	file:
type	lemon.c	/^	} type;$/;"	m	struct:action	typeref:enum:action::e_action	file:
type	lemon.c	/^	} type;$/;"	m	struct:s_options	typeref:enum:s_options::__anon196	file:
type	mod_accesslog.c	/^	enum { FIELD_UNSET, FIELD_STRING, FIELD_FORMAT } type;$/;"	m	struct:__anon66	typeref:enum:__anon66::__anon67	file:
type	mod_accesslog.c	/^	} type;$/;"	m	struct:__anon64	typeref:enum:__anon64::__anon65	file:
type	mod_fastcgi.c	/^	int type;$/;"	m	struct:__anon193	file:
type	mod_magnet.c	/^	} type;$/;"	m	struct:__anon141	typeref:enum:__anon141::__anon142	file:
type	mod_ssi_expr.h	/^	enum { SSI_TYPE_UNSET, SSI_TYPE_BOOL, SSI_TYPE_STRING } type;$/;"	m	struct:__anon94	typeref:enum:__anon94::__anon95
uid	base.h	/^	uid_t uid;$/;"	m	struct:server
uint32_t	base.h	78;"	d
un	base.h	/^	struct sockaddr_un un;$/;"	m	union:__anon23	typeref:struct:__anon23::sockaddr_un
unique_ndx	array.h	/^	size_t unique_ndx;$/;"	m	struct:__anon147
unixsocket	mod_fastcgi.c	/^	buffer *unixsocket;			\/* config.socket + "-" + id *\/$/;"	m	struct:fcgi_proc	file:
unixsocket	mod_fastcgi.c	/^	buffer *unixsocket;$/;"	m	struct:__anon183	file:
unixsocket	mod_scgi.c	/^	buffer *unixsocket;$/;"	m	struct:__anon171	file:
unused	chunk.h	/^	chunk *unused;$/;"	m	struct:__anon11
unused	fdevent.h	/^	buffer_int unused;$/;"	m	struct:fdevents
unused_chunks	chunk.h	/^	size_t unused_chunks;$/;"	m	struct:__anon11
unused_procs	mod_fastcgi.c	/^	fcgi_proc *unused_procs;$/;"	m	struct:__anon183	file:
unused_procs	mod_scgi.c	/^	scgi_proc *unused_procs;$/;"	m	struct:__anon171	file:
upload_tempdirs	base.h	/^	array *upload_tempdirs;$/;"	m	struct:__anon42
uri	base.h	/^	buffer *uri;$/;"	m	struct:__anon24
uri	base.h	/^	buffer *uri;$/;"	m	struct:__anon39
uri	base.h	/^	request_uri uri;$/;"	m	struct:__anon35
uri	mod_webdav.c	/^	request_uri uri;$/;"	m	struct:__anon52	file:
uri_prefix	mod_secure_download.c	/^	buffer *uri_prefix;$/;"	m	struct:__anon15	file:
url_raw	mod_magnet.c	/^	array *url_raw;$/;"	m	struct:__anon139	file:
usage	array.h	/^	int usage;					\/* fair-balancing needs the no. of connections$/;"	m	struct:__anon154
use_ipv6	base.h	/^	unsigned short use_ipv6;$/;"	m	struct:__anon31
use_ipv6	base.h	/^	unsigned short use_ipv6;$/;"	m	struct:__anon44
use_syslog	mod_accesslog.c	/^	unsigned short use_syslog;$/;"	m	struct:__anon69	file:
use_xattr	base.h	/^	unsigned short use_xattr;$/;"	m	struct:__anon31
used	array.h	/^	size_t used;$/;"	m	struct:__anon147
used	base.h	/^	int used;$/;"	m	struct:__anon22
used	base.h	/^	size_t used;$/;"	m	struct:__anon36
used	base.h	/^	size_t used;$/;"	m	struct:__anon41
used	base.h	/^	size_t used;$/;"	m	struct:__anon45
used	buffer.h	/^	size_t used;				\/* output-pointer *\/$/;"	m	struct:__anon90
used	buffer.h	/^	size_t used; 	\/\/buffer中数据的长度$/;"	m	struct:__anon88
used	buffer.h	/^	size_t used; 	\/\/buffer数组中数据的个数$/;"	m	struct:__anon89
used	fdevent.h	/^	size_t used;$/;"	m	struct:__anon6
used	fdevent.h	/^	size_t used;$/;"	m	struct:__anon7
used	fdevent.h	/^	size_t used;$/;"	m	struct:fdevents
used	mod_accesslog.c	/^	size_t used;$/;"	m	struct:__anon68	file:
used	mod_cgi.c	/^	size_t used;$/;"	m	struct:__anon110	file:
used	mod_cgi.c	/^	size_t used;$/;"	m	struct:__anon111	file:
used	mod_dirlisting.c	/^	size_t used;$/;"	m	struct:__anon83	file:
used	mod_dirlisting.c	/^	size_t used;$/;"	m	struct:__anon87	file:
used	mod_fastcgi.c	/^	size_t used;$/;"	m	struct:__anon184	file:
used	mod_fastcgi.c	/^	size_t used;$/;"	m	struct:__anon185	file:
used	mod_fastcgi.c	/^	size_t used;$/;"	m	struct:__anon187	file:
used	mod_fastcgi.c	/^	size_t used;$/;"	m	struct:__anon188	file:
used	mod_magnet_cache.h	/^	size_t used;$/;"	m	struct:__anon156
used	mod_rewrite.c	/^	size_t used;$/;"	m	struct:__anon124	file:
used	mod_scgi.c	/^	size_t used;$/;"	m	struct:__anon172	file:
used	mod_scgi.c	/^	size_t used;$/;"	m	struct:__anon173	file:
used	mod_scgi.c	/^	size_t used;$/;"	m	struct:__anon175	file:
used	mod_webdav.c	/^	size_t used;$/;"	m	struct:__anon54	file:
used	stat_cache.c	/^	size_t used;$/;"	m	struct:__anon134	file:
username	base.h	/^	buffer *username;$/;"	m	struct:__anon42
username	mod_userdir.c	/^	buffer *username;$/;"	m	struct:__anon208	file:
val	mod_ssi_expr.h	/^	ssi_val_t val;$/;"	m	struct:__anon96
value	array.h	/^	array *value;$/;"	m	struct:__anon150
value	array.h	/^	array *value;$/;"	m	struct:_data_config
value	array.h	/^	buffer *value;$/;"	m	struct:__anon149
value	array.h	/^	int value;$/;"	m	struct:__anon153
value	base.h	/^	char *value;$/;"	m	struct:__anon21
value	keyvalue.h	/^	buffer *value;$/;"	m	struct:__anon161
value	keyvalue.h	/^	char *value;$/;"	m	struct:__anon159
value	keyvalue.h	/^	char *value;$/;"	m	struct:__anon160
value	mod_rewrite.c	/^	buffer *value;$/;"	m	struct:__anon123	file:
value	server.h	/^	char *value;$/;"	m	struct:__anon47
vardest	lemon.c	/^	char *vardest;				\/* Code for the default non-terminal destructor $/;"	m	struct:lemon	file:
vardestln	lemon.c	/^	int vardestln;				\/* Line number for default non-term destructor$/;"	m	struct:lemon	file:
varline	configparser.y	/^varline:: = key(A)$/;"	l
vartype	lemon.c	/^	char *vartype;				\/* The default type of non-terminal symbols *\/$/;"	m	struct:lemon	file:
version	fastcgi.h	/^	unsigned char version;$/;"	m	struct:__anon116
version	plugin.h	/^	size_t version;$/;"	m	struct:__anon79
version	stat_cache.c	/^	int version;$/;"	m	struct:__anon133	file:
want_fds	base.h	/^	int want_fds;				\/* waiting fds *\/$/;"	m	struct:server
wb	mod_fastcgi.c	/^	chunkqueue *wb;				\/* write queue *\/$/;"	m	struct:__anon191	file:
wb	mod_proxy.c	/^	chunkqueue *wb;$/;"	m	struct:__anon105	file:
wb	mod_scgi.c	/^	chunkqueue *wb;$/;"	m	struct:__anon178	file:
webdav_copy_dir	mod_webdav.c	/^webdav_copy_dir(server * srv, connection * con, plugin_data * p,$/;"	f	file:
webdav_copy_file	mod_webdav.c	/^webdav_copy_file(server * srv, connection * con, plugin_data * p,$/;"	f	file:
webdav_delete_dir	mod_webdav.c	/^webdav_delete_dir(server * srv, connection * con, plugin_data * p,$/;"	f	file:
webdav_delete_file	mod_webdav.c	/^webdav_delete_file(server * srv, connection * con, plugin_data * p,$/;"	f	file:
webdav_gen_prop_tag	mod_webdav.c	/^webdav_gen_prop_tag(server * srv, connection * con,$/;"	f	file:
webdav_gen_response_status_tag	mod_webdav.c	/^webdav_gen_response_status_tag(server * srv, connection * con,$/;"	f	file:
webdav_get_live_property	mod_webdav.c	/^webdav_get_live_property(server * srv, connection * con, plugin_data * p,$/;"	f	file:
webdav_get_property	mod_webdav.c	/^webdav_get_property(server * srv, connection * con, plugin_data * p,$/;"	f	file:
webdav_get_props	mod_webdav.c	/^webdav_get_props(server * srv, connection * con, plugin_data * p,$/;"	f	file:
webdav_has_lock	mod_webdav.c	/^webdav_has_lock(server * srv, connection * con, plugin_data * p, buffer * uri)$/;"	f
webdav_lockdiscovery	mod_webdav.c	/^webdav_lockdiscovery(server * srv, connection * con,$/;"	f
webdav_parse_chunkqueue	mod_webdav.c	/^webdav_parse_chunkqueue(server * srv, connection * con, plugin_data * p,$/;"	f	file:
webdav_properties	mod_webdav.c	/^} webdav_properties;$/;"	t	typeref:struct:__anon54	file:
webdav_property	mod_webdav.c	/^} webdav_property;$/;"	t	typeref:struct:__anon53	file:
write_fd	mod_rrdtool.c	/^	int read_fd, write_fd;$/;"	m	struct:__anon218	file:
write_queue	base.h	/^	chunkqueue *write_queue;	\/* a large queue for low-level write ( HTTP $/;"	m	struct:__anon35
write_request_ts	base.h	/^	time_t write_request_ts;$/;"	m	struct:__anon35
x	lemon.c	/^	} x;$/;"	m	struct:action	typeref:union:action::__anon200	file:
x1a	lemon.c	/^static struct s_x1 *x1a;$/;"	v	typeref:struct:s_x1	file:
x1node	lemon.c	/^} x1node;$/;"	t	typeref:struct:s_x1node	file:
x2a	lemon.c	/^static struct s_x2 *x2a;$/;"	v	typeref:struct:s_x2	file:
x2node	lemon.c	/^} x2node;$/;"	t	typeref:struct:s_x2node	file:
x3a	lemon.c	/^static struct s_x3 *x3a;$/;"	v	typeref:struct:s_x3	file:
x3node	lemon.c	/^} x3node;$/;"	t	typeref:struct:s_x3node	file:
x4a	lemon.c	/^static struct s_x4 *x4a;$/;"	v	typeref:struct:s_x4	file:
x4node	lemon.c	/^} x4node;$/;"	t	typeref:struct:s_x4node	file:
yy0	configparser.c	/^	configparserTOKENTYPE yy0;$/;"	m	union:__anon144	file:
yy0	mod_ssi_exprparser.c	/^	ssiexprparserTOKENTYPE yy0;$/;"	m	union:__anon202	file:
yy19	mod_ssi_exprparser.c	/^	buffer *yy19;$/;"	m	union:__anon202	file:
yy27	configparser.c	/^	config_cond_t yy27;$/;"	m	union:__anon144	file:
yy29	mod_ssi_exprparser.c	/^	ssi_val_t *yy29;$/;"	m	union:__anon202	file:
yy39	mod_ssi_exprparser.c	/^	int yy39;$/;"	m	union:__anon202	file:
yy40	configparser.c	/^	array *yy40;$/;"	m	union:__anon144	file:
yy41	configparser.c	/^	data_unset *yy41;$/;"	m	union:__anon144	file:
yy43	configparser.c	/^	buffer *yy43;$/;"	m	union:__anon144	file:
yy78	configparser.c	/^	data_config *yy78;$/;"	m	union:__anon144	file:
yy8	mod_ssi_exprparser.c	/^	int yy8;$/;"	m	union:__anon202	file:
yy95	configparser.c	/^	int yy95;$/;"	m	union:__anon144	file:
yyFallback	configparser.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyFallback	lempar.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyFallback	mod_ssi_exprparser.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyParser	configparser.c	/^struct yyParser {$/;"	s	file:
yyParser	configparser.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyParser	lempar.c	/^struct yyParser {$/;"	s	file:
yyParser	lempar.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyParser	mod_ssi_exprparser.c	/^struct yyParser {$/;"	s	file:
yyParser	mod_ssi_exprparser.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyRuleInfo	configparser.c	/^} yyRuleInfo[] =$/;"	v	typeref:struct:__anon145	file:
yyRuleInfo	lempar.c	/^} yyRuleInfo[] =$/;"	v	typeref:struct:__anon143	file:
yyRuleInfo	mod_ssi_exprparser.c	/^} yyRuleInfo[] =$/;"	v	typeref:struct:__anon203	file:
yyRuleName	configparser.c	/^static const char *yyRuleName[] = {$/;"	v	file:
yyRuleName	lempar.c	/^static const char *yyRuleName[] = {$/;"	v	file:
yyRuleName	mod_ssi_exprparser.c	/^static const char *yyRuleName[] = {$/;"	v	file:
yyStackEntry	configparser.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	configparser.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackEntry	lempar.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	lempar.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackEntry	mod_ssi_exprparser.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	mod_ssi_exprparser.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyTokenName	configparser.c	/^static const char *yyTokenName[] = {$/;"	v	file:
yyTokenName	lempar.c	/^static const char *yyTokenName[] = {$/;"	v	file:
yyTokenName	mod_ssi_exprparser.c	/^static const char *yyTokenName[] = {$/;"	v	file:
yyTraceFILE	configparser.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTraceFILE	lempar.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTraceFILE	mod_ssi_exprparser.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTracePrompt	configparser.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yyTracePrompt	lempar.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yyTracePrompt	mod_ssi_exprparser.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yy_accept	configparser.c	/^static void yy_accept(yyParser * yypParser	\/* The parser *\/$/;"	f	file:
yy_accept	lempar.c	/^static void yy_accept(yyParser * yypParser	\/* The parser *\/$/;"	f	file:
yy_accept	mod_ssi_exprparser.c	/^static void yy_accept(yyParser * yypParser	\/* The parser *\/$/;"	f	file:
yy_action	configparser.c	/^static YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_action	mod_ssi_exprparser.c	/^static YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_default	configparser.c	/^static YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_default	mod_ssi_exprparser.c	/^static YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_destructor	configparser.c	/^static void yy_destructor(YYCODETYPE yymajor, YYMINORTYPE * yypminor)$/;"	f	file:
yy_destructor	lempar.c	/^static void yy_destructor(YYCODETYPE yymajor, YYMINORTYPE * yypminor)$/;"	f	file:
yy_destructor	mod_ssi_exprparser.c	/^static void yy_destructor(YYCODETYPE yymajor, YYMINORTYPE * yypminor)$/;"	f	file:
yy_find_reduce_action	configparser.c	/^static int yy_find_reduce_action(yyParser * pParser,	\/* The parser *\/$/;"	f	file:
yy_find_reduce_action	lempar.c	/^static int yy_find_reduce_action(yyParser * pParser,	\/* The parser *\/$/;"	f	file:
yy_find_reduce_action	mod_ssi_exprparser.c	/^static int yy_find_reduce_action(yyParser * pParser,	\/* The parser *\/$/;"	f	file:
yy_find_shift_action	configparser.c	/^static int yy_find_shift_action(yyParser * pParser,	\/* The parser *\/$/;"	f	file:
yy_find_shift_action	lempar.c	/^static int yy_find_shift_action(yyParser * pParser,	\/* The parser *\/$/;"	f	file:
yy_find_shift_action	mod_ssi_exprparser.c	/^static int yy_find_shift_action(yyParser * pParser,	\/* The parser *\/$/;"	f	file:
yy_lookahead	configparser.c	/^static YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_lookahead	mod_ssi_exprparser.c	/^static YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_parse_failed	configparser.c	/^static void yy_parse_failed(yyParser * yypParser	\/* The parser *\/$/;"	f	file:
yy_parse_failed	lempar.c	/^static void yy_parse_failed(yyParser * yypParser	\/* The parser *\/$/;"	f	file:
yy_parse_failed	mod_ssi_exprparser.c	/^static void yy_parse_failed(yyParser * yypParser	\/* The parser *\/$/;"	f	file:
yy_pop_parser_stack	configparser.c	/^static int yy_pop_parser_stack(yyParser * pParser)$/;"	f	file:
yy_pop_parser_stack	lempar.c	/^static int yy_pop_parser_stack(yyParser * pParser)$/;"	f	file:
yy_pop_parser_stack	mod_ssi_exprparser.c	/^static int yy_pop_parser_stack(yyParser * pParser)$/;"	f	file:
yy_reduce	configparser.c	/^static void yy_reduce(yyParser * yypParser,	\/* The parser *\/$/;"	f	file:
yy_reduce	lempar.c	/^static void yy_reduce(yyParser * yypParser,	\/* The parser *\/$/;"	f	file:
yy_reduce	mod_ssi_exprparser.c	/^static void yy_reduce(yyParser * yypParser,	\/* The parser *\/$/;"	f	file:
yy_reduce_ofst	configparser.c	/^static signed char yy_reduce_ofst[] = {$/;"	v	file:
yy_reduce_ofst	mod_ssi_exprparser.c	/^static signed char yy_reduce_ofst[] = {$/;"	v	file:
yy_shift	configparser.c	/^static void yy_shift(yyParser * yypParser,	\/* The parser to be shifted *\/$/;"	f	file:
yy_shift	lempar.c	/^static void yy_shift(yyParser * yypParser,	\/* The parser to be shifted *\/$/;"	f	file:
yy_shift	mod_ssi_exprparser.c	/^static void yy_shift(yyParser * yypParser,	\/* The parser to be shifted *\/$/;"	f	file:
yy_shift_ofst	configparser.c	/^static signed char yy_shift_ofst[] = {$/;"	v	file:
yy_shift_ofst	mod_ssi_exprparser.c	/^static signed char yy_shift_ofst[] = {$/;"	v	file:
yy_syntax_error	configparser.c	/^static void yy_syntax_error(yyParser * yypParser,	\/* The parser *\/$/;"	f	file:
yy_syntax_error	lempar.c	/^static void yy_syntax_error(yyParser * yypParser,	\/* The parser *\/$/;"	f	file:
yy_syntax_error	mod_ssi_exprparser.c	/^static void yy_syntax_error(yyParser * yypParser,	\/* The parser *\/$/;"	f	file:
yyerrcnt	configparser.c	/^	int yyerrcnt;				\/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyerrcnt	lempar.c	/^	int yyerrcnt;				\/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyerrcnt	mod_ssi_exprparser.c	/^	int yyerrcnt;				\/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyidx	configparser.c	/^	int yyidx;					\/* Index of top element in stack *\/$/;"	m	struct:yyParser	file:
yyidx	lempar.c	/^	int yyidx;					\/* Index of top element in stack *\/$/;"	m	struct:yyParser	file:
yyidx	mod_ssi_exprparser.c	/^	int yyidx;					\/* Index of top element in stack *\/$/;"	m	struct:yyParser	file:
yystack	configparser.c	/^	 yyStackEntry yystack[YYSTACKDEPTH];	\/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystack	lempar.c	/^	 yyStackEntry yystack[YYSTACKDEPTH];	\/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystack	mod_ssi_exprparser.c	/^	 yyStackEntry yystack[YYSTACKDEPTH];	\/* The parser's stack *\/$/;"	m	struct:yyParser	file:
